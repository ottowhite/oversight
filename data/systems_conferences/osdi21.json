[
  {
    "title": "Pollux: Co-adaptive Cluster Scheduling for Goodput-Optimized Deep Learning",
    "authors": "Aurick Qiao,Petuum, Inc. and Carnegie Mellon University;Sang Keun Choe and Suhas Jayaram Subramanya,Carnegie Mellon University;Willie Neiswanger,Petuum, Inc. and Carnegie Mellon University;Qirong Ho,Petuum, Inc.;Hao Zhang,Petuum, Inc. and UC Berkeley;Gregory R. Ganger,Carnegie Mellon University;Eric P. Xing,MBZUAI, Petuum, Inc., and Carnegie Mellon University",
    "abstract": "Pollux improves scheduling performance in deep learning (DL) clusters by adaptively co-optimizing inter-dependent factors both at the per-job level and at the cluster-wide level. Most existing schedulers expect users to specify the number of resources for each job, often leading to inefficient resource use. Some recent schedulers choose job resources for users, but do so without awareness of how DL training can be re-optimized to better utilize the provided resources.\nPollux simultaneously considers both aspects. By monitoring the status of each job during training, Pollux models how theirgoodput(a novel metric we introduce that combines system throughput with statistical efficiency) would change by adding or removing resources. Leveraging these information, Pollux dynamically (re-)assigns resources to improve cluster-wide goodput, while respecting fairness and continually optimizing each DL job to better utilize those resources.\nIn experiments with real DL jobs and with trace-driven simulations, Pollux reduces average job completion times by 37-50% relative to state-of-the-art DL schedulers, even when they are provided with ideal resource and training configurations for every job. Pollux promotes fairness among DL jobs competing for resources based on a more meaningful measure ofusefuljob progress, and reveals a new opportunity for reducing DL cost in cloud environments. Pollux  is implemented and publicly available as part of an open-source project athttps://github.com/petuum/adaptdl.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/qiao",
    "session_title": "Optimizations and Scheduling for Machine Learning",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "3caeac21-c405-48cd-a83c-bb17a4b06b21"
  },
  {
    "title": "Oort: Efficient Federated Learning via Guided Participant Selection",
    "authors": "Fan Lai, Xiangfeng Zhu, Harsha V. Madhyastha, and Mosharaf Chowdhury,University of Michigan",
    "abstract": "Federated Learning (FL) is an emerging direction in distributed machine learning (ML) that enables in-situ model training and testing on edge data. Despite having the same end goals as traditional ML, FL executions differ significantly in scale, spanning thousands to millions of participating devices. As a result, data characteristics and device capabilities vary widely across clients. Yet, existing efforts randomly select FL participants, which leads to poor model and system efficiency.\nIn this paper, we propose Oort to improve the performance of federated training and testing with guided participant selection. With an aim to improve time-to-accuracy performance in model training, Oort prioritizes the use of those clients who have both data that offers the greatest utility in improving model accuracy and the capability to run training quickly. To enable FL developers to interpret their results in model testing, Oort enforces their requirements on the distribution of participant data while improving the duration of federated testing by cherry-picking clients. Our evaluation shows that, compared to existing participant selection mechanisms, Oort improves time-to-accuracy performance by 1.2X-14.1X and final model accuracy by 1.3%-9.8%, while efficiently enforcing developer-specified model testing criteria at the scale of millions of clients.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/lai",
    "session_title": "Optimizations and Scheduling for Machine Learning",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "49d946f2-08f0-48ad-96eb-9ecf960a64e3"
  },
  {
    "title": "PET: Optimizing Tensor Programs with Partially Equivalent Transformations and Automated Corrections",
    "authors": "Haojie Wang, Jidong Zhai, Mingyu Gao, Zixuan Ma, Shizhi Tang, and Liyan Zheng,Tsinghua University;Yuanzhi Li,Carnegie Mellon University;Kaiyuan Rong and Yuanyong Chen,Tsinghua University;Zhihao Jia,Carnegie Mellon University and Facebook",
    "abstract": "High-performance tensor programs are critical for efficiently deploying deep neural network (DNN) models in real-world tasks. Existing frameworks optimize tensor programs by applying fully equivalent transformations, which maintain equivalence on every element of output tensors. This approach misses possible optimization opportunities as transformations that only preserve equivalence on subsets of the output tensors are excluded.\nWe propose PET, the first DNN framework that optimizes tensor programs with partially equivalent transformations and automated corrections. PET discovers and applies program transformations that improve computation efficiency but only maintain partial functional equivalence. PET then automatically corrects results to restore full equivalence. We develop rigorous theoretical foundations to simplify equivalence examination and correction for partially equivalent transformations, and design an efficient search algorithm to quickly discover highly optimized programs by combining fully and partially equivalent optimizations at the tensor, operator, and graph levels. Our evaluation shows that PET outperforms existing systems by up to 2.5×, by unlocking previously missed opportunities from partially equivalent transformations.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/wang",
    "session_title": "Optimizations and Scheduling for Machine Learning",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "64223f58-eb16-487f-90ef-60c82c1ac853"
  },
  {
    "title": "Privacy Budget Scheduling",
    "authors": "Tao Luo, Mingen Pan, Pierre Tholoniat, Asaf Cidon, and Roxana Geambasu,Columbia University;Mathias Lécuyer,Microsoft Research",
    "abstract": "Machine learning (ML) models trained on personal data have been shown to leak information about users. Differential privacy (DP) enables model training with a guaranteed bound on this leakage. Each new model trained with DP increases the bound on data leakage and can be seen as consuming part of a global privacy budget that should not be exceeded. This budget is a scarce resource that must be carefully managed to maximize the number of successfully trained models.\nWe describe PrivateKube, an extension to the popular Kubernetes datacenter orchestrator that adds privacy as a new type of resource to be managed alongside other traditional compute resources, such as CPU, GPU, and memory. The abstractions we design for the privacy resource mirror those defined by Kubernetes for traditional resources, but there are also major differences. For example, traditional compute resources are replenishable while privacy is not: a CPU can be regained after a model finishes execution while privacy budget cannot. This distinction forces a re-design of the scheduler. We present DPF (Dominant Private Block Fairness) –a variant of the popular Dominant Resource Fairness (DRF) algorithm–that is geared toward the non-replenishable privacy resource but enjoys similar theoretical properties as DRF.\nWe evaluate PrivateKube and DPF on microbenchmarks and an ML workload on Amazon Reviews data. Compared to existing baselines, DPF allows training more models under the same global privacy guarantee. This is especially true for DPF over Rényi DP, a highly composable form of DP.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/luo",
    "session_title": "Optimizations and Scheduling for Machine Learning",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "f57e951f-1bc6-4a9d-94d6-8fd5ccce9b9e"
  },
  {
    "title": "Modernizing File System through In-Storage Indexing",
    "authors": "Jinhyung Koo, Junsu Im, Jooyoung Song, and Juhyung Park,DGIST;Eunji Lee,Soongsil University;Bryan S. Kim,Syracuse University;Sungjin Lee,DGIST",
    "abstract": "We argue that a key-value interface between a file system and an SSD is superior to the legacy block interface by presenting KEVIN. KEVIN combines a fast, lightweight, and POSIX compliant file system with a key-value storage device that performs in-storage indexing. We implement a variant of a log-structured merge tree in the storage device that not only indexes file objects, but also supports transactions and manages physical storage space. As a result, the design of a file system with respect to space management and crash consistency is simplified, requiring only 10.8K LOC for full functionality. We demonstrate that KEVIN reduces the amount of I/O traffic between the host and the device, and remains particularly robust as the system ages and the data become fragmented. Our approach outperforms existing file systems on a block SSD by a wide margin – 6.2× on average – for metadata-intensive benchmarks. For realistic workloads, KEVIN improves throughput by 68% on average.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/koo",
    "session_title": "Storage",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "0fb248bd-d189-47a3-a9b9-0b0cda850e97"
  },
  {
    "title": "Nap: A Black-Box Approach to NUMA-Aware Persistent Memory Indexes",
    "authors": "Qing Wang, Youyou Lu, Junru Li, and Jiwu Shu,Tsinghua University",
    "abstract": "We presentNap, a black-box approach that converts concurrent persistent memory (PM) indexes into NUMA-aware counterparts. Based on the observation that real-world workloads always feature skewed access patterns,Napintroduces a NUMA-aware layer (NAL) on the top of existing concurrent PM indexes, and steers accesses to hot items to this layer. The NAL maintains 1) per-node partial views in PM for serving insert/update/delete operations with failure atomicity and 2) a global view in DRAM for serving lookup operations. The NAL eliminates remote PM accesses to hot items without inducing extra local PM accesses. Moreover, to handle dynamic workloads,Napadopts a fast NAL switch mechanism. We convert five state-of-the-art PM indexes usingNap. Evaluation on a four-node machine with Optane DC Persistent Memory shows thatNapcan improve the throughput by up to 2.3✕ and 1.56✕ under write-intensive and read-intensive workloads, respectively.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/wang-qing",
    "session_title": "Storage",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "bf6c91e4-d59a-44d3-b4cf-6140c75d463b"
  },
  {
    "title": "Rearchitecting Linux Storage Stack for µs Latency and High Throughput",
    "authors": "Jaehyun Hwang and Midhul Vuppalapati,Cornell University;Simon Peter,UT Austin;Rachit Agarwal,Cornell University",
    "abstract": "This paper demonstrates that it is possible to achieve μs-scale latency using Linux kernel storage stack, even when tens of latency-sensitive applications compete for host resources with throughput-bound applications that perform read/write operations at throughput close to hardware capacity. Furthermore, such performance can be achieved without any modification in applications, network hardware, kernel CPU schedulers and/or kernel network stack.\nWe demonstrate the above using design, implementation and evaluation ofblk-switch, a new Linux kernel storage stack architecture. The key insight inblk-switchis that Linux's multi-queue storage design, along with multi-queue network and storage hardware, makes the storage stack conceptually similar to a network switch.blk-switchuses this insight to adapt techniques from the computer networking literature (e.g., multiple egress queues, prioritized processing of individual requests, load balancing, and switch scheduling) to the Linux kernel storage stack.\nblk-switch evaluation over a variety of scenarios shows that it consistently achieves μs-scale average and tail latency (at both 99thand 99.9thpercentiles), while allowing applications to near-perfectly utilize the hardware capacity.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/hwang",
    "session_title": "Storage",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "40a54f89-57bd-4601-abb0-b067df21e940"
  },
  {
    "title": "Optimizing Storage Performance with Calibrated Interrupts",
    "authors": "Amy Tai,VMware Research;Igor Smolyar,Technion — Israel Institute of Technology;Michael Wei,VMware Research;Dan Tsafrir,Technion — Israel Institute of Technology and VMware Research",
    "abstract": "After request completion, an I/O device must decide either to minimize latency by immediately firing an interrupt or to optimize for throughput by delaying the interrupt, anticipating that more requests will complete soon and help amortize the interrupt cost. Devices employ adaptive interrupt coalescing heuristics that try to balance between these opposing goals. Unfortunately, because devices lack the semantic information about which I/O requests are latency-sensitive, these heuristics can sometimes lead to disastrous results.\nInstead, we propose addressing the root cause of the heuristics problem by allowing software to explicitly specify to the device if submitted requests are latency-sensitive.  The device then \"calibrates\" its interrupts to completions of latency-sensitive requests. We focus on NVMe storage devices and show that it is natural to express these semantics in the kernel and the application and only requires a modest two-bit change to the device interface. Calibrated interrupts increase throughput by up to 35%, reduce CPU consumption by as much as 30%, and achieve up to 37% lower latency when interrupts are coalesced.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/tai",
    "session_title": "Storage",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "9f5eaf5a-0f97-470a-9927-ec7a4fe82b2f"
  },
  {
    "title": "ZNS+: Advanced Zoned Namespace Interface for Supporting In-Storage Zone Compaction",
    "authors": "Kyuhwa Han,Sungkyunkwan University and Samsung Electronics;Hyunho Gwak and Dongkun Shin,Sungkyunkwan University;Jooyoung Hwang,Samsung Electronics",
    "abstract": "The NVMe zoned namespace (ZNS) is emerging as a new storage interface, where the logical address space is divided into fixed-sized zones, and each zone must be written sequentially for flash-memory-friendly access. Owing to the sequential write-only zone scheme of the ZNS, the log-structured file system (LFS) is required to access ZNS solid-state drives (SSDs). Although SSDs can be simplified under the current ZNS interface, its counterpart LFS must bear segment compaction overhead. To resolve the problem, we propose a new LFS-aware ZNS interface, called ZNS+, and its implementation, where the host can offload data copy operations to the SSD to accelerate segment compaction. The ZNS+ also allows each zone to be overwritten with sparse sequential write requests, which enables the LFS to use threaded logging-based block reclamation instead of segment compaction. We also propose two file system techniques for ZNS+-aware LFS. The copyback-aware block allocation considers different copy costs at different copy paths within the SSD. The hybrid segment recycling chooses a proper block reclaiming policy between segment compaction and threaded logging based on their costs. We implemented the ZNS+ SSD at an SSD emulator and a real SSD. The file system performance of the proposed ZNS+ storage system was 1.33--2.91 times better than that of the normal ZNS-based storage system.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/han",
    "session_title": "Storage",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "309f5c0e-20c8-4d52-9f9e-499f887f9688"
  },
  {
    "title": "DMon: Efficient Detection and Correction of Data Locality Problems Using Selective Profiling",
    "authors": "Tanvir Ahmed Khan and Ian Neal,University of Michigan;Gilles Pokam,Intel Corporation;Barzan Mozafari and Baris Kasikci,University of Michigan",
    "abstract": "Poor data locality hurts an application's performance. While compiler-based techniques have been proposed to improve data locality, they depend on heuristics, which can sometimes hurt performance. Therefore, developers typically find data locality issues via dynamic profiling and repair them manually. Alas, existing profiling techniques incur high overhead when used to identify data locality problems and cannot be deployed in production, where programs may exhibit previously-unseen performance problems.\nWe present selective profiling, a technique that locates data locality problems with low-enough overhead that is suitable for production use. To achieve low overhead, selective profiling gathers runtime execution information selectively and incrementally. Using selective profiling, we build DMon, a system that can automatically locate data locality problems in production, identify access patterns that hurt locality, and repair such patterns using targeted optimizations.\nThanks to selective profiling, DMon’s profiling overhead is 1.36% on average, making it feasible for production use. DMon’s targeted optimizations provide 16.83% speedup on average (up to 53.14%), compared to a baseline that uses the highest level of compiler optimization. DMon speeds up PostgreSQL, one of the most popular database systems, by 6.64% on average (up to 17.48%).",
    "link": "https://www.usenix.org/conference/osdi21/presentation/khan",
    "session_title": "Data Management",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "13837289-08d8-4787-bbbe-15e4f6adeb77"
  },
  {
    "title": "CLP: Efficient and Scalable Search on Compressed Text Logs",
    "authors": "Kirk Rodrigues, Yu Luo, and Ding Yuan,University of Toronto and YScope Inc.",
    "abstract": "This paper presents the design and implementation of CLP, a tool capable of losslessly compressing unstructured text logs while enabling fast searches directly on the compressed data. Log search and log archiving, despite being critical problems, are mutually exclusive. Widely used log-search tools like Elasticsearch and Splunk Enterprise index the logs to provide fast search performance, yet the size of the index is within the same order of magnitude as the raw log size. Commonly used log archival and compression tools like Gzip provide high compression ratio, yet searching archived logs is a slow and painful process as it first requires decompressing the logs. In contrast, CLP achieves significantly higher compression ratio than all commonly used compressors, yet delivers fast search performance that is comparable or even better than Elasticsearch and Splunk Enterprise. In addition, CLP outperforms Elasticsearch and Splunk Enterprise's log ingestion performance by over 13x, and we show CLP scales to petabytes of logs. CLP's gains come from using a tuned, domain-specific compression and search algorithm that exploits the significant amount of repetition in text logs. Hence, CLP enables efficient search and analytics on archived logs, something that was impossible without it.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/rodrigues",
    "session_title": "Data Management",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "cf715081-2c0f-4bd4-a250-f6e22382031f"
  },
  {
    "title": "Polyjuice: High-Performance Transactions via Learned Concurrency Control",
    "authors": "Jiachen Wang,Institute of Parallel and Distributed Systems, Shanghai Jiao Tong University; Shanghai AI Laboratory; Engineering Research Center for Domain-specific Operating Systems, Ministry of Education, China;Ding Ding,Department of Computer Science, New York University;Huan Wang,Institute of Parallel and Distributed Systems, Shanghai Jiao Tong University; Shanghai AI Laboratory; Engineering Research Center for Domain-specific Operating Systems, Ministry of Education, China;Conrad Christensen,Department of Computer Science, New York University;Zhaoguo Wang and Haibo Chen,Institute of Parallel and Distributed Systems, Shanghai Jiao Tong University; Shanghai AI Laboratory; Engineering Research Center for Domain-specific Operating Systems, Ministry of Education, China;Jinyang Li,Department of Computer Science, New York University",
    "abstract": "Concurrency control algorithms are key determinants of the performance of in-memory databases. Existing algorithms are designed to work well for certain workloads. For example, optimistic concurrency control (OCC) is better than two-phase-locking (2PL) under low contention, while the converse is true under high contention.\nTo adapt to different workloads, prior works mix or switch between a few known algorithms using manual insights or simple heuristics.  We propose a learning-based framework that instead explicitly optimizes concurrency control via offline training to maximize performance. Instead of choosing among a small number of known algorithms, our approach searches in a \"policy space\" of fine-grained actions, resulting in novel algorithms that can outperform existing algorithms by specializing to a given workload.\nWe build Polyjuice based on our learning framework and evaluate it against several existing algorithms. Under different configurations of TPC-C and TPC-E, Polyjuice can achieve throughput numbers higher than the best of existing algorithms by 15% to 56%.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/wang-jiachen",
    "session_title": "Data Management",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "e6b7d800-2d8f-4699-b630-ef07f4fdb8b7"
  },
  {
    "title": "Retrofitting High Availability Mechanism to Tame Hybrid Transaction/Analytical Processing",
    "authors": "Sijie Shen, Rong Chen, Haibo Chen, and Binyu Zang,Institute of Parallel and Distributed Systems, Shanghai Jiao Tong University; Shanghai Artificial Intelligence Laboratory; Engineering Research Center for Domain-specific Operating Systems, Ministry of Education, China",
    "abstract": "Many application domains can benefit from hybrid transaction/analytical processing (HTAP) by executing queries on real-time datasets produced by concurrent transactions. However, with the increasingly speedy transactions and queries thanks to large memory and fast interconnect, commodity HTAP systems have to make a tradeoff between data freshness and performance degradation. Fortunately, we observe that the backups for high availability in modern distributed OLTP systems can be retrofitted to bridge the analytical queries and transactions in HTAP workloads. In this paper, we presentVegito, a distributed in-memory HTAP system that embraces freshness and performance with the following three techniques: (1) a lightweight gossip-style scheme to apply logs on backups consistently; (2) a block-based design for multi-version columnar backups; (3) a two-phase concurrent updating mechanism for the tree-based index of backups. They collectively make the backup fresh, columnar, and fault-tolerant, even facing millions of concurrent transactions per second. Evaluations show thatVegitocan perform 1.9 million TPC-CNewOrdertransactions and 24 TPC-H-equivalent queries per second simultaneously, which retain the excellent performance of specialized OLTP and OLAP counterparts (e.g., DrTM+H and MonetDB). These results outperform state-of-the-art HTAP systems by several orders of magnitude on transactional performance, while just incurring little performance slowdown (5% over pure OLTP workloads) and still enjoying data freshness for analytical queries (less than 20 ms of maximum delay) in the failure-free case. Further,Vegitocan recover from cascading machine failures by using the columnar backup in less than 60 ms.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/shen",
    "session_title": "Data Management",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "a799e1ff-45e0-42d0-aa9d-b90f91989cd7"
  },
  {
    "title": "The nanoPU: A Nanosecond Network Stack for Datacenters",
    "authors": "Stephen Ibanez, Alex Mallery, Serhat Arslan, and Theo Jepsen,Stanford University;Muhammad Shahbaz,Purdue University;Changhoon Kim and Nick McKeown,Stanford University",
    "abstract": "We present the nanoPU, a new NIC-CPU co-design to accelerate an increasingly pervasive class of datacenter applications: those that utilize many small Remote Procedure Calls (RPCs) with very short (μs-scale) processing times. The novel aspect of the nanoPU is the design of afast pathbetween the network and applications---bypassing the cache and memory hierarchy, and placing arriving messages directly into the CPU register file. This fast path contains programmable hardware support for low latency transport and congestion control as well as hardware support for efficient load balancing of RPCs to cores. A hardware-accelerated thread scheduler makes sub-nanosecond decisions, leading to high CPU utilization and low tail response time for RPCs.\nWe built an FPGA prototype of the nanoPU fast path by modifying an open-source RISC-V CPU, and evaluated its performance using cycle-accurate simulations on AWS FPGAs. The wire-to-wire RPC response time through the nanoPU is just 69ns, an order of magnitude quicker than the best-of-breed, low latency, commercial NICs. We demonstrate that the hardware thread scheduler is able to lower RPC tail response time by about 5✕ while enabling the system to sustain 20% higher load, relative to traditional thread scheduling techniques. We implement and evaluate a suite of applications, including MICA, Raft and Set Algebra for document retrieval; and we demonstrate that the nanoPU can be used as a high performance, programmable alternative for one-sided RDMA operations.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/ibanez",
    "session_title": "Operating Systems and Hardware",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "7958de3a-55a2-4aab-8343-5f4a0181cab3"
  },
  {
    "title": "Beyond malloc efficiency to fleet efficiency: a hugepage-aware memory allocator",
    "authors": "A.H. Hunter,Jane Street Capital;Chris Kennelly, Paul Turner, Darryl Gove, Tipp Moseley, and Parthasarathy Ranganathan,Google",
    "abstract": "Memory allocation represents significant compute cost at the warehouse scale and its optimization can yield considerable cost savings. One classical approach is to increase the efficiency of an allocator to minimize the cycles spent in the allocator code. However, memory allocation decisions also impact overall application performance via data placement, offering opportunities to improve fleetwide productivity by completing more units of application work using fewer hardware resources. Here, we focus on hugepage coverage. We present TEMERAIRE, a hugepage-aware enhancement of TCMALLOC to reduce CPU overheads in the application’s code. We discuss the design and implementation of TEMERAIRE including strategies for hugepage-aware memory layouts to maximize hugepage coverage and to minimize fragmentation overheads. We present application studies for 8 applications, improving requests-per-second (RPS) by 7.7% and reducing RAM usage 2.4%. We present the results of a 1% experiment at fleet scale as well as the longitudinal rollout in Google’s warehouse scale computers. This yielded 6% fewer TLB miss stalls, and 26% reduction in memory wasted due to fragmentation. We conclude with a discussion of additional techniques for improving the allocator development process and potential optimization strategies for future memory allocators.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/hunter",
    "session_title": "Operating Systems and Hardware",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "8f9153e9-255c-4ae2-9be8-18b2c7442209"
  },
  {
    "title": "Scalable Memory Protection in the PENGLAI Enclave",
    "authors": "Erhu Feng, Xu Lu, Dong Du, Bicheng Yang, and Xueqiang Jiang,Institute of Parallel and Distributed Systems, Shanghai Jiao Tong University; Engineering Research Center for Domain-specific Operating Systems, Ministry of Education, China;Yubin Xia, Binyu Zang, and Haibo Chen,Institute of Parallel and Distributed Systems, Shanghai Jiao Tong University; Shanghai AI Laboratory; Engineering Research Center for Domain-specific Operating Systems, Ministry of Education, China",
    "abstract": "Secure hardware enclaves have been widely used for protecting security-critical applications in the cloud. However, existing enclave designs fail to meet the requirements of scalability demanded by new scenarios like serverless computing, mainly due to the limitations in their secure memory protection mechanisms, including static allocation, restricted capacity and high-cost initialization. In this paper, we propose a software-hardware co-design to support dynamic, fine-grained, large-scale secure memory as well as fast-initialization. We first introduce two new hardware primitives: 1) Guarded Page Table (GPT), which protects page table pages to support page-level secure memory isolation; 2) Mountable Merkle Tree (MMT), which supports scalable integrity protection for secure memory. Upon these two primitives, our system can scale to thousands of concurrent enclaves with high resource utilization and eliminate the high-cost initialization of secure memory using fork-style enclave creation without weakening the security guarantees.\nWe have implemented a prototype of our design based onPenglai, an open-sourced enclave system for RISC-V. The experimental results show thatPenglaican support 1,000s enclave instances running concurrently and scale up to 512GB secure memory with both encryption and integrity protection. The overhead of GPT is 5% for memory-intensive workloads (e.g., Redis) and negligible for CPU-intensive workloads (e.g., RV8 and Coremarks).Penglaialso reduces the latency of secure memory initialization by three orders of magnitude and gains 3.6x speedup for real-world applications (e.g., MapReduce).",
    "link": "https://www.usenix.org/conference/osdi21/presentation/feng",
    "session_title": "Operating Systems and Hardware",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "acc34b55-fe8d-42c7-96d9-00bbc03a0abe"
  },
  {
    "title": "NrOS: Effective Replication and Sharing in an Operating System",
    "authors": "Ankit Bhardwaj and Chinmay Kulkarni,University of Utah;Reto Achermann,University of British Columbia;Irina Calciu,VMware Research;Sanidhya Kashyap,EPFL;Ryan Stutsman,University of Utah;Amy Tai and Gerd Zellweger,VMware Research",
    "abstract": "Writing a correct operating system kernel is notoriously hard. Kernel code requires manual memory management and type-unsafe code and must efficiently handle complex, asynchronous events. In addition, increasing CPU core counts further complicate kernel development. Typically, monolithic kernels share state across cores and rely on one-off synchronization patterns that are specialized for each kernel structure or subsystem. Hence, kernel developers are constantly refining synchronization within OS kernels to improve scalability at the risk of introducing subtle bugs.\nWe present NrOS, a new OS kernel with a safer approach to synchronization that runs many POSIX programs. NrOS is primarily constructed as a simple, sequential kernel with no concurrency, making it easier to develop and reason about its correctness. This kernel is scaled across NUMA nodes using node replication, a scheme inspired by state machine replication in distributed systems. NrOS replicates kernel state on each NUMA node and uses operation logs to maintain strong consistency between replicas. Cores can safely and concurrently read from their local kernel replica, eliminating remote NUMA accesses.\nOur evaluation shows that NrOS scales to 96 cores with performance that nearly always dominates Linux at scale, in some cases by orders of magnitude, while retaining much of the simplicity of a sequential kernel.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/bhardwaj",
    "session_title": "Operating Systems and Hardware",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "f7c0211f-8f33-4d70-8395-5dac29c5af54"
  },
  {
    "title": "Addra: Metadata-private voice communication over fully untrusted infrastructure",
    "authors": "Ishtiyaque Ahmad, Yuntian Yang, Divyakant Agrawal, Amr El Abbadi, and Trinabh Gupta,University of California Santa Barbara",
    "abstract": "Metadata from voice calls, such as the knowledge of who is communicating with whom, contains rich information about people’s lives. Indeed, it is a prime target for powerful adversaries such as nation states. Existing systems that hide voice call metadata either require trusted intermediaries in the network or scale to only tens of users. This paper describes the design, implementation, and evaluation of Addra, the first system for voice communication that hides metadata over fully untrusted infrastructure and scales to tens of thousands of users. At a high level, Addra follows a template in which callers and callees deposit and retrieve messages from private mailboxes hosted at an untrusted server. However, Addra improves message latency in this architecture, which is a key performance metric for voice calls. First, it enables a caller to push a message to a callee in two hops, using a new way of assigning mailboxes to users that resembles how a post office assigns PO boxes to its customers. Second, it innovates on the underlying cryptographic machinery and constructs a new private information retrieval scheme, FastPIR, that reduces the time to process oblivious access requests for mailboxes. An evaluation of Addra on a cluster of 80 machines on AWS demonstrates that it can serve 32K users with a 99-th percentile message latency of 726 ms—a 7✕  improvement over a prior system for text messaging in the same threat model.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/ahmad",
    "session_title": "Security and Privacy",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "e0df9ced-6cd1-41fc-8de3-ec6f7b1f4f5a"
  },
  {
    "title": "Bringing Decentralized Search to Decentralized Services",
    "authors": "Mingyu Li, Jinhao Zhu, and Tianxu Zhang,Institute of Parallel and Distributed Systems, Shanghai Jiao Tong University; Shanghai AI Laboratory; Engineering Research Center for Domain-specific Operating Systems, Ministry of Education, China;Cheng Tan,Northeastern University;Yubin Xia,Institute of Parallel and Distributed Systems, Shanghai Jiao Tong University; Shanghai AI Laboratory; Engineering Research Center for Domain-specific Operating Systems, Ministry of Education, China;Sebastian Angel,University of Pennsylvania;Haibo Chen,Institute of Parallel and Distributed Systems, Shanghai Jiao Tong University; Shanghai AI Laboratory; Engineering Research Center for Domain-specific Operating Systems, Ministry of Education, China",
    "abstract": "This paper addresses a key missing piece in the current ecosystem of decentralized services and blockchain apps: the lack of decentralized, verifiable, and private search. Existing decentralized systems like Steemit, OpenBazaar, and the growing number of blockchain apps provide alternatives to existing services. And yet, they continue to rely on centralized search engines and indexers to help users access the content they seek and navigate the apps. Such centralized engines are in a perfect position to censor content and violate users’ privacy, undermining some of the key tenets behind decentralization.\nTo remedy this, we introduce DeSearch, the first decentralized search engine that guarantees the integrity and privacy of search results for decentralized services and blockchain apps. DeSearch uses trusted hardware to build a network of workers that execute a pipeline of small search engine tasks (crawl, index, aggregate, rank, query). DeSearch then introduces a witness mechanism to make sure the completed tasks can be reused across different pipelines, and to make the final search results verifiable by end users. We implement DeSearch for two existing decentralized services that handle over 80 million records and 240 GBs of data, and show that DeSearch can scale horizontally with the number of workers and can process 128 million search queries per day.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/li",
    "session_title": "Security and Privacy",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "f1110436-df9e-4c0b-bfc5-9a35968ec6b7"
  },
  {
    "title": "Finding Consensus Bugs in Ethereum via Multi-transaction Differential Fuzzing",
    "authors": "Youngseok Yang,Seoul National University;Taesoo Kim,Georgia Institute of Technology;Byung-Gon Chun,Seoul National University and FriendliAI",
    "abstract": "Ethereum is the second-largest blockchain platform next to Bitcoin. In the Ethereum network, decentralized Ethereum clients reach consensus through transitioning to the same blockchain states according to the Ethereum specification. Consensus bugs are bugs that make Ethereum clients transition to incorrect blockchain states and fail to reach consensus with other clients. Consensus bugs are extremely rare but can be exploited for network split and theft, which cause reliability and security-critical issues in the Ethereum ecosystem. We describe Fluffy, a multi-transaction differential fuzzer for finding consensus bugs in Ethereum. First, Fluffy mutates and executes multi-transaction test cases to find consensus bugs which cannot be found using existing fuzzers for Ethereum. Second, Fluffy uses multiple existing Ethereum clients that independently implement the specification as cross-referencing oracles. Compared to a state-of-the-art fuzzer, Fluffy improves the fuzzing throughput by 510× and the code coverage by 2.7× with various optimizations: in-process fuzzing, fuzzing harnesses for Ethereum clients, and semantic-aware mutation that reduces erroneous test cases. Fluffy found two new consensus bugs in the most popular Geth Ethereum client which were exploitable on the live Ethereum mainnet. Four months after we reported the bugs to Geth developers, one of the bugs was triggered on the mainnet, and caused nodes using a stale version of Geth to hard fork the Ethereum blockchain. The blockchain community considers this hard fork the greatest challenge since the infamous 2016 DAO hack. We have made Fluffy publicly available athttps://github.com/snuspl/fluffyto contribute to the security of Ethereum.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/yang",
    "session_title": "Security and Privacy",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "1def359f-d8e6-412e-a626-dd1b6a28f091"
  },
  {
    "title": "MAGE: Nearly Zero-Cost Virtual Memory for Secure Computation",
    "authors": "Sam Kumar, David E. Culler, and Raluca Ada Popa,University of California, Berkeley",
    "abstract": "Secure Computation (SC) is a family of cryptographic primitives for computing on encrypted data in single-party and multi-party settings. SC is being increasingly adopted by industry for a variety of applications. A significant obstacle to using SC for practical applications is the memory overhead of the underlying cryptography. We develop MAGE, an execution engine for SC that efficiently runs SC computations that do not fit in memory. We observe that, due to their intended security guarantees, SC schemes are inherentlyoblivious—their memory access patterns are independent of the input data. Using this property, MAGE calculates the memory access pattern ahead of time and uses it to produce a memory management plan. This formulation of memory management, which we callmemory programming, is a generalization of paging that allows MAGE to provide a highly efficient virtual memory abstraction for SC. MAGE outperforms the OS virtual memory system by up to an order of magnitude, and in many cases, runs SC computations that do not fit in memory at nearly the same speed as if the underlying machines hadunbounded physical memoryto fit the entire computation.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/kumar",
    "session_title": "Security and Privacy",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "d426f872-e3e1-4a78-aef5-33144e71e903"
  },
  {
    "title": "Zeph: Cryptographic Enforcement of End-to-End Data Privacy",
    "authors": "Lukas Burkhalter, Nicolas Küchler, Alexander Viand, Hossein Shafagh, and Anwar Hithnawi,ETH Zürich",
    "abstract": "As increasingly more sensitive data is being collected to gain valuable insights, the need  to natively integrate privacy controls in data analytics frameworks is growing in importance.  Today, privacy controls are enforced by data curators with full access to data in the clear. However, a plethora of recent data breaches show that even widely trusted service providers can be compromised. Additionally, there is no assurance that data processing and handling comply with the claimed privacy policies. This motivates the need for a new approach to data privacy that can provide strong assurance and control to users. This paper presents Zeph, a system that enables users to set privacy preferences on how their data can be shared and processed. Zeph enforces privacy policies cryptographically and ensures that data available to third-party applications complies with users' privacy policies.  Zeph executes privacy-adhering data transformations in real-time and scales to thousands of data sources,  allowing it to support large-scale low-latency data stream analytics. We introduce a hybrid cryptographic protocol for privacy-adhering transformations of encrypted data. We develop a prototype of Zeph on Apache Kafka to demonstrate that Zeph can  perform large-scale privacy transformations with low overhead.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/burkhalter",
    "session_title": "Security and Privacy",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "43177fad-55fd-40f5-8739-caeacf8815a8"
  },
  {
    "title": "DistAI: Data-Driven Automated Invariant Learning for Distributed Protocols",
    "authors": "Jianan Yao, Runzhou Tao, Ronghui Gu, Jason Nieh, Suman Jana, and Gabriel Ryan,Columbia University",
    "abstract": "Distributed systems are notoriously hard to implement correctly due to non-determinism. Finding the inductive invariant of the distributed protocol is a critical step in verifying the correctness of distributed systems, but takes a long time to do even for simple protocols. We present DistAI, a data-driven automated system for learning inductive invariants for distributed protocols. DistAI generates data by simulating the distributed protocol at different instance sizes and recording states as samples. Based on the observation that invariants are often concise in practice, DistAI starts with small invariant formulas and enumerates all strongest possible invariants that hold for all samples. It then feeds those invariants and the desired safety properties to an SMT solver to check if the conjunction of the invariants and the safety properties is inductive. Starting with small invariant formulas and strongest possible invariants avoids large SMT queries, improving SMT solver performance. Because DistAI starts with the strongest possible invariants, if the SMT solver fails, DistAI does not need to discard failed invariants, but knows to monotonically weaken them and try again with the solver, repeating the process until it eventually succeeds. We prove that DistAI is guaranteed to find the ∃-free inductive invariant that proves the desired safety properties in finite time, if one exists. Our evaluation shows that DistAI successfully verifies 13 common   distributed protocols automatically and outperforms alternative methods both in the number of protocols it verifies and the speed at which it does so, in some cases by more than two orders of magnitude.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/yao",
    "session_title": "Correctness",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "c77a4177-953c-4756-8323-3d9e5cd45e02"
  },
  {
    "title": "GoJournal: a verified, concurrent, crash-safe journaling system",
    "authors": "Tej Chajed,MIT CSAIL;Joseph Tassarotti,Boston College;Mark Theng,MIT CSAIL;Ralf Jung,MPI-SWS;M. Frans Kaashoek and Nickolai Zeldovich,MIT CSAIL",
    "abstract": "The main contribution of this paper is GoJournal, a verified, concurrent journaling system that provides atomicity for storage applications, together with Perennial 2.0, a framework for formally specifying and verifying concurrent crash-safe systems. GoJournal’s goal is to bring the advantages of journaling for code to specs and proofs. Perennial 2.0 makes this possible by introducing several techniques to formalize GoJournal’s specification and to manage the complexity in the proof of GoJournal’s implementation. Lifting predicates and crash framing make the specification easy to use for developers, and logically atomic crash specifications allow for modular reasoning in GoJournal, making the proof tractable despite complex concurrency and crash interleavings.\nGoJournal is implemented in Go, and Perennial is implemented in the Coq proof assistant. While verifying GoJournal, we found one serious concurrency bug, even though GoJournal has many unit tests. We built a functional NFSv3 server, called GoNFS, to use GoJournal. Performance experiments show that GoNFS provides similar performance (e.g., at least 90% throughput across several benchmarks on an NVMe disk) to Linux’s NFS server exporting an ext4 file system, suggesting that GoJournal is a competitive journaling system. We also verified a simple NFS server using GoJournal’s specs, which confirms that they are helpful for application verification: a significant part of the proof doesn’t have to consider concurrency and crashes.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/chajed",
    "session_title": "Correctness",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "ea1e92f7-8915-43fd-aebe-7f62e66b5b32"
  },
  {
    "title": "STORM: Refinement Types for Secure Web Applications",
    "authors": "Nico Lehmann and Rose Kunkel,UC San Diego;Jordan Brown,Independent;Jean Yang,Akita Software;Niki Vazou,IMDEA Software Institute;Nadia Polikarpova, Deian Stefan, and Ranjit Jhala,UC San Diego",
    "abstract": "We presentStorm, a web framework that allows developers to build MVC applications with compile-time enforcement of centrally specified data-dependent security policies.Stormensures security using aSecurity Typed ORMthat refines the (type) abstractions of each layer of the MVC API with logical assertions that describe the data produced and consumed by the underlying operation and the users allowed access to that data. To evaluate the security guarantees ofStorm, we build a formally verified reference implementation using the Labeled IO (LIO) IFC framework. We present case studies and end-to-end applications that show howStormlets developers specify diverse policies while centralizing the trusted code to under 1% of the application, and statically enforces security with modest type annotation overhead, and no run-time cost.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/lehmann",
    "session_title": "Correctness",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "ce19d918-d8ec-4c3b-9be3-9eab0c13c46d"
  },
  {
    "title": "Horcrux: Automatic JavaScript Parallelism for Resource-Efficient Web Computation",
    "authors": "Shaghayegh Mardani,UCLA;Ayush Goel,University of Michigan;Ronny Ko,Harvard University;Harsha V. Madhyastha,University of Michigan;Ravi Netravali,Princeton University",
    "abstract": "Web pages today commonly include large amounts of JavaScript code in order to offer users a dynamic experience. These scripts often make pages slow to load, partly due to a fundamental inefficiency in how browsers process JavaScript content: browsers make it easy for web developers to reason about page state by serially executing all scripts on any frame in a page, but as a result, fail to leverage the multiple CPU cores that are readily available even on low-end phones.\nIn this paper, we show how to address this inefficiency without requiring pages to be rewritten or browsers to be modified. The key to our solution, Horcrux, is to account for the non-determinism intrinsic to web page loads and the constraints placed by the browser’s API for parallelism. Horcrux-compliant web servers perform offline analysis of all the JavaScript code on any frame they serve to conservatively identify, for every JavaScript function, the union of the page state that the function could access across all loads of that page. Horcrux’s JavaScript scheduler then uses this information to judiciously parallelize JavaScript execution on the client-side so that the end-state is identical to that of a serial execution, while minimizing coordination and offloading overheads. Across a wide range of pages, phones, and mobile networks covering web workloads in both developed and emerging regions, Horcrux reduces median browser computation delays by 31-44% and page load times by 18-37%.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/mardani",
    "session_title": "Correctness",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "34ff8322-1927-415d-8029-d2b831f9de8e"
  },
  {
    "title": "SANRAZOR: Reducing Redundant Sanitizer Checks in C/C++ Programs",
    "authors": "Jiang Zhang,University of Southern California;Shuai Wang,HKUST;Manuel Rigger, Pinjia He, and Zhendong Su,ETH Zurich",
    "abstract": "Sanitizers detect unsafe actions such as invalid memory accesses by inserting checks that are validated during a program’s execution. Despite their extensive use for debugging and vulnerability discovery, sanitizer checks often induce a high runtime cost. One important reason for the high cost is, as we observe in this paper, that many sanitizer checks are redundant — the same safety property is repeatedly checked — leading to unnecessarily wasted computing resources. To help more profitably utilize sanitizers, we introduceSanRazor, a practical tool aiming to effectively detect and remove redundant sanitizer checks.SanRazoradopts a novel hybrid approach — it captures both dynamic code coverage and static data dependencies of checks, and uses the extracted information to perform a redundant check analysis. Our evaluation on the SPEC benchmarks shows thatSanRazorcan reduce the overhead of sanitizers significantly, from 73.8% to 28.0–62.0% for AddressSanitizer, and from 160.1% to 36.6–124.4% for UndefinedBehaviorSanitizer (depending on the applied reduction scheme). Our further evaluation on 38 CVEs from 10 commonly-used programs shows thatSanRazorreduced checks suffice to detect at least 33 out of the 38 CVEs. Furthermore, by combiningSanRazorwith an existing sanitizer reduction tool ASAP, we show synergistic effect by reducing the runtime cost to only 7.0% with a reasonable tradeoff of security.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/zhang",
    "session_title": "Correctness",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "2b06b6ce-6298-43fb-b247-5541817c0647"
  },
  {
    "title": "Dorylus: Affordable, Scalable, and Accurate GNN Training with Distributed CPU Servers and Serverless Threads",
    "authors": "John Thorpe, Yifan Qiao, Jonathan Eyolfson, and Shen Teng,UCLA;Guanzhou Hu,UCLA and University of Wisconsin, Madison;Zhihao Jia,CMU;Jinliang Wei,Google Brain;Keval Vora,Simon Fraser;Ravi Netravali,Princeton University;Miryung Kim and Guoqing Harry Xu,UCLA",
    "abstract": "A graph neural network (GNN) enables deep learning on structured graph data. There are two major GNN training obstacles: 1) it relies on high-end servers with many GPUs which are expensive to purchase and maintain, and 2) limited memory on GPUs cannot scale to today's billion-edge graphs. This paper presents Dorylus: a distributed system for training GNNs. Uniquely, Dorylus can take advantage ofserverless computingto increase scalability at a low cost.\nThe key insight guiding our design iscomputation separation. Computation separation makes it possible to construct adeep, bounded-asynchronouspipeline where graph and tensor parallel tasks can fully overlap, effectively hiding the network latency incurred by Lambdas. With the help of thousands of Lambda threads, Dorylus scales GNN training to billion-edge graphs. Currently, for large graphs, CPU servers offer the best performance-per-dollar over GPU servers. Just using Lambdas on top of CPU servers offers up to 2.75✕  more performance-per-dollar than training only with CPU servers. Concretely, Dorylus is 1.22✕  faster and 4.83✕  cheaper than GPU servers for massive sparse graphs. Dorylus is up to 3.8✕  faster and 10.7✕  cheaper compared to existing sampling-based systems.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/thorpe",
    "session_title": "Graph Embeddings and Neural Networks",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "59527a4d-71d0-4d83-b857-0a0dff5cb218"
  },
  {
    "title": "GNNAdvisor: An Adaptive and Efficient Runtime System for GNN Acceleration on GPUs",
    "authors": "Yuke Wang, Boyuan Feng, Gushu Li, Shuangchen Li, Lei Deng, Yuan Xie, and Yufei Ding,University of California, Santa Barbara",
    "abstract": "As the emerging trend of graph-based deep learning, Graph Neural Networks (GNNs) excel for their capability to generate high-quality node feature vectors (embeddings). However, the existing one-size-fits-all GNN implementations are insufficient to catch up with the evolving GNN architectures, the ever-increasing graph size, and the diverse node embedding dimensionality. To this end, we proposeGNNAdvisor, an adaptive and efficient runtime system to accelerate various GNN workloads on GPU platforms. First, GNNAdvisor explores and identifies several performance-relevant features from both the GNN model and the input graph, and use them as a new driving force for GNN acceleration. Second, GNNAdvisor implements a novel and highly-efficient 2D workload management tailored for GNN computation to improve GPU utilization and performance under different application settings. Third, GNNAdvisor capitalizes on the GPU memory hierarchy for acceleration by gracefully coordinating the execution of GNNs according to the characteristics of the GPU memory structure and GNN workloads. Furthermore, to enable automatic runtime optimization, GNNAdvisor incorporates a lightweight analytical model for an effective design parameter search. Extensive experiments show that GNNAdvisor outperforms the state-of-the-art GNN computing frameworks, such as Deep Graph Library (3.02✕ faster on average) and NeuGraph (up to 4.10✕ faster), on mainstream GNN architectures across various datasets.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/wang-yuke",
    "session_title": "Graph Embeddings and Neural Networks",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "83823700-31c9-4182-b17b-341a60516462"
  },
  {
    "title": "Marius: Learning Massive Graph Embeddings on a Single Machine",
    "authors": "Jason Mohoney and Roger Waleffe,University of Wisconsin–Madison;Henry Xu,University of Maryland, College Park;Theodoros Rekatsinas and Shivaram Venkataraman,University of Wisconsin–Madison",
    "abstract": "We propose a new framework for computing the embeddings of large-scale graphs on a single machine. A graph embedding is a fixed length vector representation for each node (and/or edge-type) in a graph and has emerged as the de-facto approach to apply modern machine learning on graphs. We identify that current systems for learning the embeddings of large-scale graphs are bottlenecked by data movement, which results in poor resource utilization and inefficient training. These limitations require state-of-the-art systems to distribute training across multiple machines. We propose Marius, a system for efficient training of graph embeddings that leverages partition caching and buffer-aware data orderings to minimize disk access and interleaves data movement with computation to maximize utilization. We compare Marius against two state-of-the-art industrial systems on a diverse array of benchmarks. We demonstrate that Marius achieves the same level of accuracy but is up to one order of magnitude faster. We also show that Marius can scale training to datasets an order of magnitude beyond a single machine's GPU and CPU memory capacity, enabling training of configurations with more than a billion edges and 550 GB of total parameters on a single machine with 16 GB of GPU memory and 64 GB of CPU memory.  Marius is open-sourced at www.marius-project.org.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/mohoney",
    "session_title": "Graph Embeddings and Neural Networks",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "4c89d15c-c338-4844-8832-a45e04badcff"
  },
  {
    "title": "P3: Distributed Deep Graph Learning at Scale",
    "authors": "Swapnil Gandhi and Anand Padmanabha Iyer,Microsoft Research",
    "abstract": "Graph Neural Networks (GNNs) have gained significant attention in the recent past, and become one of the fastest growing subareas in deep learning. While several new GNN architectures have been proposed, the scale of real-world graphs—in many cases billions of nodes and edges—poses challenges during model training. In this paper, we presentP3, a system that focuses on scaling GNN model training to large real-world graphs in adistributedsetting. We observe that scalability challenges in training GNNs are fundamentally different from that in training classical deep neural networks and distributed graph processing; and that commonly used techniques, such as intelligent partitioning of the graph do not yield desired results. Based on this observation,P3proposes a new approach for distributed GNN training. Our approach effectively eliminates high communication and partitioning overheads, and couples it with a newpipelined push-pullparallelism based execution strategy for fast model training.P3exposes a simple API that captures many different classes of GNN architectures for generality. When further combined with a simple caching strategy, our evaluation shows thatP3is able to outperform existing state-of-the-art distributed GNN frameworks by up to 7✕.",
    "link": "https://www.usenix.org/conference/osdi21/presentation/gandhi",
    "session_title": "Graph Embeddings and Neural Networks",
    "conference_name": "OSDI",
    "date": "2021-07-15",
    "paper_id": "d64a06a4-da03-4485-8324-7f1b15ada985"
  }
]