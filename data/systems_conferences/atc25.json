[
  {
    "title": "",
    "authors": "",
    "abstract": "TheUSENIX Lifetime Achievement Award(\"The Flame\") recognizes and celebrates singular contributions to the USENIX community of both intellectual achievement and service that are not recognized in any other forum.",
    "link": "https://www.usenix.org/conference/atc25/presentation/flame-award",
    "session_title": "Presentation of the USENIX Lifetime Achievement Award (\"The Flame\")",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "11b0ed87-a783-4fc3-a250-6c6cfa57b2c0"
  },
  {
    "title": "Accelerating Software Development: The LLM (R)evolution",
    "authors": "",
    "abstract": "Large language models are achieving state-of-the-art results across a wide variety of domains, eclipsing past work in well-studied areas like auto-completion. I argue that they also presage a \"Cambrian explosion\"—a wave of radically new AI-powered software development tools that will make all our lives easier. I propose a paradigm for how we can best rethink existing tools to leverage a combination of LLMs and PL technologies like static and dynamic analysis. This approach promises to evolve our software tools far beyond their current capacities, including profilers that suggest optimizations, debuggers that identify and propose fixes using real-world knowledge, coverage analyzers that synthesize new tests, compilers that propose fixes for compile-time errors, and data analysis frameworks that analyze your data.",
    "link": "https://www.usenix.org/conference/atc25/presentation/berger",
    "session_title": "USENIX ATC '25 and OSDI '25 Joint Keynote Address",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "dbef645a-4c81-4f86-90ba-ac13cf815b4c"
  },
  {
    "title": "Fast ACS: Low-Latency File-Based Ordered Message Delivery at Scale",
    "authors": "Sushant Kumar Gupta, Anil Raghunath Iyer, Chang Yu, Neel Bagora, Olivier Pomerleau, Vivek Kumar, and Prunthaban Kanthakumar,Google LLC",
    "abstract": "Low-latency message delivery is crucial for real-time systems. Data originating from a producer must be delivered to consumers, potentially distributed in clusters across metropolitan and continental boundaries. With the growing scale of computing, there can be several thousand consumers of the data. Such systems require a robust messaging system capable of transmitting messages containing data across clusters and efficiently delivering them to consumers. The system must offer guarantees like ordering and at-least-once delivery while avoiding overload on consumers, allowing them to consume messages at their own pace.\nThis paper presents the design of Fast ACS (an abbreviation for Ads Copy Service), a file-based ordered message delivery system that leverages a combination of two-sided (inter-cluster) and one-sided (intra-cluster) communication primitives — namely, Remote Procedure Call and Remote Memory Access, respectively — to deliver messages. The system has been successfully deployed to dozens of production clusters and scales to accommodate several thousand consumers within each cluster, which amounts to Tbps-scale intra-cluster consumer traffic at peak. Notably, Fast ACS delivers messages to consumers across the globe within a few seconds or even sub-seconds (p99) based on the message volume and consumer scale, at a low resource cost.",
    "link": "https://www.usenix.org/conference/atc25/presentation/gupta",
    "session_title": "Cloud Computing: Speed, Scale, and Serverless",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "9207a3fd-9918-43a6-b76d-5a87d6399cc6"
  },
  {
    "title": "Poby: SmartNIC-accelerated Image Provisioning for Coldstart in Clouds",
    "authors": "Zihao Chang and Jiaqi Zhu,SKLP, Institute of Computing Technology, CAS; University of Chinese Academy of Sciences;;Haifeng Sun,Peking University;Yunlong Xie, Kan Shi, Ninghui Sun, Yungang Bao, and Sa Wang,SKLP, Institute of Computing Technology, CAS; University of Chinese Academy of Sciences;",
    "abstract": "Coldstart introduces a significant latency penalty in cloud computing. While several previous works have proposed mechanisms such as warm start, fast snapshot recovery, lightweight isolation, and fast image download to avoid or mitigate this issue, image provisioning remains underexplored despite being critical.\nIn this paper, we propose Poby, a software-hardware collaborative system that offloads and accelerates critical operations of image provisioning using SmartNICs. Specifically, Poby embodies a disaggregated architecture that offloads different image provisioning operations to the appropriate hardware such as embedded CPUs and domain-specific hardware accelerators for optimal performance. It uses a pipeline-based, data-driven workflow to eliminate delays caused by the serial execution of image provisioning operations. Moreover, it contains a distributed image provisioning scheme to alleviate the performance bottlenecks of conventional centralized registries. We implement the entire Poby system using BlueField SmartNICs and evaluate its performance using various microservice and FaaS benchmark suites. The results demonstrate that Poby outperforms two industry-standard container platforms, containerd and iSulad, with speedups of 13.2× and 8.0×, respectively. In addition, compared to iSulad, it reduces host CPU usage by 87.5%.",
    "link": "https://www.usenix.org/conference/atc25/presentation/chang",
    "session_title": "Cloud Computing: Speed, Scale, and Serverless",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "f2217fb2-7690-497f-8767-87f1efe90166"
  },
  {
    "title": "Burst Computing: Quick, Sudden, Massively Parallel Processing on Serverless Resources",
    "authors": "Daniel Barcelona-Pons,Universitat Rovira i Virgili and Barcelona Supercomputing Center;Aitor Arjona, Pedro García-López, Enrique Molina-Giménez, and Stepan Klymonchuk,Universitat Rovira i Virgili",
    "abstract": "We present burst computing, a novel serverless solution tailored for burst-parallel jobs.\nUnlike Function-as-a-Service (FaaS), burst computing establishes job-level isolation using a novel group invocation primitive to launch large groups of workers with guaranteed simultaneity.\nResource allocation is optimized by packing workers into fewer containers, which accelerates their initialization and enables locality.\nLocality significantly reduces remote communication compared to FaaS and, combined with simultaneity, it allows workers to communicate synchronously with message passing and group collectives.\nConsequently, applications unfeasible in FaaS are now possible.\nWe implement burst computing atop OpenWhisk and provide a communication middleware that seamlessly leverages locality with zero-copy messaging.\nEvaluation shows reduced job invocation and communication latency for a 2× speed-up in TeraSort and a 98.5% reduction in remote communication in PageRank (13× speed-up) compared to standard FaaS.",
    "link": "https://www.usenix.org/conference/atc25/presentation/barcelona-pons",
    "session_title": "Cloud Computing: Speed, Scale, and Serverless",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "0bb3b079-16c0-434f-9cbe-161f847674ab"
  },
  {
    "title": "DEEPSERVE: Serverless Large Language Model Serving at Scale",
    "authors": "Junhao Hu,Peking University and Key Lab of HCST (PKU), MOE;Jiang Xu, Zhixia Liu, Yulong He, Yuetao Chen, Hao Xu, Jiang Liu, Jie Meng, Baoquan Zhang, Shining Wan, Gengyuan Dan, Zhiyu Dong, Zhihao Ren, and Changhong Liu,Huawei Cloud;Tao Xie,Key Lab of HCST (PKU), MOE and Peking University;Dayun Lin, Qin Zhang, Yue Yu, Hao Feng, Xusheng Chen, and Yizhou Shan,Huawei Cloud",
    "abstract": "In this paper, we propose DEEPSERVE, a scalable and serverless AI platform designed to efficiently serve large language models (LLMs) at scale in cloud environments. DEEPSERVE addresses key challenges such as resource allocation, serving efficiency, and cold start latencies through four main design components. First, DEEPSERVE uses a simple serverless abstraction called the request-job-task model, which helps manage diverse AI workloads across post-training and model-serving tasks.\nSecond, DEEPSERVE integrates an in-house serving engine named FLOWSERVE using a microkernel-inspired design, NPU-centric execution, and SPMD-based parallelism to optimize LLM serving.\nThird, DEEPSERVE includes novel scheduling policies tailored for a configuration with both PD-disaggregated and PD-colocated instances. Fourth, DEEPSERVE includes optimizations such as pre-warmed pods, DRAM pre-loading, and NPU-fork, which allow DEEPSERVE to scale up to 64 instances in seconds. DEEPSERVE has been in production for over a year, operating on a large Ascend NPU cluster and providing industry-standard APIs for fine-tuning, agent serving, and model serving to our customers.",
    "link": "https://www.usenix.org/conference/atc25/presentation/hu-junhao",
    "session_title": "Cloud Computing: Speed, Scale, and Serverless",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "425ff139-c522-4ae6-ad93-e65ef6c28e70"
  },
  {
    "title": "Cosmic: Cost-Effective Support for Cloud-Assisted 3D Printing",
    "authors": "Yuan Yao,University of Southern California;Chuan He and Chinedum Okwudire,University of Michigan;Harsha V. Madhyastha,University of Southern California",
    "abstract": "In this paper, we consider a new workload for which serverless platforms are well-suited: the execution of a 3D printer controller in the cloud. This workload is qualitatively different from those considered in prior work due to the stringent timing requirements. Our measurements on popular serverless platforms reveal millisecond-level overheads that impair the timely execution of the example control algorithm we consider. To mitigate the impact of these overheads, we judiciously partition the execution of the algorithm across a set of serverless functions and exploit timely speculation. Our evaluations on AWS Lambda show that, for 30 diverse print jobs, Cosmic is able to ensure the timely execution of the controller while reducing cost by 2.8x–3.5x compared to other approaches.",
    "link": "https://www.usenix.org/conference/atc25/presentation/yao",
    "session_title": "Cloud Computing: Speed, Scale, and Serverless",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "d200efe8-af32-43f2-8156-38d625ba2590"
  },
  {
    "title": "GMI-DRL: Empowering Multi-GPU DRL with Adaptive-Grained Parallelism",
    "authors": "Yuke Wang,Rice University;Boyuan Feng,University of California Santa Barbara;Zheng Wang,University of California San Diego;Guyue Huang,University of California Santa Barbara;Tong (Tony) Geng,University of Rochester;Ang Li,Pacific Northwest National Laboratory;Yufei Ding,University of California San Diego",
    "abstract": "With the increasing popularity of robotics in industrial control and autonomous driving, deep reinforcement learning (DRL) raises the attention of various fields. However, DRL computation on the modern powerful multi-GPU platform is still inefficient due to its heterogeneous tasks and complicated inter-task interactions. To this end, we propose GMI-DRL, the first systematic design for scaling multi-GPU DRL via adaptive-grained parallelism. To facilitate such a new parallelism scheme, GMI-DRL introduces a new concept – GPU Multiplexing Instance (GMI), a unified resource-adjustable sub-GPU design for heterogeneous tasks in DRL scaling. Besides, GMI-DRL introduces an adaptive Coordinator to effectively manage workloads and resources for better system performance. GMI-DRL also incorporates a specialized Communicator with highly efficient inter-GMI communication support to meet diverse communication demands. Extensive experiments demonstrate that GMI-DRL outperforms state-of-the-art DRL accelerating solutions in training throughput (up to 2.34x) and GPU utilization (up to 40.8% improvement) on the DGX-A100 platform.",
    "link": "https://www.usenix.org/conference/atc25/presentation/wang-yuke",
    "session_title": "Accelerating ML Training: Parallelism, Tuning, and Modalities",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "27a597ad-af3a-4f58-a642-feb4640f2603"
  },
  {
    "title": "mTuner: Accelerating Parameter-Efficient Fine-Tuning on Multi-GPU Servers with Elastic Tensor",
    "authors": "Kezhao Huang, Siqi Zhu, Mingshu Zhai, Liyan Zheng, Kinman Lei, Jiaao He, Yuyang Jin, and Jidong Zhai,Tsinghua University",
    "abstract": "With the growing importance of personalized large language models (LLMs) and fine-tuning techniques, parameter-efficient fine-tuning (PEFT) has emerged as a mainstream approach, offering reduced computational and storage demands compared to full-parameter fine-tuning. Compared to pre-training, we find memory efficiency more critical during fine-tuning. Although the overall memory capacity of fine-tuning hardware is typically limited, memory becomes more precious since most parameters are frozen and can be cached for performance optimization. To better utilize memory, we propose Elastic Tensor, an abstraction for dynamic tensor management, enabling flexible control over their availability, accumulation, and release in memory. Elastic tensor defines four key operations for static and runtime tensors with tunable ratios: gather, discard, execute, and checkpoint. With elastic tensors, a series of optimizations are enabled, such as improving temporal memory utilization, relaxing data dependence, and accumulating runtime tensors in a memory-adaptive way. We implement mTuner, an end-to-end fine-tuning system based on elastic tensors. Compared with state-of-the-art training and fine-tuning systems, mTuner achieves a throughput improvement of up to 51.2% and 24.8% (28.3% and 14.5% on average) on PCIe and NVLink servers respectively, for LLMs from 7B to 70B. mTuner is publicly available athttps://github.com/xxcclong/mTuner.",
    "link": "https://www.usenix.org/conference/atc25/presentation/huang-kezhao",
    "session_title": "Accelerating ML Training: Parallelism, Tuning, and Modalities",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "b7f361f1-bfdf-4682-81bf-9c681f81a760"
  },
  {
    "title": "JENGA: Enhancing LLM Long-Context Fine-tuning with Contextual Token Sparsity",
    "authors": "Tuowei Wang and Xingyu Chen,Tsinghua University;Kun Li and Ting Cao,Microsoft Research;Ju Ren and Yaoxue Zhang,Tsinghua University",
    "abstract": "The escalating demand for long-context applications has intensified the necessity of extending the LLM context windows. Despite recent fine-tuning approaches successfully expanding context lengths, their high memory footprints, especially for activations, present a critical practical limitation. Current parameter-efficient fine-tuning methods prioritize reducing parameter update overhead over addressing activation memory constraints. Similarly, existing sparsity mechanisms improve computational efficiency but overlook activation memory optimization due to the phenomenon ofShadowy Activation.\nIn this paper, we propose JENGA, the first LLM fine-tuning system that explores and exploits a new token-level sparsity mechanism inherent in long-context scenarios, termedContextual Token Sparsity. JENGA minimizes redundant token involvement by assessing the informativeness of token embeddings while preserving model accuracy. Specifically, JENGA introduces three key techniques: (1) Token Elimination, dynamically identifying and excluding redundant tokens across varying inputs and layers. (2) Pattern Prediction, utilizing well-trained predictors to approximate token sparsity patterns with minimal overhead. (3) Kernel Optimization, employing permutation-free and segment-based strategies to boost system performance. We implement JENGA as an end-to-end fine-tuning system compatible with various LLM architectures and other optimization techniques. Comprehensive evaluations demonstrate that JENGA reduces memory consumption by up to 1.93× and achieves up to 1.36× speedups, outperforming state-of-the-art fine-tuning systems.",
    "link": "https://www.usenix.org/conference/atc25/presentation/wang-tuowei",
    "session_title": "Accelerating ML Training: Parallelism, Tuning, and Modalities",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "afac1c34-6e45-4f84-90a6-02ce88c1bce7"
  },
  {
    "title": "FlexPipe: Maximizing Training Efficiency for Transformer-based Models with Variable-Length Inputs",
    "authors": "Hairui Zhao,Jilin University and University of California, Riverside;Qi Tian,Jilin University;Hongliang Li,Jilin University and Key Laboratory of Symbolic Computation and Knowledge Engineering of the Ministry of Education, China;Zizhong Chen,University of California, Riverside",
    "abstract": "Transformer achieves promising results among various deep learning architectures. Training transformer-based models (transformers) typically involves various parallelisms, such as data parallelism and pipeline parallelism (PP). Variable-length datasets have been adopted to facilitate multi-task training of transformers, which degrades training efficiency. Though many efforts have significantly improved the variable-length training, these efforts primarily focus on optimizations within a single iteration. However, substantial fluctuations of computation and memory requirements across iterations can also lead to inefficiency overall due to the static partitioning of distributed frameworks. Thus, this paper proposes FlexPipe from the perspective of a distributed system to enable high throughput variable-length training of transformers. To our knowledge, FlexPipe is the first flexible pipeline framework that dynamically adjusts PP by a live flexibility mechanism without training loss. We introduce a novel problem which aims at maximizing training throughput by adjusting the parallel configurations, along with an efficient heuristic algorithm to solve the problem. Extensive experiments show that FlexPipe achieves an average 1.25× training throughput compared to state-of-the-art methods.",
    "link": "https://www.usenix.org/conference/atc25/presentation/zhao-hairui",
    "session_title": "Accelerating ML Training: Parallelism, Tuning, and Modalities",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "e0dffa5c-1a3c-459c-80f4-292dce462f54"
  },
  {
    "title": "Optimus: Accelerating Large-Scale Multi-Modal LLM Training by Bubble Exploitation",
    "authors": "Weiqi Feng,Harvard University;Yangrui Chen,ByteDance;Shaoyu Wang,University of Southern California;Yanghua Peng and Haibin Lin,ByteDance;Minlan Yu,Harvard University",
    "abstract": "Multimodal large language models (MLLMs) have extended the success of large language models (LLMs) to multiple data types, such as image, text and audio, achieving significant performance in various domains, including multimodal translation, visual question answering and content generation. Nonetheless, existing systems are inefficient to train MLLMs due to substantial GPU bubbles caused by the heterogeneous modality models and complex data dependencies in 3D parallelism.\nThis paper proposes Optimus, a distributed MLLM training system that reduces end-to-end MLLM training time. Optimus is based on our principled analysis that scheduling the encoder computation within the LLM bubbles can reduce bubbles in MLLM training.\nTo enable scheduling encoder computation for all GPUs, Optimus searches for separate parallel plans for the encoder and LLM, and adopts a bubble scheduling algorithm to exploit LLM bubbles without breaking the original data dependencies in the MLLM model architecture. We further decompose the encoder layer computation into a series of kernels and analyze the common bubble pattern of 3D parallelism to carefully optimize the sub-millisecond bubble scheduling, minimizing the overall training time. \nOur experiments in a production cluster show that Optimus accelerates MLLM training by 20.5%-21.3% with ViT-22B and GPT-175B model over 3072 GPUs compared to baselines.",
    "link": "https://www.usenix.org/conference/atc25/presentation/feng",
    "session_title": "Accelerating ML Training: Parallelism, Tuning, and Modalities",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "6b9e5dff-2218-4923-bd61-342e961c8eb6"
  },
  {
    "title": "Towards Optimal Rack-scale μs-level CPU Scheduling through In-Network Workload Shaping",
    "authors": "Xudong Liao,Hong Kong University of Science and Technology;Han Tian,University of Science and Technology of China;Xinchen Wan,Hong Kong University of Science and Technology;Chaoliang Zeng,BitIntelligence;Hao Wang,Hong Kong University of Science and Technology;Junxue Zhang,University of Science and Technology of China;Mengyu Ma,Inspur;Guyue (Grace) Liu,Peking University;Kai Chen,Hong Kong University of Science and Technology",
    "abstract": "Rack-scale CPU scheduling has emerged as a promising direction to accommodate the increasing demands for microsecond-level services. However, prior work suffers from both inaccurate load balancing in the network and complex yet sub-optimal scheduling within each server due primarily to its application-agnosticism. This paper presents Pallas, an application-aware rack-scale CPU scheduling solution for microsecond-level services with near-optimal performance. At the heart of Pallas is an in-network workload shaping to partition the workload into different shards, each of them preserving high homogeneity regarding the CPU demands. With the shaped workloads, Pallas then performs simple yet near-optimal inter-server load balancing and intra-server scheduling. We have fully implemented Pallas and our extensive experiments across various synthetic workloads and real-world applications demonstrate that Pallas significantly outperforms the state-of-the-art solution RackSched by delivering stably low tail latency and high throughput, reducing tail latency by 8.5× at medium load and as much as two orders of magnitude at high load, while gracefully handling long-term workload shifts and short-term transient bursts.",
    "link": "https://www.usenix.org/conference/atc25/presentation/liao",
    "session_title": "Networking: From Cloud to In-Network Intelligence",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "fc4d2953-d45b-4d71-9d05-bed9a232fb68"
  },
  {
    "title": "TGW: Operating an Efficient and Resilient Cloud Gateway at Scale",
    "authors": "Yifan Yang, Lin He, Jiasheng Zhou, Xiaoyi Shi, Yichi Xu, and Shicheng Wang,Tsinghua University;Jinlong E,Renmin University of China;Ying Liu,Tsinghua University;Junwei Zhang, Zhuang Yuan, and Hengyang Xu,Tencent",
    "abstract": "Large-scale cloud data centers have become a critical Internet infrastructure. As the cloud entrance, today’s cloud gateways have integrated multiple functions such as elastic public access and load balancing to cope with the rapid growth of services and requirements. To meet the demands of large-scale clouds for efficient packet forwarding, scalable state management, and high resilience, we design, deploy, and operate Tencent Gateway (TGW), an efficient and resilient cloud gateway at scale.\nCompared to other large cloud providers that primarily offer services like search, e-commerce, or short-form video, the \"killer services\" of Tencent Cloud are online gaming and live streaming, which come with much stricter requirements for latency, jitter, and packet loss. From a technological perspective, TGW is highly decoupled and modular, with core components focused on efficient forwarding planes, a scalable state migration mechanism, a resilient failure recovery mechanism, and a failure detection and localization system. In terms of engineering, TGW has been operating in large-scale, real-world industrial environments for eight years, during which we have gained extensive insights and experience.\nWe evaluate TGW both in testbed and real-world scenarios. In our testbed, TGW's single node achieves 2.9× the forwarding capacity of prior systems. Between clusters, states and traffic can be migrated in 4 s without packet loss. In our real-world environment, TGW handles tens of Tbps of traffic, with a worst-case packet drop rate ranging from 10-7to 10-4, while balancing traffic across clusters. Additionally, TGW can quickly migrate states and traffic and recover from failures without tenant awareness, guided by our failure localization system, achieving 100% availability for years.",
    "link": "https://www.usenix.org/conference/atc25/presentation/yang-yifan",
    "session_title": "Networking: From Cloud to In-Network Intelligence",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "80c923bf-fe5c-40f0-a523-d00627fd79b7"
  },
  {
    "title": "MARC: Motion-Aware Rate Control for Mobile E-commerce Cloud Rendering",
    "authors": "Yuankang Zhao,Alibaba Group; University of Chinese Academy of Sciences;Furong Yang,Alibaba Group;Gerui Lv,University of Chinese Academy of Sciences;Qinghua Wu,University of Chinese Academy of Sciences and Purple Mountain Laboratories;Yanmei Liu, Jiuhai Zhang, Yutang Peng, Feng Peng, Hongyu Guo, and Ying Chen,Alibaba Group;Zhenyu Li,University of Chinese Academy of Sciences and Purple Mountain Laboratories;Gaogang Xie,University of Chinese Academy of Sciences and Computer Network Information Center, Chinese Academy of Sciences",
    "abstract": "Mobile e-commerce platforms increasingly integrate cloud rendering to deliver immersive 3D shopping experiences, where users interact with the rendered scenes through the network. Our large-scale online measurements reveal that users' Quality of Experience (QoE) preferences dynamically evolve with user motions in cloud rendering sessions. However, latency spikes occur more frequently during peak periods of user engagement, resulting in early session abandonment.\nTo address this issue, we propose MARC, a motion-aware rate control framework that aligns bitrate decisions with user QoE preferences in real-time. MARC sets dynamic QoE objectives based on real-world user engagement behavior, captures the different latency and quality requirements for motion and non-motion frames, and employs stochastic optimization to maximize QoE. Extensive deployment of over 1 million user sessions demonstrates that MARC reduces session freeze rates by 71% and increases user interaction time by 20%, significantly improving user engagement for e-commerce cloud rendering.",
    "link": "https://www.usenix.org/conference/atc25/presentation/zhao-yuankang",
    "session_title": "Networking: From Cloud to In-Network Intelligence",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "c2bbd3b7-b752-4747-8a07-25ada00e7523"
  },
  {
    "title": "Accelerating Distributed Graph Learning by Using Collaborative In-Network Multicast and Aggregation",
    "authors": "Zhaoyi Li,Central South University and Nanyang Technological University;Jiawei Huang, Yijun Li, and Jingling Liu,Central South University;Junxue Zhang,Hong Kong University of Science and Technology;Hui Li, Xiaojun Zhu, Shengwen Zhou, Jing Shao, Xiaojuan Lu, Qichen Su, and Jianxin Wang,Central South University;Chee Wei Tan,Nanyang Technological University;Yong Cui,Tsinghua University;Kai Chen,Hong Kong University of Science and Technology",
    "abstract": "Distributed GNN training systems typically partition large graphs into multiple subgraphs and train them across multiple workers to eliminate single-GPU memory limitations. However, the graph propagation in each iteration involves numerous one-to-many multicast and many-to-one aggregation operations across workers, resulting in massive redundant traffic and severe bandwidth bottlenecks. Offloading multicast and aggregation operations into programmable switches has the potential to reduce the traffic volume significantly. Unfortunately, the complex dependencies among graph data and the limited switch-aggregator resources lead to performance degradation. The graph-agnostic sending order results in excessive traffic in multicast operations, leading to a severe backlog. Additionally, a small number of vertices may consume the major part of aggregator resources, while most traffic misses the opportunity for in-network aggregation.\nTo tackle these challenges, we propose SwitchGNN, which accelerates graph learning through coordinated in-network multicast and aggregation. First, to alleviate the link under-utilization and queue backlog, we design a graph-aware multicast reordering algorithm, which prioritizes the upload of multicast vertices with the higher number of neighbors to reduce the communication time. Second, to prevent aggregator overflow, SwitchGNN employs a multi-level graph partitioning mechanism that further partitions boundary vertices into independent blocks to perform in-network aggregation in batches while ensuring the correctness of the graph propagation. We implement SwitchGNN using P4 programmable switch and DPDK host stack. The experimental results of the real testbed and NS3 simulations show that SwitchGNN effectively reduces the communication overhead and speeds up the training time by up to 74%.",
    "link": "https://www.usenix.org/conference/atc25/presentation/li-zhaoyi",
    "session_title": "Networking: From Cloud to In-Network Intelligence",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "ce5ae8e6-e478-4a75-858e-d8279e9984f2"
  },
  {
    "title": "Opening Up Kernel-Bypass TCP Stacks",
    "authors": "Shinichi Awamoto and Michio Honda,University of Edinburgh",
    "abstract": "We have seen a surge of kernel-bypass network stacks with different design decisions for higher throughput and lower latency than the kernel stack, but how do they perform in comparison to each others in a variety of workload, given that modern stacks have to handle both bulk data transfers over multi-hundred gigabit Ethernet and small request-response messages that require low latency? We found that even representative kernel-bypass stacks have never been compared for a set of basic workloads, likely because of difficulty to run their implementation. This paper takes the first step towards answering that question by comparing six in-kernel or kernel-bypass stacks. We show that existing stacks cannot handle those workloads at the same time or lack generality. We then use those observations to discuss possible pathways towards practical kernel-bypass stacks.",
    "link": "https://www.usenix.org/conference/atc25/presentation/awamoto",
    "session_title": "Networking: From Cloud to In-Network Intelligence",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "927941e0-66e0-4bfd-9c04-d1307761521d"
  },
  {
    "title": "GPREEMPT: GPU Preemptive Scheduling Made General and Efficient",
    "authors": "Ruwen Fan and Tingxu Ren,Tsinghua University;Minhui Xie,Renmin University of China;Shiwei Gao, Jiwu Shu, and Youyou Lu,Tsinghua University",
    "abstract": "GPUs support various workloads with different peak periods and diverse service level agreements (SLA) requirements, including latency-critical tasks and best-effort tasks. Co-locating tasks with diverse SLA demands can enhance resource utilization, yet it introduces the risk of performance interference. Prior work employs preemption strategies to enforce SLAs for latency-critical tasks. These strategies can be classified into two categories: wait-based and reset-based approaches. The wait-based strategy ensures broad generality but incurs significant preemption latency. In contrast, the reset-based strategy necessitates the idempotence of preempted kernels, limiting its generality.\nThis paper presents GPreempt, a preemption mechanism that breaks the trade-off. GPreempt implements a timeslice-based yield mechanism to enable context-switch preemption on GPUs. To mitigate the overhead associated with context-switching, GPreempt employs a hint-based pre-preemption technique to overlap the preemption process with the essential data-preparation phase. Our evaluation demonstrates that GPreempt achieves within 40 μs low-latency preemption comparable to executing only latency-critical tasks while remaining applicable to non-idempotent workloads, where reset-based mechanisms prove inadequate.",
    "link": "https://www.usenix.org/conference/atc25/presentation/fan",
    "session_title": "Operating Systems: Scheduling, Security, and Extensibility",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "1a120997-db35-4323-ad99-34b9e2f80491"
  },
  {
    "title": "μEFI: A Microkernel-Style UEFI with Isolation and Transparency",
    "authors": "Le Chen, Yiyang Wu, Jinyu Gu, Yubin Xia, and Haibo Chen,Shanghai Jiao Tong University",
    "abstract": "The Unified Extensible Firmware Interface (UEFI) has established itself as the leading firmware standard in modern devices, offering enhanced extensibility, user-friendly graphical interface, and improved security capabilities. At the core of UEFI security is UEFI Secure Boot, designed to ensure that only trusted drivers and applications are loaded during system startup. However, the growing number of UEFI-related CVEs and the emergence of attacks that bypass UEFI Secure Boot have highlighted its limitations, exposing vulnerabilities that could be exploited by attackers.\nWe propose μEFI, the first isolation framework for UEFI firmware that can transparently run UEFI modules in sandboxes. Drawing inspiration from microkernel design, we deprivilege UEFI modules to user mode and isolate them in different address spaces (sandboxes). To enable the transparent execution of UEFI modules, we propose trampoline injection and protocol analysis. To further strengthen UEFI security, we incorporate a seccomp-like mechanism to restrict module capabilities and perform automated input validation to detect and prevent invalid inputs. Evaluation results demonstrate that our system can run complex UEFI modules without modifications, which incurs a small overhead of 1.91% for UEFI boot phase.",
    "link": "https://www.usenix.org/conference/atc25/presentation/chen-le",
    "session_title": "Operating Systems: Scheduling, Security, and Extensibility",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "fe447b7c-4dd3-4397-9e32-51c7d71a0184"
  },
  {
    "title": "PageFlex: Flexible and Efficient User-space Delegation of Linux Paging Policies with eBPF",
    "authors": "Anil Yelam and Kan Wu,Google;Zhiyuan Guo,UC San Diego;Suli Yang,Google;Rajath Shashidhara,University of Washington;Wei Xu and Stanko Novaković,Google;Alex C. Snoeren,Google and UC San Diego;Kimberly Keeton,Google",
    "abstract": "To increase platform memory efficiency, hyperscalers like Google and Meta transparently demote \"cold\" application data to cheaper cost-per-byte memory tiers like compressed memory and NVMe SSDs. These systems rely on standard kernel paging policies and mechanisms to maximize the achievable memory savings without hurting application performance. Although the literature promises better policies, implementing and deploying them within the Linux kernel is challenging. Delegating policies and mechanisms to user space, through userfaultfd or library-based approaches, incurs overheads and may require modifying application code.\nWe present PageFlex, a framework for delegating Linux paging policies to user space with minimal overhead and full compatibility with existing real-world deployments. PageFlex uses eBPF to delegate policy decisions while providing low-overhead access to in-kernel memory state and access information, thus balancing flexibility and performance. Additionally, PageFlex supports different paging strategies for distinct memory regions and application phases. We show that PageFlex can delegate existing kernel-based policies with little (< 1%) application slowdown, effectively realizing the benefits of state-of-the-art policies like Hyperbolic caching and Leap prefetching, and unlocking application-specific benefits through region- and phase-aware policy specialization.",
    "link": "https://www.usenix.org/conference/atc25/presentation/yelam",
    "session_title": "Operating Systems: Scheduling, Security, and Extensibility",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "6f155117-3bce-4a7f-948a-6a08ea649efe"
  },
  {
    "title": "ASTERINAS: A Linux ABI-Compatible, Rust-Based Framekernel OS with a Small and Sound TCB",
    "authors": "Yuke Peng,SUSTech;Hongliang Tian,Ant Group;Junyang Zhang and Ruihan Li,Peking University and Zhongguancun Laboratory;Chengjun Chen and Jianfeng Jiang,Ant Group;Jinyi Xian,SUSTech;Xiaolin Wang, Chenren Xu, Diyu Zhou, and Yingwei Luo,Peking University and Zhongguancun Laboratory;Shoumeng Yan,Ant Group;Yinqian Zhang,SUSTech",
    "abstract": "How can one build afeature-rich,general-purpose, Rust-based operating system (OS) with aminimalandsoundTrusted Computing Base (TCB) formemory safety? Existing Rust-based OSes fall short due to their improper use ofunsafeRust in kernel development. To address this challenge, we propose a novel OS architecture calledframekernelthat realizes Rust's full potential to achieveintra-kernel privilege separation, ensuring TCB minimality and soundness. We present OSTD, a streamlined framework for safe Rust OS development, and ASTERINAS, a Linux ABI-compatible framekernel OS implemented entirely in safe Rust using OSTD. Supporting over 210 Linux system calls, ASTERINAS delivers performance on par with Linux, while maintaining a minimized, memory-safety TCB of only about 14.0% of the codebase. These results underscore the practicality and benefits of the framekernel architecture in building safe and efficient OSes.",
    "link": "https://www.usenix.org/conference/atc25/presentation/peng-yuke",
    "session_title": "Operating Systems: Scheduling, Security, and Extensibility",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "8bedbe67-5d4c-40bd-8143-77c2bb3ab37d"
  },
  {
    "title": "Rex: Closing the language-verifier gap with safe and usable kernel extensions",
    "authors": "Jinghao Jia and Ruowen Qin,University of Illinois Urbana-Champaign;Milo Craun and Egor Lukiyanov,Virginia Tech;Ayush Bansal and Minh Phan,University of Illinois Urbana-Champaign;Michael V. Le, Hubertus Franke, and Hani Jamjoom,IBM;Tianyin Xu,University of Illinois Urbana-Champaign;Dan Williams,Virginia Tech",
    "abstract": "Safe kernel extensions have gained significant traction, evolving from simple packet filters to large, complex programs that customize storage, networking, and scheduling. Existing kernel extension mechanisms like eBPF rely on in-kernel verifiers to ensure safety of kernel extensions by static verification using symbolic execution. We identify significant usability issues—safe extensions being rejected by the verifier—due to the language-verifier gap, a mismatch between developers’ expectation of program safety provided by a contract with the programming language, and the verifier’s expectation.\nWe present Rex, a new kernel extension framework that closes the language-verifier gap and improves the usability of kernel extensions in terms of programming experience and maintainability. Rex builds upon language-based safety to provide safety properties desired by kernel extensions, along with a lightweight extralingual runtime for properties that are unsuitable for static analysis, including safe exception handling, stack safety, and termination. With Rex, kernel extensions are written in safe Rust and interact with the kernel via a safe interface provided by Rex’s kernel crate. No separate static verification is needed. Rex addresses usability issues of eBPF kernel extensions without compromising performance.",
    "link": "https://www.usenix.org/conference/atc25/presentation/jia",
    "session_title": "Operating Systems: Scheduling, Security, and Extensibility",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "545f142d-aa22-4895-84f2-218851697610"
  },
  {
    "title": "Barre: Empowering Simplified and Versatile Programmable Congestion Control in High-Speed AI Clusters",
    "authors": "Yajuan Peng,Shanghai Key Laboratory for Intelligence Information Processing, Fudan University, China;Haoran Wei, Xiaolong Zhong, Junkai Huang, Haohan Xu, Zicheng Wang, Yang Bai, Zhuo Jiang, and Jianxi Ye,ByteDance;Xiaoliang Wang,/;Xiaoming Fu,Shanghai Key Laboratory for Intelligence Information Processing, Fudan University, China;Huichen Dai,ByteDance",
    "abstract": "Network interface cards (NICs) and switches have entered the 400 Gbps era. RoCEv2 networks face significant challenges in congestion management, particularly under high-throughput workloads. While advanced congestion control algorithms have been proposed, their deployment in large-scale data centers remains hindered by complex parameter tuning and dependency on sophisticated hardware features. In this paper, we present Barre, a simple yet highly effective congestion control scheme designed for modern AI/HPC clusters operating at 400 Gbps. By leveraging commodity hardware and standard network functionalities, Barre achieves near-optimal performance in fairness, congestion responsiveness, and scalability with minimal overhead. Deployed in our 400 Gbps RoCE cluster for over a year and supporting up to 10,000 GPUs, Barre improves AI training task throughput by an average of 9.6%. Furthermore, we demonstrate that Barre’s core principles can be seamlessly applied to enhance DCQCN, a widely deployed congestion control algorithm, underscoring its practicality and versatility.",
    "link": "https://www.usenix.org/conference/atc25/presentation/peng-yajuan",
    "session_title": "The Programmable Data Plane: SmartNICs and Beyond",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "c6b9725b-0818-4df8-af94-3149f87873d5"
  },
  {
    "title": "FLB: Fine-grained Load Balancing for Lossless Datacenter Networks",
    "authors": "Jinbin Hu,Central South University, Hong Kong University of Science and Technology, Changsha University of Science and Technology;Wenxue Li, Xiangzhou Liu, Junfeng Wang, and Bowen Liu,Hong Kong University of Science and Technology;Ping Yin,Inspur;Jianxin Wang and Jiawei Huang,Central South University;Kai Chen,Hong Kong University of Science and Technology",
    "abstract": "Remote Direct Memory Access (RDMA) over Converged Ethernet (RoCE) cooperating with Priority Flow Control (PFC) has been widely deployed in production datacenters to enable low latency, lossless transmission. At the same time, modern datacenters typically offer parallel transmission paths between any pair of end-hosts, underscoring the importance of load balancing. However, the well-studied load balancing mechanisms designed for lossy datacenter networks (DCNs) are ill-suited for such lossless environments.\nThrough extensive experiments, we are among the first to comprehensively inspect the interactions between PFC and load balancing, and uncover that existing fine-grained rerouting schemes can be counterproductive to spread the congested flows among more paths, further aggravating PFC’s head-of-line (HoL) blocking. Motivated by this, we present FLB, a Fine-grained Load Balancing scheme for lossless DCNs. At its core, FLB employs threshold-free rerouting to effectively balance traffic load and improve link utilization during normal conditions and leverages timely congested flow isolation to eliminate HoL blocking on non-congested flows when congestion occurs. We have fully implemented a FLB prototype, and our evaluation results show that FLB reduces PFC PAUSE rate by up to 96% and avoids HoL blocking, translating to up to 45% improvement in goodput over CONGA+DCQCN and 40%, 36%, 29% and 18% reduction in average flow completion time (FCT) over LetFlow+Swift, MP-RDMA, Proteus+DCQCN and LetFlow+PCN, respectively.",
    "link": "https://www.usenix.org/conference/atc25/presentation/hu-jinbin",
    "session_title": "The Programmable Data Plane: SmartNICs and Beyond",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "d3d27584-febf-4542-9eff-cd84d2cd6531"
  },
  {
    "title": "SNARY: A High-Performance and Generic SmartNIC-accelerated Retrieval System",
    "authors": "Qiaoyin Gan,Institute of Computing Technology, Chinese Academy of Sciences;Heng Pan,Computer Network Information Center, Chinese Academy of Sciences;Luyang Li, Kai Lv, and Hongtao Guan,Institute of Computing Technology, Chinese Academy of Sciences;Zhaohua Wang,Computer Network Information Center, Chinese Academy of Sciences;Zhenyu Li,Institute of Computing Technology, Chinese Academy of Sciences;Gaogang Xie,Computer Network Information Center, Chinese Academy of Sciences",
    "abstract": "Industrial large-scale recommendation systems mostly follow a two-stage paradigm: retrieval and ranking stages. The retrieval stage aims to select thousands of relevant candidates from a vast corpus with millions or more items, and thus often becomes the performance bottleneck. Offloading the retrieval stage to hardware is a promising solution. Nevertheless, previous solutions either fail to achieve optimal performance or lack the sufficient generality to support fuzzy search, which has been widely used in modern retrieval systems to improve their scalability and efficiency.\nIn this paper, we present SNARY, a generic SmartNIC-accelerated retrieval system, to facilitate both exact and fuzzy search. Specifically, SNARY utilizes High-Bandwidth Memory (HBM) for corpus storing and scanning and designs two types of search engines: a data parallelism exact search, and a Locality-Sensitive Hashing (LSH)-based fuzzy search. Furthermore, SNARY employs a pipeline-based approach to select Top-K items and streams the data flow of the whole system. We have implemented SNARY on Xilinx commercial SmartNICs. Experimental results show SNARY achieves a 20.91%-83.88% lower latency and a 1.26×-18.27× higher latency-bounded throughput in exact search scenarios, and achieves a 85.13%-87.40%lower latency and a 20.18×-23.81× higher latency-bounded throughput in fuzzy search scenarios in comparison with the state-of-the-art hardware-based solutions.",
    "link": "https://www.usenix.org/conference/atc25/presentation/gan",
    "session_title": "The Programmable Data Plane: SmartNICs and Beyond",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "1f599b8a-9c35-4143-a805-fe40353bddc3"
  },
  {
    "title": "Minos : A Lightweight and Dynamic Defense against Traffic Analysis in Programmable Data Planes",
    "authors": "Zihao Wang,Pengcheng Laboratory and Tsinghua Shenzhen International Graduate School;Qing Li, Guorui Xie, Dan Zhao, Kejun Li, and Zhuochen Fan,Pengcheng Laboratory;Lianbo Ma,Northeastern University;Yong Jiang,Pengcheng Laboratory and Tsinghua Shenzhen International Graduate School",
    "abstract": "Encrypted traffic analysis techniques extract valuable information from encrypted traffic and pose significant threats to user privacy. However, existing defense mechanisms against traffic analysis either incur significant bandwidth overhead and lack scalability, or fail to provide sufficient defense against evolving attacks. The emerging programmable switches provide data plane programmability with line rate packet processing to support advanced defense mechanisms.\nIn this work, we present Minos, a lightweight and scalable programmable switch-based defense mechanism while providing both identity anonymity and traffic anonymity. Minos comprises three key modules: the Proxy Module, the Traffic Morphing Module, and the Schedule Module. In the Proxy Module, we design encryption round compression to take advantage of the match-action pipeline of programmable switches and realize line rate packet header encryption. The Schedule Module incorporates a lightweight dynamic flow scheduling method to interleave packets from different flows, so as to simulate dummy packets without causing bandwidth and delay overhead on the data plane.\nThe Traffic Morphing Module further obfuscates the flows by dummy packet insertion and packet padding. Specifically, we devise a lightweight dummy packet scheduling method using priority dummy queues, minimizing bandwidth and delay overhead within the switch pipeline. We implement our defense on Tofino1 switches and adapt our method to defend Website Fingerprinting and IoT Fingerprinting. The results show that Minos can reduce the accuracy of previous attacks to less than 20% with only one-tenth of the overhead of existing defenses.",
    "link": "https://www.usenix.org/conference/atc25/presentation/wang-zihao",
    "session_title": "The Programmable Data Plane: SmartNICs and Beyond",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "ce209804-780e-43ed-96f2-02b60b5566f2"
  },
  {
    "title": "GeneralSparse: Bridging the Gap in SpMM for Pruned Large Language Model Inference on GPUs",
    "authors": "Yaoyu Wang, Xiao Guo, Junmin Xiao, De Chen, and Guangming Tan,SKLP, Institute of Computing Technology, CAS; and University of Chinese Academy of Sciences",
    "abstract": "The rapid growth of generative model parameters poses challenges in deployment, especially regarding weight storage and inference latency. The weight pruning is an effective technique to reduce the computational and memory overhead of Large Language Models (LLMs) while maintaining accuracy, which transforms the matmuls to Sparse Matrix Multiplication (SpMM) computation. However, the diverse pruning methods introduce varying sparsity patterns that challenge high-performance SpMM on GPUs. Existing solutions are limited with adaptability to these patterns, flexibility in handling different sparsity levels, and support for efficient optimizations.\nIn this work, we present GeneralSparse, a novel solution that bridges this gap by leveraging the abstraction of memory access and reduction spaces. GeneralSparse designs the process of dividing box to adapt dynamically to diverse pruning patterns and proposes hierarchical reduction algorithms tailored to GPU hierarchies. Through evaluations on pruned LLM weight matrices and the SuiteSparse collection, GeneralSparse achieves up to 20.82× speedup over cuSPARSE libraries. At end-to-end inference time on LLMs, GeneralSparse achieves up to 2.33× speedup over counterparts.",
    "link": "https://www.usenix.org/conference/atc25/presentation/wang-yaoyu",
    "session_title": "Performance: Benchmarking, Caching, and Workload Characterization",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "b70d4020-1ffb-4646-86a8-18fc1e720b00"
  },
  {
    "title": "HyCache: Hybrid Caching for Accelerating DNN Input Preprocessing Pipelines",
    "authors": "Keshav Vinayak Jha,Independent Researcher;Shweta Pandey,Indian Institute of Science;Murali Annavaram,University of Southern California;Arkaprava Basu,Indian Institute of Science",
    "abstract": "End-to-end deep neural networks' (DNNs) training performance depends not only on the time spent in training the model weights but also on the time spent in loading and preprocessing the training data. Recent advances in GPU hardware have made training substantially faster. As a result, the bottleneck has shifted to the CPU-based input pipeline. This pipeline must fetch and transform each sample through multiple stages before it can be consumed by the GPU.\nPrior works accelerate preprocessing by caching intermediate results across epochs, but suffer from several key limitations:\nWe thus introduce Hybrid Cache (HyCache), a runtime that enables the caching of subsets of preprocessed data from multiple intermediate steps onbothmemory and storage. HyCache possesses the ability to partially cache the outputs of a stage across both memory and storage. HyCache deploys integer linear programming (ILP) to automatically determine the best caching strategies across the memory and the storage by finding an optimal trade-off between recomputation and caching. Importantly, it does sowithoutany manual intervention. HyCache outperforms state-of-the-art prior approaches, delivering a raw pipeline throughput improvement ranging in speedups from 1.11× to 10.1× over a variety of pipelines.",
    "link": "https://www.usenix.org/conference/atc25/presentation/jha",
    "session_title": "Performance: Benchmarking, Caching, and Workload Characterization",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "1c43a201-d08e-4952-919a-dd3bac4e30b8"
  },
  {
    "title": "The Koala Benchmarks for the Shell: Characterization and Implications",
    "authors": "Evangelos Lamprou and Ethan Williams,Brown University;Georgios Kaoukis,National Technical University of Athens;Zhuoxuan Zhang,Brown University;Michael Greenberg,Stevens Institute of Technology;Konstantinos Kallas,University of California, Los Angeles;Lukas Lazarek and Nikos Vasilakis,Brown UniversityAwarded Best Paper!",
    "abstract": "KOALA is a benchmark suite aimed at performance-oriented research targeting the Unix and Linux shell. It combines a systematic collection of diverse shell programs collected from tasks found out in the wild, various real inputs to these programs facilitating small and large deployments, extensive analysis and characterization aiding their understanding, and additional infrastructure and tooling aimed at usability and reproducibility in systems research. The KOALA benchmarks perform a variety of common shell tasks; they combine all major language features of the POSIX shell; they use a variety of POSIX, GNU Coreutils, and third-party components; and they operate on inputs of varying size and composition—available on both permanent archival storage and scalable cloud storage. Applying KOALA to four systems aimed at accelerating shell programs offers a broader perspective on their trade-offs, generalizes their key results, and contributes to a better understanding of these systems.",
    "link": "https://www.usenix.org/conference/atc25/presentation/lamprou",
    "session_title": "Performance: Benchmarking, Caching, and Workload Characterization",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "aa3f0137-0181-48e2-839a-ae90de61b5ea"
  },
  {
    "title": "KVCache Cache in the Wild: Characterizing and Optimizing KVCache Cache at a Large Cloud Provider",
    "authors": "Jiahao Wang, Jinbo Han, and Xingda Wei,Shanghai Jiao Tong University;Sijie Shen,Alibaba Group;Dingyan Zhang,Shanghai Jiao Tong University;Chenguang Fang,Alibaba Group;Rong Chen,Shanghai Jiao Tong University;Wenyuan Yu,Alibaba Group;Haibo Chen,Shanghai Jiao Tong University",
    "abstract": "Serving large language models (LLMs) is important for cloud providers, and caching intermediate results (KV$) after processing each request substantially improves serving throughput and latency. However, there is limited understanding of how LLM serving benefits from KV$ caching, where system design decisions like cache eviction policies are highly workload-dependent.\nIn this paper, we present the first systematic characterization of the KV$ workload patterns from one of the leading LLM service providers. We draw observations that were not covered by previous studies focusing on synthetic workloads, including: KV$ reuses are skewed across requests, where reuses between single-turn requests are equally important as multi-turn requests; the reuse time and probability are diverse considering all requests, but for a specific request category, the pattern tends to be predictable; and the overall cache size required for an ideal cache hit ratio is moderate. Based on the characterization, we further propose a workload-aware cache eviction policy that improves the serving performance under real-world traces, especially with limited cache capacity.",
    "link": "https://www.usenix.org/conference/atc25/presentation/wang-jiahao",
    "session_title": "Performance: Benchmarking, Caching, and Workload Characterization",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "9233002b-44c5-473d-af15-3e28b61a30f8"
  },
  {
    "title": "LogCrisp: Fast Aggregated Analysis on Large-scale Compressed Logs by Enabling Two-Phase Pattern Extraction and Vectorized Queries",
    "authors": "Junyu Wei, Guangyan Zhang, and Junchao Chen,Tsinghua University;Qi Zhou,Alibaba Cloud",
    "abstract": "Cloud providers generate logs at massive scales, often requiring dense compression using log patterns. Meanwhile, aggregated analysis on logs is essential for various applications. However, performing aggregated analysis on highly compressed logs presents two fundamental challenges: 1) it is hard to extract a set of log patterns that have both a global description and high filtering effectiveness; 2) executing full-text queries on numerically encoded data is challenging.\nThis paper proposes a two-phase pattern extraction paradigm. Such a paradigm decouples messages within patterns into Sketch (global pattern structure) and Specs (local fine-grained pattern specifications). The Sketch is extracted in an offline phase to provide a comprehensive global description, while the Specs are customized in the online phase to enhance pattern filtering effectiveness. Additionally, this paper proposes an efficient prefix/suffix vectorized query algorithm for numerically encoded data, which leverages AVX SIMD instructions to convert full-text queries into high-performance range/point queries.\nWe implement and integrate all these techniques into a system called LogCrisp, which is evaluated using nearly 7TB of logs from both production environments and public datasets. Experimental results show that LogCrisp achieves an order of magnitude lower analysis latency, 3.8× higher ingestion speed, and an almost identical compression ratio, compared with state-of-the-art works.",
    "link": "https://www.usenix.org/conference/atc25/presentation/wei",
    "session_title": "Storage Innovations: Logs, Tiers, and Modern Flash",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "a73b3246-c4c9-402e-bfd2-6cf044e51c4c"
  },
  {
    "title": "HotRAP: Hot Record Retention and Promotion for LSM-trees with Tiered Storage",
    "authors": "Jiansheng Qiu and Fangzhou Yuan,Tsinghua University;Mingyu Gao and Huanchen Zhang,Tsinghua University and Shanghai Qi Zhi Institute",
    "abstract": "Tiered storage architectures are promising to improve cost efficiency by combining small and fast storage with slower but cheaper mediums. However, existing designs of Log-Structured Merge-trees (LSM-trees) on tiered storage cannot simultaneously support efficient read and write accesses. Keeping the upper and lower LSM-tree levels in the fast and slow storage respectively (i.e., tiering) allows efficient writes to the fast disks, but read-hot data may be stuck in the slow disks. Putting all the levels in the slow storage and using the fast disks as a cache (i.e., caching) can handle frequently read data efficiently, but LSM-tree compactions now need to happen in the slow disks.\nWe present HotRAP, a key-value store based on RocksDB that follows the tiering approach above, but enhances it to timely promote hot records individually from slow to fast storage and keep them in fast storage while they are hot. HotRAP uses an on-disk data structure (a specially-made LSM-tree) to track the hotness of keys in a fine-grained manner, and leverages two pathways to ensure that hot records reach fast storage with short delays. Our experiments show that HotRAP outperforms state-of-the-art LSM-trees on tiered storage by up to 1.6× compared to the second best under read-write-balanced YCSB workloads with common access skew patterns, and up to 1.5× under Twitter production workloads.",
    "link": "https://www.usenix.org/conference/atc25/presentation/qiu",
    "session_title": "Storage Innovations: Logs, Tiers, and Modern Flash",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "cc400d9e-19cb-4164-969b-ea255d05bfb1"
  },
  {
    "title": "Mitigating Resource Usage Dependency in Sorting-based KV Stores on Hybrid Storage Devices via Operation Decoupling",
    "authors": "Qingyang Zhang and Yongkun Li,University of Science and Technology of China;Yubiao Pan,Huaqiao University;Haoting Tang,University of Science and Technology of China;Yinlong Xu,University of Science and Technology of China, and Anhui Provincial Key Laboratory of High Performance Computing",
    "abstract": "LSM-tree-based key-value (KV) stores mainly employ sorting-based operations (e.g., flush and compaction) to manage the KV pairs on disk. Through analysis and experiments with RocksDB, we identify that the sorting operations cause critical issues of operation coupling, including intertwined resource consumption within an operation, interdependencies and contention among operations. These coupling problems lead to dependency in resource usage and are particularly exacerbated on hybrid storage devices, causing significant resource fragmentation and increased write stalls. Existing approaches to mitigating write stalls rely on either fixed differentiated data management or superficial scheduling of data sorting operations, but they fail to fundamentally address the resource usage dependency caused by operation coupling.\nIn this paper, we propose DecouKV, designed to alleviate resource usage dependency and enhance resource utilization on hybrid storage devices through operation decoupling. Specifically, DecouKV decouples data sorting operations into CPU-intensive index merge tasks and I/O-intensive data append and data flush tasks by separating indexes from data files, managing indexes with a mergeable skip list-based structure and managing data with append-only files. Furthermore, we propose an elastic scheme for tuning level capacity and introduce a parameterized queue-based task scheduling strategy to maximize resource utilization. We implement DecouKV and conduct experimental evaluations. Compared to RocksDB, as well as state-of-the-art systems such as MatrixKV, PrismDB, SplitDB and ADOC, DecouKV improves CPU utilization by 25.4%-32.3%, increases throughput by 2.3-4.9×, and reduces tail latency by 74.3%-91.4% under write-intensive workloads. DecouKV also achieves a modest throughput improvement of 1.2-2.3× under read-intensive workloads.",
    "link": "https://www.usenix.org/conference/atc25/presentation/zhang-qingyang",
    "session_title": "Storage Innovations: Logs, Tiers, and Modern Flash",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "07eb6a89-4c8f-4362-8c02-20de79e0b373"
  },
  {
    "title": "SolFS: An Operation-Log Versioning File System for Hash-free Efficient Mobile Cloud Backup",
    "authors": "Riwei Pan,Department of Computer Science, City University of Hong Kong;Yu Liang,ETH Zurich;Lei Li and Hongchao Du,Department of Computer Science, City University of Hong Kong;Tei-Wei Kuo,Delta Electronics and National Taiwan University;Chun Jason Xue,Mohamed bin Zayed University of Artificial Intelligence",
    "abstract": "Mobile cloud backup applications are widely used to safeguard user data. This paper found that current cloud backup is inefficient on resource-limited mobile devices because it consumes excessive CPU resources for delta synchronization that requires intensive hash computation to identify the modified ranges of file data. To address this issue, this paper presents SolFS, an operation log versioning file system to optimize mobile cloud backup efficiency. The core idea is that if the cloud backup application knows the modified offset and length of each write since the last backup, it will be able to identify the new modified data and upload them only, avoiding data hashing throughout the entire file. SolFS proposes a series of designs to achieve this design goal. First, SolFS introduces per-file mergeable operation logging that allows each file to manage its write operation logs (i.e., offset and length) in an extent tree and merge operation logs with contiguous or overlapping modified ranges of file data. Then, SolFS proposes the operation log persistence and versioning mechanism that allows different cloud backup applications to manage their own file versions without interfering with each other. In addition, SolFS incorporates techniques such as compact log and dynamic granularity, to optimize the memory and storage overhead to the system. Finally, SolFS achieves hash-free file difference identification with minimum additional overhead and extends the ability of cloud backup applications. The experimental results show that SolFS can significantly reduce the computational overhead of both APP-side or server-side over 90% on average and the total cloud synchronization time by over 88.8% when files are updated.",
    "link": "https://www.usenix.org/conference/atc25/presentation/pan",
    "session_title": "Storage Innovations: Logs, Tiers, and Modern Flash",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "028ff051-7469-4baa-bf9a-ad26be57c644"
  },
  {
    "title": "Z-LFS: A Zoned Namespace-tailored Log-structured File System for Commodity Small-zone ZNS SSDs",
    "authors": "Inhwi Hwang,Seoul National University;Sangjin Lee,Chung-Ang University;Sunggon Kim,Seoul National University of Science and Technology;Hyeonsang Eom,Seoul National University;Yongseok Son,Chung-Ang University",
    "abstract": "This paper presents a novel zoned namespace (ZNS) tailored log-structured file system (LFS) called Z-LFS for commodity small-zone ZNS SSDs. Specifically, Z-LFS first enables append-only updates on metadata while leveraging the unique metadata characteristic of LFS on ZNS SSDs. Second, Z-LFS devises speculative log stream management according to the workload temperature to maximize active zone utilization. Finally, Z-LFS adopts conflict-aware zone allocation to minimize resource contention within ZNS SSDs while considering LFS features. We implement Z-LFS based on F2FS in the Linux kernel and evaluate it with commodity ZNS SSD. Our evaluations show that Z-LFS achieves higher performance by up to 33.44× and 3.5× compared with F2FS and a state-of-the-art interface for commodity ZNS SSDs, respectively.",
    "link": "https://www.usenix.org/conference/atc25/presentation/hwang",
    "session_title": "Storage Innovations: Logs, Tiers, and Modern Flash",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "b87b03d2-cc79-4753-99d2-7f4b7ee26860"
  },
  {
    "title": "CLONE: Customizing LLMs for Efficient Latency-Aware Inference at the Edge",
    "authors": "Chunlin Tian, Xinpeng Qin, Kahou Tam, Li Li, Zijian Wang, Yuanzhe Zhao, Minglei Zhang, and Chengzhong Xu,University of Macau",
    "abstract": "Deploying large language models (LLMs) on edge devices is crucial for delivering fast responses and ensuring data privacy. However, the limited storage, weight, and power of edge devices make it difficult to deploy LLM-powered applications. These devices must balance latency requirements with energy consumption and model accuracy. In this paper, we first quantify the challenges of deploying LLMs on off-the-shelf edge devices and then we present CLONE, an in-depth algorithm-hardware co-design at both the model- and system-level that intelligently integrates real-time, energy optimization while maintaining robust generality. In order to maximize the synergistic benefits of these algorithms in always-on and intermediate edge computing settings, we specialize in a 28nm scalable hardware accelerator system. \nWe implement and extensively evaluate CLONE on two off-the-shelf edge platforms. Experiments show that CLONE effectively accelerates the inference process up to 11.92×, and saves energy up to 7.36×, while maintaining high-generation.",
    "link": "https://www.usenix.org/conference/atc25/presentation/tian",
    "session_title": "Serving Intelligence: Efficient LLM Inference at the Edge and Cloud",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "306729a8-9537-4d3b-a80e-65c187a30406"
  },
  {
    "title": "Weaver: Efficient Multi-LLM Serving with Attention Offloading",
    "authors": "Shiwei Gao, Qing Wang, Shaoxun Zeng, Youyou Lu, and Jiwu Shu,Tsinghua University",
    "abstract": "LLM serving platforms typically provide services for tens to hundreds of different models, where a small number of hot models receive the majority of the requests, while most other models remain cold. Yet, current serving systems can not efficiently handle such workloads: Using dedicated instances for hot and cold models makes the GPU memory underutilized, and multiplexing different models with model parallelism introduces communication overhead.\nWe propose a mechanism calledworkload weaving, which offloads attention operators of hot models torunningcold models, achieving high GPU memory utilization with low communication cost. To mitigate the blocking caused by running cold models, we propose WEAVER with two key techniques: (i) GPU-driven dynamic control flow, which delegates the control logic of offloading to GPUs, letting the offloaded operators bypass pending kernels in the GPU hardware queue; (ii) operator splitting, which carefully divides the large kernels of cold models into smaller ones to mitigate the head-of-line blocking. Our evaluation using real-world LLM trace demonstrates that WEAVER improves the throughput of hot models by up to 77% while maintaining the same or lower TPOT. For the cold model, WEAVER incurs a modest overhead (3-5ms).",
    "link": "https://www.usenix.org/conference/atc25/presentation/gao",
    "session_title": "Serving Intelligence: Efficient LLM Inference at the Edge and Cloud",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "8594f009-27bc-4eff-bea3-fd81f6a8f46d"
  },
  {
    "title": "Torpor: GPU-Enabled Serverless Computing for Low-Latency, Resource-Efficient Inference",
    "authors": "Minchen Yu,The Chinese University of Hong Kong, Shenzhen; and Hong Kong University of Science and Technology;Ao Wang,Alibaba Group;Dong Chen, Haoxuan Yu, Xiaonan Luo, Zhuohao Li, and Wei Wang,Hong Kong University of Science and Technology;Ruichuan Chen,Nokia Bell Labs;Dapeng Nie, Haoran Yang, and Yu Ding,Alibaba Group",
    "abstract": "Serverless computing offers a compelling cloud model for online inference services. However, existing serverless platforms lack efficient support for GPUs, hindering their ability to deliver high-performance inference. In this paper, we present Torpor, a serverless platform for GPU-efficient, low-latency inference. To enable efficient sharing of a node’s GPUs among numerous inference functions, Torpor maintains models in main memory and dynamically swaps them onto GPUs upon request arrivals (i.e., late binding with model swapping). Torpor uses various techniques, including asynchronous API redirection, GPU runtime sharing, pipelined model execution, and efficient GPU memory management, to minimize latency overhead caused by model swapping. Additionally, we design an interference-aware request scheduling algorithm that utilizes high-speed GPU interconnects to meet latency service-level objectives (SLOs) for individual inference functions. We have implemented Torpor and evaluated its performance in a production environment. Utilizing late binding and model swapping, Torpor can concurrently serve hundreds of inference functions on a worker node with 4 GPUs, while achieving latency performance comparable to native execution, where each model is cached exclusively on a GPU. Pilot deployment in a leading commercial serverless cloud shows that Torpor reduces the GPU provisioning cost by 70% and 65% for users and the platform, respectively.",
    "link": "https://www.usenix.org/conference/atc25/presentation/yu",
    "session_title": "Serving Intelligence: Efficient LLM Inference at the Edge and Cloud",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "6159b2f4-868a-48df-b6a1-22ab4e3d1283"
  },
  {
    "title": "Toppings: CPU-Assisted, Rank-Aware Adapter Serving for LLM Inference",
    "authors": "Suyi Li, Hanfeng Lu, and Tianyuan Wu,Hong Kong University of Science and Technology;Minchen Yu,The Chinese University of Hong Kong, Shenzhen;Qizhen Weng,TeleAI, China Telecom;Xusheng Chen and Yizhou Shan,Huawei Cloud;Binhang Yuan and Wei Wang,Hong Kong University of Science and Technology",
    "abstract": "Low-Rank Adaptation (LoRA) is a popular approach that adapts a base large language model (LLM) to domain-specific tasks by adding lightweight trainable adapters. In this paper, we present Toppings, a system that efficiently serves many LoRA adapters derived from a common base model. Toppings pins the base model on GPUs and dynamically loads the requested LoRA adapters from host memory as new requests arrive. In view of the high GPU loading overhead, which not only delays the time-to-first-token of the newly arrived request but alsointerruptsthe ongoing decoding ofallinflight queries when continuous batching is in use, Toppings proposes aCPU-assistedLoRA serving approach. It simultaneously uses CPUs to compute the lightweight adaption for prefilling as the requested LoRA adapter is being loaded onto GPUs; it then switches to the GPUs after loading completes to resume the remaining computation. Toppings develops a highly optimized synchronization mechanism and pipeline loading scheme to efficiently coordinate LoRA computation on the CPUs and GPUs. Toppings further designs arank-aware scheduling algorithmthat optimally schedules heterogeneous LoRA requests to maximize the SLO attainment. Compared with the state-of-the-art LoRA serving systems, Toppings improves the average request serving latency by up to 1.7× and achieves an SLO attainment of up to 99%.",
    "link": "https://www.usenix.org/conference/atc25/presentation/li-suyi-toppings",
    "session_title": "Serving Intelligence: Efficient LLM Inference at the Edge and Cloud",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "5f551678-fb2a-4ced-a5b6-62f90f7834a0"
  },
  {
    "title": "QFactory: Accelerating Quantized Large Language Model Serving with Qtile Graphs",
    "authors": "Qihao Zhang, Mingshu Zhai, Rui Sun, and Jidong Zhai,Tsinghua University",
    "abstract": "Quantization is a critical technique for accelerating large language models. To achieve tangible speedups, weight dequantization must be performed on-the-fly, necessitating tailored quantized kernels for various quantization algorithms and precision formats. Existing methods typically rely on a static eager execution paradigm for dequantization operations, which overlooks a broader range of potential optimizations, leading to suboptimal performance.\nIn this paper, we present QFactory, an efficient compilation framework designed to generate high-performance quantized kernels. QFactory introduces a novel Qtile abstraction that facilitates the representation of quantized tensors, transforming the traditional tensor computation graph into a Qtile-graph (Qgraph). Leveraging this QGraph abstraction, QFactory first explores graph-level Qtile computation transformations to generate equivalent QGraphs, thereby expanding the search space for optimizations. Subsequently, QFactory employs operator-level Qtile scheduling to identify optimal memory loading strategies for each Qtile within the QGraph before generating the final code. Experimental results demonstrate that QFactory achieves an average performance improvement of 1.66× over existing systems and delivers 1.23× end-toend generation speedup when integrated into state-of-the-art large language model serving systems.",
    "link": "https://www.usenix.org/conference/atc25/presentation/zhang-qihao",
    "session_title": "Serving Intelligence: Efficient LLM Inference at the Edge and Cloud",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "cde88266-5534-4bc5-925e-2b9f4885a3a1"
  },
  {
    "title": "PluS: Highly Efficient and Expandable ML Compiler with Pluggable Graph Schedules",
    "authors": "Ruofan Wu,Renmin University of China;Zhen Zheng,Microsoft;Feng Zhang,Renmin University of China;Chuanjie Liu,Microsoft;Zaifeng Pan,Renmin University of China;Jidong Zhai,Tsinghua University;Xiaoyong Du,Renmin University of China",
    "abstract": "Machine learning (ML) compilers are effective solutions for deploying diverse Deep Neural Network (DNN) workloads on various hardware platforms automatically. However, there is a notable lag in existing ML compilers when it comes to supporting emerging optimization techniques like recent attention optimizations. These compilers lack the requisite flexibility to support expert-driven subgraph optimizations timely, resulting in suboptimal performance compared to manually optimized libraries. Conversely, template-based compilers lack the ability to abstractly express subgraphs, thereby reducing their adaptability to subtle changes in model architectures.\nIn this paper, we present PluS, an end-to-end ML compiler that facilitates the deployment of expert-optimized subgraph implementations while still preserving compiler flexibility. We rethink the encapsulation of ML compiler and decouple the burdensome embedded graph transformation process. PluS provides a lightweight loop-centric subgraph abstraction for experts to manage a flexible pattern warehouse, and employs a pattern identification approach for subgraph generation. As a result, PluS can deploy efficient subgraph implementations with minimal manual efforts, making it outperform the state-of-the-art rule-based embedded compilers (up to 4.04× speedup) on popular ML models.",
    "link": "https://www.usenix.org/conference/atc25/presentation/wu-ruofan",
    "session_title": "Optimizing ML Execution: Compilers, Pipelines, and Runtimes",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "8adfcda7-0d5c-4e32-9095-088451d107e1"
  },
  {
    "title": "Obscura: Concealing Recomputation Overhead in Training of Large Language Models with Bubble-filling Pipeline Transformation",
    "authors": "Yuzhou Huang and Yapeng Jiang,Sun Yat-sen University;Zicong Hong,Hong Kong University of Science and Technology;Wuhui Chen,Sun Yat-sen University;Bin Wang and Weixi Zhu,Huawei Technologies;Yue Yu,Peng Cheng Laboratory;Zibin Zheng,Sun Yat-sen University",
    "abstract": "Pipeline parallelism has become a widely adopted strategy for training large language models (LLMs) by distributing computational workloads across multiple nodes. However, it faces a significant challenge in the form of memory bottlenecks at early stages. While recomputation can mitigate this issue, it incurs additional computational overhead.\nTo address this limitation, we propose Obscura, a computationally efficient pipeline training system designed to optimize recomputation overhead under the given memory constraints. Leveraging the observation that bubbles following backward passes can conceal recomputation overhead in pipeline parallelism, Obscura introduces a novel pipeline transformation to enhance overhead concealment. Furthermore, we integrate swapping techniques into the pipeline and model the execution time as an optimization problem to identify an optimal recomputation strategy. A partition adjustment algorithm is also implemented to balance computation across stages under the transformation. Evaluations on Llama-2 and GPT-3 models of various sizes demonstrate that Obscura achieves throughput improvements of up to 1.33× compared to widely used recomputation baselines.",
    "link": "https://www.usenix.org/conference/atc25/presentation/huang-yuzhou",
    "session_title": "Optimizing ML Execution: Compilers, Pipelines, and Runtimes",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "c8b3e7d1-6902-47b9-b5fc-39879dde5c9f"
  },
  {
    "title": "PPipe: Efficient Video Analytics Serving on Heterogeneous GPU Clusters via Pool-Based Pipeline Parallelism",
    "authors": "Z. Jonny Kong, Qiang Xu, and Y. Charlie Hu,Purdue University",
    "abstract": "With the rapid innovation of GPUs, heterogeneous GPU clusters in both public clouds and on-premise data centers have become increasingly commonplace. In this paper, we demonstrate how pipeline parallelism, a technique wellstudied for throughput-oriented deep learning model training, can be used effectively for serving latency-bound model inference, e.g., in video analytics systems, on heterogeneous GPU clusters. Our work exploits the synergy between diversity in model layers and diversity in GPU architectures, which results in comparable inference latency for many layers when running on low-class and high-class GPUs. We explore how such overlooked capability of low-class GPUs can be exploited using pipeline parallelism and present a novel inference serving system, PPipe, that employs pool-based pipeline parallelism via an MILP-based control plane and a data plane that performs resource reservation-based adaptive batching. Evaluation results on diverse workloads (18 CNN models) show that PPipe achieves 41.1%–65.5% higher utilization of low-class GPUs while maintaining high utilization of high-class GPUs, leading to 32.2%–75.1% higher serving throughput compared to various baselines.",
    "link": "https://www.usenix.org/conference/atc25/presentation/kong",
    "session_title": "Optimizing ML Execution: Compilers, Pipelines, and Runtimes",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "2a93d19c-aa88-4e3a-9f37-6dba21b5f9b0"
  },
  {
    "title": "Voltrix: Sparse Matrix-Matrix Multiplication on Tensor Cores with Asynchronous and Balanced Kernel Optimization",
    "authors": "Yaqi Xia and Weihu Wang,Wuhan University;Donglin Yang,Nvidia Corporation;Xiaobo Zhou,University of Macau;Dazhao Cheng,Wuhan University",
    "abstract": "Sparse Matrix-Matrix Multiplication (SpMM) is crucial in scientific computing and machine learning. \nDespite advancements in GPU architectures, efficiently leveraging Tensor Cores for SpMM remains challenging. The core issue is the mismatch between the inherently sparse nature of the matrices and the dense computational patterns. Existing methods struggle with substantial overheads in loading data to computation units and cannot adequately manage data imbalance across computations, thereby limiting the high computational throughput potential of Tensor Cores.\nIn this paper, we introduce Voltrix-SpMM, a revolutionary GPU kernel design that overcomes these challenges. First, we implement an asynchronous data loading pipeline that employs a bit-wise compressed format for sparse matrices and bulk memory copy instructions for dense matrices. This innovative design enables efficient data access and incorporates a warp-specialized producer-consumer model to seamlessly overlap data loading with computation. Second, we develop a persistent and I/O co-balanced kernel mechanism that features a two-stage partition strategy to achieve balance between input and output. Implemented with CUDA 12.6, Voltrix-SpMM substantially improves performance, delivering an average speedups of 36.5x and 1.8x over Tensor Core-based TC-GNN and DTC-SpMM respectively, and an average 1.7x speedup over the CUDA Core-based RoDe, fully unleashing the power of Tensor Cores for SpMM.",
    "link": "https://www.usenix.org/conference/atc25/presentation/xia",
    "session_title": "Optimizing ML Execution: Compilers, Pipelines, and Runtimes",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "ef2bd093-b6c2-4664-93a8-d0d98f468653"
  },
  {
    "title": "NetKeeper: Enhancing Network Resilience with Autonomous Network Configuration Update on Traffic Patterns and Anomalies",
    "authors": "Zhaoyang Wan, Rongxin Han, Haifeng Sun, Qi Qi, Zirui Zhuang, and Bo He,State Key Laboratory of Networking and Switching Technology, Beijing University of Posts and Telecommunications;Liang Zhang,Huawei Technologies Co., Ltd;Jianxin Liao and Jingyu Wang,State Key Laboratory of Networking and Switching Technology, Beijing University of Posts and Telecommunications",
    "abstract": "Incremental policies and anomaly logs require operators to update network configuration during network operations. However, existing configuration methods lack the capability for intent understanding, traffic analysis optimization, and network dynamic adaptability, complicating overall configuration management.\nWe proposeNetKeeper, an autonomous network configuration update framework.NetKeeperupdates network configurations based on multimodal network intent comprising natural language input and anomaly logs, enabling adaptability to network dynamics and enhancing resilience through analyzing traffic patterns and anomalies. We implement northbound and southbound interfaces to translate network intents from operators and network management platforms respectively, bridging the gap between network intents and network behaviors. A multi-agent reinforcement learning model is designed for network configuration updates based on traffic patterns in dynamic networks. This model divides agents based on configuration parameter types, achieving both network resilience optimization and forwarding policy satisfaction.\nExperiments in dynamic network show thatNetKeeperupdates network configurations with 99.6% average policy consistency, improves network performance by 5.3%, and reduces traffic shift by 8.7% on average.",
    "link": "https://www.usenix.org/conference/atc25/presentation/wan",
    "session_title": "Resilient Systems: Failure Detection, Consistency, and Scalability",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "799c80df-5212-41d9-b14b-502bf651eb59"
  },
  {
    "title": "GREYHOUND: Hunting Fail-Slows in Hybrid-Parallel Training at Scale",
    "authors": "Tianyuan Wu and Wei Wang,Hong Kong University of Science and Technology;Yinghao Yu, Siran Yang, and Wenchao Wu,Alibaba Group;Qinkai Duan,Hong Kong University of Science and Technology;Guodong Yang, Jiamang Wang, Lin Qu, and Liping Zhang,Alibaba Group",
    "abstract": "Fail-slows, or stragglers, are common problems in largescale hybrid-parallel training that runs on a large fleet of GPU servers for an extended period of time. Yet, these problems are not well studied. In this paper, we first present a characterization study on a shared production cluster with over 10,000 GPUs. We find that fail-slows manifest as transient stragglers caused by slow computations or communications due to contention, device degradation, or network congestion, lasting from sub-minutes to nearly ten hours, and delaying large training jobs by 1.34× on average. The current practice is to manually detect fail-slows and treat them as fail-stops by means of checkpoint-and-restart failover, which is time-consuming. In this paper, we propose GREYHOUND, a system that rapidly identifies slow GPUs and/or communication links, and effectively tackles them with a novel multi-level mitigation mechanism, all without human intervention. GREYHOUND correctly detects fail-slows in a production cluster with over 99% accuracy. Testbed experiment on 256 H800 GPUs further shows it effectively handles (manually injected) stragglers, improving end-to-end throughput by 1.58×.",
    "link": "https://www.usenix.org/conference/atc25/presentation/wu-tianyuan",
    "session_title": "Resilient Systems: Failure Detection, Consistency, and Scalability",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "932fa8b9-188c-4667-bb90-3b11908224e4"
  },
  {
    "title": "Crash Consistency in Block-Level Caching Systems: An Open CAS Case Study",
    "authors": "Shaohua Duan,Washington State University;Youmin Chen,Shanghai Jiao Tong University",
    "abstract": "Byte-addressable non-volatile memory (NVM) proposes a new opportunity to enable file systems with better performance and durability by adding a new persistent caching layer. However, crash consistency of caching layers and compatibility with diverse reliability features of file systems remains unknown. This paper conducts a crash consistency case study of Open CAS, a popular block-level caching system. Through careful and thorough crash consistency experiments, we show that Open CAS cannot always maintain crash consistency in the persistent caching layer. We also demonstrate some reliability features of file systems are not compatible with Open CAS. Our analysis reveals the importance of a systematic crash consistency test to caching systems and reliability feature co-design with file systems in the construction of a reliable end-to-end file system.",
    "link": "https://www.usenix.org/conference/atc25/presentation/duan-shaohua",
    "session_title": "Resilient Systems: Failure Detection, Consistency, and Scalability",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "17a31650-07ac-4c09-9652-d59e04f60981"
  },
  {
    "title": "FiDe: Reliable and Fast Crash Failure Detection to Boost Datacenter Coordination",
    "authors": "Davide Rovelli,Università della Svizzera Italiana and SAP SE;Pavel Chuprikov,Télécom Paris and Institut Polytechnique de Paris;Philipp Berdesinski,turba;Ali Pahlevan,SAP SE;Patrick Jahnke,turba;Patrick Eugster,Università della Svizzera Italiana",
    "abstract": "Failure detection is one of the most fundamental primitives on which distributed fault tolerant services and applications rely to achieve liveness. Typical failure detectors resort to using timeouts that have to take into account the unpredictability in interaction times among remote processes, caused by resource contention in the network and in endhost processors. While modern (gray) failure detectors have improved in detecting a wide range of failures, the problem of prohibitively large and unreliable timeouts for crash failures still persists, hampering performance of both the failure detector themselves and modern μs-scale services sitting on top.\nWe propose a novel [f]ully rel[i]able failure- [de]tector (FiDe) that can report the crash of a remote process in a datacenter within less than 30 μs ( 7.2× faster than the current state of the art) withextremely high reliability, thanks to a ground-up design which provides stable end-to-end process interactions. By reliably lowering worst-case crash detection time, FiDe enables a class of algorithms that can be used to boost coordination services even in the absence of failures. We devise two novel, FiDe-based, highly efficient consensus protocols and integrate them into a key-value store and a synchronization service, improving throughput by up to 2.23× and reducing latency down to 0.46×.",
    "link": "https://www.usenix.org/conference/atc25/presentation/rovelli",
    "session_title": "Resilient Systems: Failure Detection, Consistency, and Scalability",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "cafe813a-1e98-4207-9c71-5245e6a691f0"
  },
  {
    "title": "LEOCraft: Towards Designing Performant LEO Networks",
    "authors": "Suvam Basak and Amitangshu Pal,Indian Institute of Technology Kanpur;Debopam Bhattacherjee,Microsoft Research India",
    "abstract": "Low Earth Orbit (LEO) satellite constellations have revolutionized Internet access for millions of users. OneWeb and SpaceX are already operating constellations of hundreds and thousands of satellites, offering Internet service directly from space across 100+ countries. These \nexceptionally large networks come at a cost – thousands of routers (satellites) need to fly at ~22× the speed of sound, thus making network design a non-trivial challenge. While the systems research community with decades of deep networking expertise has a relatively short window to influence the design of these networks, there is a serious lack of the right tools to enable such efforts. To address this, we introduce LEOCraft – an LEO network design framework to help the community visualize and evaluate the performance of different choices. LEOCraft offers integrated optimization techniques tuned upon the domain knowledge acquired from thousands of LEO constellation design's performance evaluations to optimize a new constellation design ~5× faster than other off-the-shelf black-box optimization techniques. LEOCraft scales up seamlessly, tested for 83K satellites across multiple shells (more than 2× SpaceX's long-term proposal) with 1K ground stations, thus making it feasible for the community to explore LEO trajectory and topology design for even the largest of mega-constellations.",
    "link": "https://www.usenix.org/conference/atc25/presentation/basak",
    "session_title": "Network Performance & Protocols: From Space to VR",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "5b88f769-7320-424c-ab35-f7ae420a36fc"
  },
  {
    "title": "Emulating Space Computing Networks with RHONE",
    "authors": "Liying Wang,Peking University;Qing Li,Beijing University of Posts and Telecommunications;Yuhan Zhou and Zhaofeng Luo,Peking University;Donghao Zhang and Shangguang Wang,Beijing University of Posts and Telecommunications;Xuanzhe Liu and Chenren Xu,Peking University; and Key Laboratory of High Confidence Software Technologies, Ministry of Education (PKU)",
    "abstract": "The rapid advancement in satellite technology with the adoption of commercial off-the-shelf (COTS) devices and satellite constellation networking has given rise to Space Computing Networks (SCNs). While SCN research is typically conducted on experimental platforms due to high operational costs, the unique challenges of SCNs — such as the harsh space environment (e.g., power and thermal constraints) and dynamic constellation networks — require special consideration. Existing platforms cannot fully replicate the SCN operating environment with high scalability. This paper introduces RHONE, an emulator that bridges these gaps by achieving both satellite- and constellation-level fidelity (the accurate replication of satellite and constellation states, including power, thermal, and network conditions, as well as application performance characteristics) while ensuring usability. RHONE adopts a two-phase emulation approach: i) an offline phase builds power, thermal, orbit, network, and computation models using real satellite telemetry data and hardware-in-the-loop chip mirroring, and ii) an online phase executes container-based emulation integrated with these models. Key components, the satellite COTS aligner and the satellite network aligner, dynamically align the containers with real satellite conditions. Evaluation shows RHONE’s scalability to 700 satellites on a single node, with power and computation model errors under 5% and thermal model errors within 1.3–2.5°C.  Two case studies — satellite network energy drain attack and real-time earth observation application — demonstrate RHONE's capability to emulate satellite- and constellation-level dynamics.",
    "link": "https://www.usenix.org/conference/atc25/presentation/wang-liying",
    "session_title": "Network Performance & Protocols: From Space to VR",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "4d19584b-45c9-4474-8ae3-d564d3b6c899"
  },
  {
    "title": "Roaming Free in the VR World with MP2",
    "authors": "Yifei Xu,University of California, Los Angeles;Xumiao Zhang,University of Michigan and Alibaba Cloud;Yuning Chen,University of California, Merced;Pan Hu,Uber Technologies, Inc.;Xuan Zeng, Zhilong Zheng, Xianshang Lin, and Yanmei Liu,Alibaba Cloud;Songwu Lu,University of California, Los Angeles;Z. Morley Mao,University of Michigan;Wan Du,University of California, Merced;Dennis Cai and Ennan Zhai,Alibaba Cloud;Yunfei Ma,Uber Technologies, Inc.",
    "abstract": "Free-roaming VR which allows a group of users to navigate in rooms and even buildings, enhances the VR experience by making it more immersive and interactive. Streaming VR videos over wireless enables unconstrained experiences but raises unprecedented requirements in mobility, efficiency, and scalability. Existing solutions fail in one or more of the following challenges: maintaining low latency during handover, balancing loads on different APs, and stabilizing bitrate for competing users, due to their decentralized nature where each user lacks information about others and makes locally optimal decisions. To address these problems, we present MP2, a centralized VR streaming system that coordinates multiple Wi-Fi links and video bitrates among users for better QoE. A centralized controller collects cross-layer information from each user and makes better decisions based on global information. It achieves this in a timely manner through accurate modeling and the use of efficient pruning and partitioning algorithms. To our knowledge, MP2is the first centrally coordinated VR streaming system that supports multi-user free-roaming. Comprehensive benchmarks including real-world tests, large-scale emulation, and trace-driven user studies, confirm the effectiveness of MP2against state-of-the-art solutions. It achieves 35× improvement in tail latency, 1.56× in bitrate, and 1.86× in QoE over state-of-the-art baselines. MP2achieves up to a 99.1% improvement in mean opinion scores according to the user study.",
    "link": "https://www.usenix.org/conference/atc25/presentation/xu",
    "session_title": "Network Performance & Protocols: From Space to VR",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "acdc9ce4-13d9-4760-b9b6-e0cb68b2e608"
  },
  {
    "title": "STORM: a Multipath QUIC Scheduler for Quick Streaming Media Transport under Unstable Mobile Networks",
    "authors": "Liekun Hu,East China Normal University;Changlong Li,East China Normal University, Jianghuai Advance Technology Center, and MoE Engineering Research Center of Hardware/Software Co-Design Technology and Application",
    "abstract": "The rapid proliferation of streaming media applications has driven the need for multipath transport on mobile devices. While multipath techniques successfully improve throughput by exploiting multiple network interfaces, our study reveals that path instability leads to excessive end-to-end latency. This paper analyzes the data path of multipath networks and observes that the high latency is always caused by the \"last mile\" wireless link, instead of the core network. Additionally, unlike traditional scenarios, both reliable and unreliable data are transmitted across these paths. However, existing multipath schedulers did not fully account for the reliability characteristics in the design. To address this gap, this paper proposes STORM, a novel multipath scheduler that aims to ensure low latency under unstable mobile networks.\nWe integrate STORM with the mobile device's wireless modules (e.g., WiFi and 5G). STORM differentiates between reliable and unreliable traffic. This approach prevents retransmissions from hindering critical data flows. Our evaluation on real devices shows that STORM reduces tail packet delay by 98.2% and improves the frame rate of streaming media by 1.95x under unstable networks, compared to the state-of-the-art.",
    "link": "https://www.usenix.org/conference/atc25/presentation/hu-liekun",
    "session_title": "Network Performance & Protocols: From Space to VR",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "0c0df769-8e35-47c3-a765-9fc7779f3174"
  },
  {
    "title": "Internet Connection Splitting: What’s Old is New Again",
    "authors": "Gina Yuan, Thea Rossman, and Keith Winstein,Stanford University",
    "abstract": "In the 1990s, many networks deployed performance-enhancing proxies (PEPs) that transparently split TCP connections to aid performance, especially over lossy, long-delay paths. Two recent developments have cast doubts on their relevance: the BBR congestion-control algorithm, which de-emphasizes loss as a congestion signal, and the QUIC transport protocol, which prevents transparent connection-splitting yet empirically matches or exceeds TCP's performance in wide deployment, using the same congestion control.\nIn light of this, are PEPs obsolete? This paper presents a range of emulation measurements indicating: \"probably not.\" While BBR's original 2016 version didn't benefit markedly from connection-splitting, more recent versions of BBRdoand, in some cases, evenmoreso than earlier \"loss-based\" congestion-control algorithms.  We also find that QUIC implementations of the \"same\" congestion-control algorithms vary dramatically and further differ from those of Linux TCP–-frustrating head-to-head comparisons. Notwithstanding their controversial nature, our results suggest that PEPs remain relevant to Internet performance for the foreseeable future.",
    "link": "https://www.usenix.org/conference/atc25/presentation/yuan",
    "session_title": "Network Performance & Protocols: From Space to VR",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "785468fc-3971-4198-a576-71a5f59257c6"
  },
  {
    "title": "WIC: Hiding Producer-Consumer Synchronization Delays with Warp-Level Interrupt-based GPU Communications",
    "authors": "Jiajian Zhang,Xi'an Jiaotong-Liverpool University and University of Liverpool;Fangyu Wu,Xi'an Jiaotong-Liverpool University;Hai Jiang,Beijing University of Posts and Telecommunications;Qiufeng Wang,Xi'an Jiaotong-Liverpool University;Genlang Chen and Chaoyi Pang,NingboTech University",
    "abstract": "GPU communication plays a pivotal role in collaborative computation across multiple devices. Despite advancements in inter-device communication fabrics and architectures, synchronization still remains a significant challenge due to the manual coordination required between producers and consumers at the application level. In this work, we first reveal that traditional synchronization is a primary bottleneck in GPU communication, where consumers frequently poll for producer data availability. Specifically, early-started polling leads to the unnecessary occupation of computational resources. To address this issue, we propose Warp-level Interrupt-based Communication (WIC), a novel synchronization framework for GPU communication that introduces a fine-grained interruption mechanism at the warp level to replace repetitive polling. WIC preemptively stalls warps engaged in frequent polling and releases computational resources for other warps, thereby effectively overlapping producer-consumer synchronization with ongoing computations. Comprehensive experiments demonstrate that WIC significantly outperforms conventional polling methods by 1.13 × on average across various applications with diverse communication patterns.",
    "link": "https://www.usenix.org/conference/atc25/presentation/zhang-jiajian",
    "session_title": "Distributed Systems: Communication, Consensus, and Data Structures",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "b7a0f758-7c8d-45b2-87e1-156db176c437"
  },
  {
    "title": "Primus: Unified Training System for Large-Scale Deep Learning Recommendation Models",
    "authors": "Jixi Shan,ByteDance Inc.;Xiuqi Huang,Zhejiang University;Yang Guo, Hongyue Mao, Ho-Pang Hsu, Hang Cheng, Can Wang, and Jun Song,ByteDance Inc.;Rui Shi,Bytedance Inc.;Xiaofeng Gao,Shanghai Jiao Tong University;Jingwei Xu, Shiru Ren, Jiaxiao Zheng, Hua Huang, Lele Yu, and Peng Xu,ByteDance Inc.;Guihai Chen,Shanghai Jiao Tong University",
    "abstract": "The scale of deep learning recommendation models (DLRM) continues to grow, demanding increasingly vast computing and storage resources. In production environments, improving training efficiency and effectiveness has become the primary goal to meet the needs of numerous model training jobs under resource limitations. We introduce Primus, a unified training system that unifies the training resources, data, and paradigms to support high-performance DLRM training at ByteDance. Specifically, ① Primus provides a unified abstraction of resources and interoperates with multiple scheduling systems, achieving a consistent training experience with horizontal and vertical dynamic scaling strategies across resource pools. ② Primus offers a unified three-tier data definition and employs a data task graph generation approach to support data orchestration of multi-source training samples composed of batch and stream data. ③ Primus devises a new hybrid training paradigm for DLRMs that ensures high model timeliness by controlling parameter updates and applying fine-grained prioritization of mixed batch and stream data.\nPrimus has demonstrated its efficiency and effectiveness in handling large-scale, enterprise-grade DLRM training over five years of deployment at ByteDance. Evaluations show Primus’s optimizations of resources, data, and paradigms. Firstly, dynamic scaling reduces training cost by 17.1% at the cluster level and increases CPU utilization from 50% to 80% per job. Secondly, data orchestration accelerates task generation by 23× and achieves higher training throughput. Lastly, after applying the hybrid training paradigm with 4 different DLRMs, advertising revenue increases by 0.4%-2.4%.",
    "link": "https://www.usenix.org/conference/atc25/presentation/shan-jixi",
    "session_title": "Distributed Systems: Communication, Consensus, and Data Structures",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "75b6db0a-02ae-4d96-91bf-c1d41f1d93b6"
  },
  {
    "title": "Chitu: Avoiding Unnecessary Fallback in Byzantine Consensus",
    "authors": "Rongji Huang, Xiangzhe Wang, Xiaofeng Yan, and Lei Fan,Shanghai Jiao Tong University;Guangtao Xue and Shengyun Liu,Shanghai Jiao Tong University and Shanghai Key Laboratory of Trusted Data Circulation, Governance and Web3",
    "abstract": "Most Byzantine-Fault Tolerant (BFT) consensus protocols either pre-select a single leader with the help of additional timing assumptions (i.e., partially synchronous ones) or resort to random coins to achieve only probabilistic termination (i.e., asynchronous ones). The single leader may become a performance bottleneck and/or lead to availability problems, while probabilistic termination increases latency.\nWe re-consider the consensus problem from its first principles, where neither synchrony assumption or any designated role, nor randomization is intrinsic to consensus. We thus formally study a framework for designing robust BFT protocols with low latency: nodes first try to achieve consensus merely based on message exchange, but only resort to a fallback mechanism like random coin or leader election if correct nodes have divergent opinions on a proposal.\nWe further present Chitu, an asynchronous DAG-based protocols following this framework. Chitu in the best case commits proposals in four message delays, even in the presence of faulty nodes and/or under asynchrony. In the worst case, Chitu still ensures predictable performance with O(1) time complexity in expectation. Experimental results on Amazon EC2 show that Chitu achieves a significant reduction in latency compared to two representative DAG-based protocols that always put a leader or randomization on the execution path.",
    "link": "https://www.usenix.org/conference/atc25/presentation/huang-rongji",
    "session_title": "Distributed Systems: Communication, Consensus, and Data Structures",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "373808ee-a2af-40b7-a541-a96c727e4b06"
  },
  {
    "title": "Fast Distributed Transactions for RDMA-based Disaggregated Memory",
    "authors": "Haodi Lu, Haikun Liu, Yujian Zhang, Zhuohui Duan, Xiaofei Liao, Hai Jin, and Yu Zhang,Huazhong University of Science and Technology",
    "abstract": "Memory disaggregation has emerged as a promising datacenter architecture since it improves memory utilization and scalability. However, it is usually costly to process distributed transactions in disaggregated memory systems due to relatively high latency of remote memory accesses. In this paper, we present HDTX, a high-performance distributed transaction system for RDMA-based disaggregated memory. We advocate three novel designs. First, we propose afast commit protocol(FCP) to minimize network round trips by coalescing different phases of distributed transaction processing. Second, we propose an RDMA-enabled offloading mechanism to reduce data transfers across computing and memory nodes by carefully orchestrating different RDMA primitives. Third, we propose decentralized priority-based locking to schedule mission-critical transactions, and thus further reduce the latency of distributed transactions. Experimental results show that HDTX reduces the latency of distributed transactions by up to 88.3% and 72.1%, and improves the throughput by up to 2.08× and 84.7%, compared with RDMA-based distributed transaction systems–FaRM and FORD, respectively.",
    "link": "https://www.usenix.org/conference/atc25/presentation/lu",
    "session_title": "Distributed Systems: Communication, Consensus, and Data Structures",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "86b5cd23-54ef-451a-bb0f-9c4a1a7752f9"
  },
  {
    "title": "Cuckoo for Clients: Disaggregated Cuckoo Hashing",
    "authors": "Stewart Grant and Alex C. Snoeren,UC San Diego",
    "abstract": "RCuckoo is a fully disaggregated lock-based key/value store in which clients cooperatively access a passive memory server using exclusively one-sided RDMA operations. RCuckoo employs cuckoo hashing to enable single round-trip reads of small values while updates and deletes require only two. We introduce locality-enhanced dependent hashing that allows us to adjust the expected distance between a key’s potential table locations, dramatically improving insert performance compared to prior cuckoo-hashing approaches while limiting I/O amplification and maintaining practical maximum fill factors. We show that not only does RCuckoo outperform all existing state-of-the-art RDMA-based key/value stores when reading small values, but under severe contention RCuckoo delivers up to 7×the throughput of comparison systems across the standard set of YCSB workloads. Moreover, RCuckoo’s lease-based locking mechanism enables it to gracefully recover from 100s of client failures per second.",
    "link": "https://www.usenix.org/conference/atc25/presentation/grant",
    "session_title": "Distributed Systems: Communication, Consensus, and Data Structures",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "5056b9fd-d782-4757-958a-525ac914ec9c"
  },
  {
    "title": "LITESHIELD: Secure Containers via Lightweight, Composable Userspace μKernel Services",
    "authors": "Kaesi Manakkal,The University of Texas at Arlington;Nathan Daughety and Marcus Pendleton,Air Force Research Laboratory (AFRL);Hui Lu,The University of Texas at Arlington",
    "abstract": "This paper introduces LITESHIELD, a new userspace isolation architecture for secure containers that reexamines the boundary between user applications and system services. LITESHIELD decouples traditional guest kernel functionality into modular userspace microkernel (µkernel) services that interact with guest applications via low-latency, shared-memory-based inter-process communication (IPC). By serving most Linux syscalls in userspace, LITESHIELD enforces a significantly reduced user-to-host interface, with just 22 syscalls, achieving strong isolation comparable to virtual machines (VMs) while avoiding the complexity of hypervisors and hardware virtualization. LITESHIELD further provides a POSIX-compatible runtime with fine-grained syscall interception to support legacy applications and enables composable µkernel services that can integrate specialized userspace components (e.g., networking and filesystems). Our implementation demonstrates that LITESHIELD delivers strong isolation with performance comparable to traditional containers.",
    "link": "https://www.usenix.org/conference/atc25/presentation/manakkal",
    "session_title": "Virtualization and Isolation: Security, Sharing, and Performance",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "bb535637-e537-4ec9-8e61-d5faa9641a6b"
  },
  {
    "title": "Accelerating Nested Virtualization with HyperTurtle",
    "authors": "Ori Ben Zur and Jakob Krebs,Technion - Israel Institute of Technology;Shai Aviram Bergman,Huawei Zurich Research Center;Mark Silberstein,Technion - Israel Institute of TechnologyAwarded Best Paper!",
    "abstract": "Nested virtualization provides strong isolation but incurs non-trivial performance costs. Prior works alleviate some overheads but suffer from limitations such as intrusive code changes or reduced control over nested virtual environments. We present HyperTurtle, a general approach to accelerate nested virtualization. It reduces the number of costly world switches between the virtualization layers, the primary source of performance overheads. HyperTurtle offloads the execution of certain parts on the critical path of the virtualized hypervisor, encapsulating them as eBPF programs and executing them safely in the context of the bare-metal hypervisor.  Thus, HyperTurtle reduces the performance cost of world switches whilst retaining control over nested VMs.  We show that HyperTurtle can be used to optimize a variety of OS subsystems and apply it to memory management, networking, and application profiling. HyperTurtle achieves significant performance improvements in micro and macro-benchmarks, for example, 5× faster EPT fault handling, which translates to up to 27% faster boot-time of Kata containers, without requiring intrusive code changes to the virtualization infrastructure.",
    "link": "https://www.usenix.org/conference/atc25/presentation/zur",
    "session_title": "Virtualization and Isolation: Security, Sharing, and Performance",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "05c82d5f-1d53-4216-a814-cdc1b287e7a3"
  },
  {
    "title": "Efficient Performance-Aware GPU Sharing with Compatibility and Isolation through Kernel Space Interception",
    "authors": "Shulai Zhang, Ao Xu, Quan Chen, Han Zhao, and Weihao Cui,Shanghai Jiao Tong University;Zhen Wang, Yan Li, and Limin Xiao,Lenovo;Minyi Guo,Shanghai Jiao Tong University",
    "abstract": "To support diverse GPU applications and ensure their performance, it is crucial to ensure compatibility, isolation, and maximizing utilization. However, existing approaches are limited to CUDA runtimes and have vulnerable isolation, where the misbehavior or crash of a single application disrupts all other applications sharing the same GPU. Moreover, existing solutions fail to efficiently orchestrate the applications.\nOur investigation reveals that the limitations in compatibility and isolation stem from the user-space design of existing GPU-sharing solutions. To address these issues, we propose KRYPTON, a kernel-space GPU-sharing scheme that ensures compatibility and isolation. KRYPTON intercepts GPU command buffers at the kernel level to provide virtual GPU devices. Rather than relying on fixed GPU resource allocation, it employs efficient spatio-temporal sharing, enabling performance guarantees while improving resource utilization. Experimental results show that KRYPTON reduces the required GPU number by 32.1% compared with SOTA baselines, while providing robust compatibility and isolation.",
    "link": "https://www.usenix.org/conference/atc25/presentation/zhang-shulai",
    "session_title": "Virtualization and Isolation: Security, Sharing, and Performance",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "326acfab-8827-40f0-92e8-b216efa15bff"
  },
  {
    "title": "AnchorNet: Bridging Live and Collaborative Streaming with a Unified Architecture",
    "authors": "Tong Meng, Wei Zhang, Dong Chen, Zhen Wang, Quanqing Li, Changqing Yan, Wei Yang, Chao Yuan, Le Zhang, Jianxin Kuang, and Jianlin Xu,ByteDance",
    "abstract": "Collaborative streaming has emerged as a popular mode in modern live streaming applications. In the meanwhile of improving interactivity between broadcasters and viewers, it requires the live streaming architecture to smoothly switch between two streaming modes (e.g., traditional live streaming with a single broadcaster and collaborative streaming with at least two collaborative broadcasters). In this paper, we present AnchorNet, the new live streaming architecture for one of the most popular streaming applications. The core of AnchorNet is a unified stream path from the broadcaster to the viewer, enabling the host broadcaster of a live channel to switch between streaming modes within a continuous application session. It also proposes audio stream splicing techniques to further minimize unpleasant audio glitches during streaming mode switching. Practical deployment shows that AnchorNet can significantly reduce rebuffering during mode switching by over 60%, and increase user engagement by up to 3.83%.",
    "link": "https://www.usenix.org/conference/atc25/presentation/meng",
    "session_title": "Virtualization and Isolation: Security, Sharing, and Performance",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "9e9619c3-a786-463d-baff-618ae6b0ece3"
  },
  {
    "title": "Katz: Efficient Workflow Serving for Diffusion Models with Many Adapters",
    "authors": "Suyi Li, Lingyun Yang, Xiaoxiao Jiang, Hanfeng Lu, and Dakai An,Hong Kong University of Science and Technology;Zhipeng Di, Weiyi Lu, Jiawei Chen, Kan Liu, Yinghao Yu, Tao Lan, Guodong Yang, Lin Qu, and Liping Zhang,Alibaba Group;Wei Wang,Hong Kong University of Science and Technology",
    "abstract": "Text-to-image (T2I) generation using diffusion models has become a blockbuster service in today's AI cloud. A production T2I service typically involves a servingworkflowwhere a base diffusion model is augmented with many ControlNet and LoRA adapters to control the details of output images, such as shapes, outlines, poses, and styles. In this paper, we present Katz, a system that efficiently serves a T2I workflow with many adapters.  Katz differentiates compute-heavy ControlNets from compute-light LoRAs, where the former introduces significant computational overheads while the latter is bottlenecked by loading. Katz proposes to take ControlNet off the critical path with a ControlNet-as-a-Service design, in which ControlNets are decoupled from the base model and deployed as aseparate, independently scalable serviceon dedicated GPUs, thus enabling ControlNet caching, parallelization, and sharing. To hide the high LoRA loading overhead, Katz employsbounded asynchronous loadingthat overlaps LoRA loading  with initial base model execution by a maximum of K steps, while maintaining the same image quality. Katz further accelerates base model execution across multiple GPUs withlatent parallelism. Collectively, these designs enable Katz to outperform the state-of-the-art T2I serving systems, achieving up to 7.8× latency reduction and 1.7× throughput improvement in serving SDXL models on H800 GPUs, without compromising image quality.",
    "link": "https://www.usenix.org/conference/atc25/presentation/li-suyi-katz",
    "session_title": "Scaling Complex Models: Distribution, Heterogeneity, and Efficiency",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "16b2464a-6274-4e58-a6a1-687f786931d3"
  },
  {
    "title": "PopFetcher: Towards Accelerated Mixture-of-Experts Training Via Popularity Based Expert-Wise Prefetch",
    "authors": "Junyi Zhang, Chuanhu Ma, Xiong Wang, and Yuntao Nie,Huazhong University of Science and Technology;Yuqing Li,Wuhan University;Yuedong Xu,Fudan University;Xiaofei Liao,Huazhong University of Science and Technology;Bo Li,Hong Kong University of Science and Technology;Hai Jin,Huazhong University of Science and Technology",
    "abstract": "Scaling laws indicate that increasing model size enhances performance. The Mixture-of-Experts (MoE) architecture enables scaling model parameters to trillions while requiring only a sub-linear increase in training computations. However, the sparse activation of experts within MoE leads to substantial All-to-All communications and imbalanced computation workloads, which in turn can severely degrade training efficiency. In this paper, we develop PopFetcher, a scalable MoE training system with popularity-aided expert-wise prefetching, to address these communication and computation bottlenecks. Specifically, PopFetcher uncovers skewed and correlated patterns in expert selection, and implements a lightweight sliding-window technique to accurately predict the popularity of experts. As a result, PopFetcher facilitates dynamic identification of high-demand experts and prefetches them in the next layer during the execution of current non-MoE computations, thereby exploiting the idle network links to reduce dispatched tokens in upcoming All-to-All communications. PopFetcher rigorously formulates the end-to-end training latency and develops a tailored pruning strategy to derive the globally optimal prefetching scheme, which can restore both communication and computation balances based on the underlying network infrastructure. By prioritizing All-to-All data stream during the backward pass, PopFetcher significantly alleviates the communication blockage. Extensive experiments conducted on GPU clusters demonstrate that PopFetcher outperforms existing state-of-the-art systems, reducing training time by 15%-94.5%.",
    "link": "https://www.usenix.org/conference/atc25/presentation/zhang-junyi",
    "session_title": "Scaling Complex Models: Distribution, Heterogeneity, and Efficiency",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "39d7dc6b-b229-4941-a436-8993f8123267"
  },
  {
    "title": "HypeReca: Distributed Heterogeneous In-Memory Embedding Database for Training Recommender Models",
    "authors": "Jiaao He, Shengqi Chen, Kezhao Huang, and Jidong Zhai,Tsinghua University",
    "abstract": "Making high-quality recommendations is important in online applications. To improve user satisfaction and effectiveness of advertising, deep learning-based recommender models (DLRM) are widely studied and deployed. Training these models on massive data demands increasing computation power, commonly provided by a cluster of numerous GPUs. Meanwhile, the embedding tables of the models are huge, posing challenges on the memory. Existing systems exploit host memory and hashing techniques to accommodate them. However, the simple offloading design is hard to scale up to multiple nodes. The sparse access to the distributed embedding tables introduces high data management and all-to-all communication overhead.\nWe find that a distributed in-memory key-value database is the best abstraction to serve and maintain embedding vectors in DLRM training. To achieve high scalability, our system, HypeReca, utilizes both GPU and CPU memory. We improve the throughput of data management according to the batching pattern of DNN training, using a pipeline over decentralized indexing tables and a contentionavoiding schedule for data exchange. A two-fold parallel strategy is used to guarantee consistency of all embedding vectors. The communication overhead is reduced by replicating a few frequently accessed embedding vectors, exploiting the sparse pattern with a performance model. In our evaluation on 32 GPUs over real-world datasets, HypeReca achieves 2.16−16.8× end-to-end speedup over HugeCTR, TorchRec and TFDE. The source code is available athttps://github.com/thu-pacman/hypereca/.",
    "link": "https://www.usenix.org/conference/atc25/presentation/he-jiaao",
    "session_title": "Scaling Complex Models: Distribution, Heterogeneity, and Efficiency",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "15149c88-cff4-40b5-8f71-1bf3bdae8686"
  },
  {
    "title": "CrossPipe: Towards Optimal Pipeline Schedules for Cross-Datacenter Training",
    "authors": "Tiancheng Chen, Ales Kubicek, Langwen Huang, and Torsten Hoefler,ETH Zurich",
    "abstract": "Training large language models (LLMs) now requires resources that exceed a single datacenter, making cross-datacenter strategies increasingly crucial. We present CrossPipe, a framework designed to optimize model training across geographically distributed datacenters by explicitly modeling and mitigating the impact of network latency and limited bandwidth. It enables unified analysis and optimization incorporating both pipeline parallelism (PP) and opportunities for overlapping data parallelism (DP) communication. CrossPipe generates optimized pipeline schedules using either solver-based optimal or fast near-optimal greedy algorithms, built upon a flexible execution engine that separates scheduling logic from communication details. Our evaluation shows that CrossPipe reduces training time by up to 33.6% compared to traditional pipeline schedules under identical memory constraints. When memory constraints are relaxed, CrossPipe maintains strong performance despite communication delays, approaching the efficiency of idealized schedules without delays. CrossPipe offers improved scalability and resource utilization, particularly in environments with high network latency or limited bandwidth.",
    "link": "https://www.usenix.org/conference/atc25/presentation/chen-tiancheng",
    "session_title": "Scaling Complex Models: Distribution, Heterogeneity, and Efficiency",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "05fa96a1-fbcd-41a0-9cad-d161f3f5414b"
  },
  {
    "title": "Unveiling Compiler Faults via Attribute-Guided Compilation Space Exploration",
    "authors": "Jiangchang Wu, Yibiao Yang, Maolin Sun, and Yuming Zhou,State Key Laboratory for Novel Software Technology, Nanjing University",
    "abstract": "Compiler testing is critically important, as compilers serve as the foundational infrastructure in system software development. A comprehensive exploration of the compilation space is essential for uncovering bugs in compilers. Existing methods primarily involve the utilization of various compilation options alongside test programs as inputs for stress-testing compilers. However, these compilation options are typically applied uniformly across all program elements-such as functions and variables–by default, limiting the ability to thoroughly explore the compilation space. In programming languages like C and C++, attributes such as the __attribute__((always_inline)) directive provide a mechanism for programmers to specify additional information for specific code elements to the compiler. These attributes allow for precise control over the compilation process, such as enforcing constraints and customizing optimization passes for particular elements. This flexibility in specifying attributes offers opportunities to investigate previously unexamined areas within compilers. Unfortunately, few studies have leveraged attributes for compiler testing. To this end, we propose ATLAS, an attribute-guided approach that strategically inserts attributes into test programs to facilitate a more thorough exploration of the compilation space. Our key insight is that attributes specified for individual program elements can provide a more flexible means of exploring the compilation space. Our extensive experiments on GCC and LLVM demonstrate the superiority of ATLAS over baseline testing techniques that do not employ attributes, particularly in terms of bug detection and code coverage. Furthermore, ATLAS has led to the discovery of 73 unique bugs in GCC and LLVM, 58 of which have already been confirmed or fixed, showcasing its practical utility.",
    "link": "https://www.usenix.org/conference/atc25/presentation/wu-jiangchang",
    "session_title": "Hunting Elusive Bugs: Verification and Analysis from Compilers to Hardware",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "45b19b32-8c8b-45f3-ad04-f13926e88eac"
  },
  {
    "title": "Understanding and Detecting Fail-Slow Hardware Failure Bugs in Cloud Systems",
    "authors": "Gen Dong and Yu Hua,Huazhong University of Science and Technology;Yongle Zhang,Purdue University;Zhangyu Chen and Menglei Chen,Huazhong University of Science and Technology",
    "abstract": "Fail-slow hardwares are still running and functional, but in a degraded mode, thus slower than their expected performance. Bugs triggered by fail-slow hardwares cause severe cloud system failures. Existing testing tools fail to efficiently detect these bugs due to overlooking their characteristics. In order to address this problem, this paper provides a bug study that analyzes 48 real-world fail-slow hardware failures from typical cloud systems. We observe that (1) fail-slow hardwares make high-level software components vulnerable, including synchronized and timeout mechanisms; (2) the fine granularity of fail-slow hardwares is necessary to trigger these bugs. Based on these two observations, we propose Sieve, a fault injection testing framework for detecting fail-slow hardware failure bugs. Sieve statically analyzes target system codes to identify synchronized and timeout-protected I/O operations as candidate fault points and instruments hooks before candidate fault points to enable fail slow hardware injection. To efficiently explore candidate fault points, Sieve adopts grouping and context-sensitive injection strategies. We have applied Sieve to three widely deployed cloud systems, i.e., ZooKeeper, Kafka, and HDFS. Sieve has detected six unknown bugs, two of which have been confirmed.",
    "link": "https://www.usenix.org/conference/atc25/presentation/dong",
    "session_title": "Hunting Elusive Bugs: Verification and Analysis from Compilers to Hardware",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "574f7f23-c419-4962-83aa-3a22937e1fea"
  },
  {
    "title": "Converos: Practical Model Checking for Verifying Rust OS Kernel Concurrency",
    "authors": "Ruize Tang,State Key Laboratory for Novel Software Technology, Nanjing University;Minghua Wang,Ant Group;Xudong Sun,University of Illinois Urbana-Champaign;Lin Huang,Ant Group;Yu Huang and Xiaoxing Ma,State Key Laboratory for Novel Software Technology, Nanjing University",
    "abstract": "ASTERINAS is an open-source, general-purpose operating system written in Rust, compatible with the Linux ABI, and designed with a focus on reliability and security.\nWe developed a practical model-checking methodology, CONVEROS, to verify the correctness of ASTERINAS concurrency modules such as synchronization primitives and critical thread-safety components. CONVEROS leverages the rigor of formal specifications and introduces a multi-layered, multi-grained specification approach to make writing scalable specifications practical, demonstrated in our case by writing PlusCal specifications for Rust code. It also makes conformance checking incremental and more automated to detect specification-code discrepancies. While many formal methods are challenging to apply due to complexity and the expertise required, CONVEROS makes model checking cost-effective, accessible, and adaptable to evolving specifications and code. We applied CONVEROS to 12 critical concurrency modules, uncovering 20 bugs that led to issues such as data races, deadlocks, livelocks, and kernel panics. With a specification-to-code ratio ranging from 0.3 to 2.3 and a verification effort of only four person-months, our results demonstrate the practicality and effectiveness of CONVEROS.",
    "link": "https://www.usenix.org/conference/atc25/presentation/tang",
    "session_title": "Hunting Elusive Bugs: Verification and Analysis from Compilers to Hardware",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "2ebe6345-6194-4a8a-8a73-7f464fd849f7"
  },
  {
    "title": "Bin2Wrong: a Unified Fuzzing Framework for Uncovering Semantic Errors in Binary-to-C Decompilers",
    "authors": "Zao Yang and Stefan Nagy,University of Utah",
    "abstract": "Binary decompilation is central to many systems tasks that rely on analyzing or modifying closed-source software, such as debugging, performance tuning, and security hardening. Decompilers translate executables into C code with the goal of reconstructing a semantically-equivalent form of the original program’s source. Unfortunately, when challenged by intricate program logic, data structures, and diverse executable layouts, decompilers often produce semantically-wrong code. Proactively detecting such decompilation defects is critical for ensuring the success of downstream tasks that depend on precise binary analysis. Yet, current methods for assessing decompiler correctness only narrowly explore the variety of source constructs, compilers, optimization levels, executable formats, and combinations thereof that influence binary code. Fully guaranteeing decompilation precision—and, by extension, supporting all tasks that hinge on accurate binary-to-source recovery—demands a testing approach that unifies all factors affecting binary code, extending practical, systematic correctness testing to all decompilers today.\nTo accelerate discovery of decompilation defects, this paper introduces BIN2WRONG: a general-purpose decompiler fuzzer combining systematic binary mutation with practical, decompiler-agnostic support. Our approach coalesces all factors of binary generation—source, compiler, optimization, and executable format—into a novel, unified testcase structure for mutation. Beyond enabling deeper exploration along these individual dimensions, BIN2WRONG finds unique combinations exposing complex, multi-dimensional errors that elude prior decompiler testing approaches. In evaluating BIN2WRONG alongside state-of-the-art decompiler fuzzers Cornucopia and DecFuzzer across seven free and commercial decompilers, BIN2WRONG achieves upwards of 10.39× and 17.18× higher binary diversity and 1.16× and 1.32× more decompiler code coverage, respectively, whilst uncovering the most decompilation bugs. Beyond finding 48 new bugs, with 30 confirmed, BIN2WRONG spurred a major redesign of the commercial decompiler Binary Ninja—showing its utility in uncovering critical defects in mainstream decompilers.",
    "link": "https://www.usenix.org/conference/atc25/presentation/yang-zao",
    "session_title": "Hunting Elusive Bugs: Verification and Analysis from Compilers to Hardware",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "9f8ac4cc-96e4-46eb-90aa-4fc42d561dd9"
  },
  {
    "title": "HEC: Equivalence Verification Checking for Code Transformation via Equality Saturation",
    "authors": "Jiaqi Yin and Zhan Song,University of Maryland, College Park;Nicolas Bohm Agostini and Antonino Tumeo,Pacific Northwest National Laboratory;Cunxi Yu,University of Maryland, College Park",
    "abstract": "In modern computing systems, compilation employs numerous optimization techniques to enhance code performance. Source-to-source code transformations, which include control flow and datapath transformations, have been widely used in High-Level Synthesis (HLS) and compiler optimization.\nWhile researchers actively investigate methods to improve performance with source-to-source code transformations, they often overlook the significance of verifying their correctness. Current tools cannot provide a holistic verification of these transformations. This paper introduces HEC, a framework for equivalence checking that leverages the e-graph data structure to comprehensively verify functional equivalence between programs. HEC utilizes the MLIR as its frontend and integrates MLIR into the e-graph framework. Through the combination of dynamic and static e-graph rewriting, HEC facilitates the validation of comprehensive code transformations.\nWe demonstrate effectiveness of HEC on PolyBenchC benchmarks, successfully verifying loop unrolling, tiling, and fusion transformations. HEC processes over 100,000 lines of MLIR code in 40 minutes with predictable runtime scaling. Importantly, HEC identified two critical compilation errors in mlir-opt: loop boundary check errors causing unintended executions during unrolling, and memory read-after-write violations in loop fusion that alter program semantics. These findings demonstrate HEC practical value in detecting real-world compiler bugs and highlight the importance of formal verification in optimization pipelines.",
    "link": "https://www.usenix.org/conference/atc25/presentation/yin",
    "session_title": "Hunting Elusive Bugs: Verification and Analysis from Compilers to Hardware",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "ae7c0274-ff7a-400f-b3da-14ffc0254573"
  },
  {
    "title": "Para-ksm: Parallelized Memory Deduplication with Data Streaming Accelerator",
    "authors": "Houxiang Ji,University of Illinois Urbana-Champaign;Minho Kim and Seonmu Oh,Daegu Gyeongbuk Institute of Science and Technology;Daehoon Kim,Yonsei University;Nam Sung Kim,University of Illinois Urbana-Champaign",
    "abstract": "To tame the rapidly rising cost of memory in servers, hyperscalers have begun deploying memory deduplication features, such as Kernel Same-page Merging (ksm), for some of their services. Nonetheless, ksm incurs a datacenter tax significant enough to notably degrade performance of co-running applications, which hinders its wider and more aggressive deployment. Meanwhile, the server-class CPU has started to integrate various on-chip accelerators to effectively reduce datacenter taxes. One of such accelerators is Data Streaming Accelerator (DSA), which can offload the two most taxing functions of ksm, page comparison and checksum computation, from CPU. In this work, we demonstrate that ksm offloading these two functions to DSA (DSA-ksm) can reduce the performance degradation of co-running applications caused by ksm from 1.6–5.8× to 1.0–1.6×. However, we uncover that DSA-ksm, which naïvely replaces CPU-based functions with their DSA-based counterparts, yields significantly lower rates of memory deduplication than ksm due to the long latency of offloading these functions through on-chip PCIe. To address this shortcoming, we redesign ksm to exploit DSA’s batching capability (Para-ksm). It facilitates a given function to operate on multiple pages per offload, rather than a single page as ksm does, thereby amortizing the long offloading latency. Compared to ksm, Para-ksm increases the amount of memory deduplication per CPU cycle used for ksm by 31–50% while decreasing the performance degradation to 1.3–2.7×.",
    "link": "https://www.usenix.org/conference/atc25/presentation/ji",
    "session_title": "Software-Hardware Synergy: Accelerators, Memory, and Interconnects",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "44f36a12-475d-4628-a5cd-533d51a22882"
  },
  {
    "title": "DSA-2LM: A CPU-Free Tiered Memory Architecture with Intel DSA",
    "authors": "Ruili Liu,Tsinghua University and University of Electronic Science and Technology of China;Teng Ma,Alibaba Group;Mingxing Zhang, Jialiang Huang, and Yingdi Shan,Tsinghua University;Zheng Liu,Alibaba Group;Lingfeng Xiang, Zhen Lin, Hui Lu, and Jia Rao,The University of Texas at Arlington;Kang Chen and Yongwei Wu,Tsinghua University",
    "abstract": "Tiered Memory is critical to manage heterogeneous memory devices, such as Persistent Memory or CXL Memory. Existing works make difficult trade-offs between optimal data placement and costly data movement. With the advent of Intel Data Streaming Accelerator (DSA), a CPU-free hardware to move data between memory regions, data movement can be up to 4× faster than a single CPU core. However, the fine memory movement granularity in Linux kernel undermines the potential performance improvement. To this end, we have developed DSA-2LM, a new tiered memory system that adaptively integrates DSA into page migration. The proposed framework integrates fast memory migration workflow and adaptable concurrent data paths with well-tuned DSA configurations. Experimental results show that, compared to three representative tiered memory works: MEMTIS, TPP and NOMAD, DSA-2LM can achieve 20%, 30% and 16% performance improvement under real-world applications.",
    "link": "https://www.usenix.org/conference/atc25/presentation/liu-ruili",
    "session_title": "Software-Hardware Synergy: Accelerators, Memory, and Interconnects",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "167161cb-2d19-480e-9655-79954b93859d"
  },
  {
    "title": "Turbocharge ANNS on Real Processing-in-Memory by Enabling Fine-Grained Per-PIM-Core Scheduling",
    "authors": "Puqing Wu, Minhui Xie, Enrui Zhao, Dafang Zhang, and Jing Wang,Renmin University of China;Xiao Liang and Kai Ren,Kuaishou;Yunpeng Chai,Renmin University of China",
    "abstract": "Approximate Nearest Neighbor Search (ANNS) plays a key role in database and AI infrastructure. It exhibits extremely high memory intensity with a ∼1:1 compute-to-memory access ratio. Commodity Processing-in-Memory (PIM) hardware such as UPMEM is promising for overcoming the memory wall in ANNS. However, its reuse of the system DDR bus prevents the CPU and PIM cores from accessing memory simultaneously. This necessitates batch scheduling in existing systems, which, in turn, leads to severe underutilization in two scenarios: 1) inter-batch, where PIM remains idle while the CPU is copying data, and 2) intra-batch, caused by uneven load distribution of PIM cores in a batch.\nThis paper proposes an efficient PIM-capable ANNS system named PIMANN. We observe that each PIM core has an additional, undocumented, and little-known control interface (originally used for control commands like launching PIM kernels), which could be retrofitted for fine-grained arbitration of DDR bus access. Thus, PIMANN can break the traditional batching scheduling paradigm and adopt a fine-grained, per-PIM-core scheduling paradigm. With this key idea, PIMANN introduces 1) persistent PIM kernel technique to eliminate the idle state between two batches, and 2) per-PU query dispatching technique that dispatches queries based on the real-time load of PIM cores. Experiments show that PIMANN can boost throughput by 2.4-10.4× compared to existing ANNS systems on CPU or GPU. The implementation of PIMANN is available athttps://github.com/cds-ruc/PIM-ANNS.",
    "link": "https://www.usenix.org/conference/atc25/presentation/wu-puqing",
    "session_title": "Software-Hardware Synergy: Accelerators, Memory, and Interconnects",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "0c1f640e-8a90-4889-a3b2-9957a7db1c99"
  },
  {
    "title": "SwCC: Software-Programmable and Per-Packet Congestion Control in RDMA Engine",
    "authors": "Hongjing Huang, Jie Zhang, Xuzheng Chen, Ziyu Song, Jiajun Qin, and Zeke Wang,Zhejiang University",
    "abstract": "Many data centers adopt Remote Direct Memory Access (RDMA) to allow data center applications to achieve low latency and high throughput, while keeping minimal CPU overhead. The upper-layer applications keep evolving rapidly, and thus need congestion control algorithms (CCAs) that exist in the NIC hardware also to react correctly and timely, especially for a burstier ML workload. Even worse, the data center network will increase the line rate to 400 Gbps, even 800 Gbps soon. Therefore, how to reduce control loop delay for various CCAs becomes crucial to the performance of various applications. However, RDMA's hardwired CCA is not able to satisfy such a requirement.\nTo this end, we design and implement SwCC, an RDMA engine with on-NIC RISC-V cores that allows software-programmable and per-packet congestion control. To avoid the performance degradation caused by introducing the programmable RISC-V cores, SwCC carefully designs the 1) RISC-V core memory subsystem, 2) engine architecture, and 3) interaction between the RISC-V core and other NIC resources. Besides, SwCC provides a set of rich software APIs, allowing developers to deploy new CCAs with minimum engineering efforts.\nWe prototype SwCC using the Xilinx U280 FPGA. Experimental results demonstrate that SwCC achieves performance comparable to current commercial RDMA NICs (Mellanox ConnextX-5). Both SwCC and ConnectX-5 reach 3.1 µs control loop RTT and need 512B packet size to reach line-rate traffic (100 Gbps). In terms of flexibility, SwCC allows to use the C language to implement nearly all kinds of existing CCAs, e.g., rate-based CCAs, window-based CCAs, and credit-based CCAs. The potential ASIC design of SwCC can easily scale to higher network bandwidth.",
    "link": "https://www.usenix.org/conference/atc25/presentation/huang-hongjing",
    "session_title": "Software-Hardware Synergy: Accelerators, Memory, and Interconnects",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "19e0d0bd-60a2-4cef-9c3d-77a1cc07f65c"
  },
  {
    "title": "DRack: A CXL-Disaggregated Rack Architecture to Boost Inter-Rack Communication",
    "authors": "Xu Zhang and Ke Liu,SKLP, Institute of Computing Technology, CAS; and University of Chinese Academy of Sciences;Yuan Hui and Xiaolong Zheng,Huawei;Yisong Chang,SKLP, Institute of Computing Technology, CAS; and University of Chinese Academy of Sciences;Yizhou Shan,Huawei Cloud;Guanghui Zhang,Shandong University;Ke Zhang, Yungang Bao, Mingyu Chen, and Chenxi Wang,SKLP, Institute of Computing Technology, CAS; and University of Chinese Academy of Sciences",
    "abstract": "Data-intensive applications are scaling out across more and more racks, and boosted with advanced computing units with enhanced throughput, which necessitates increased NIC capacity and network bandwidth to transport inter-rack traffic. As a result, when running them over ToR-centric racks, inter-rack traffic can be bottlenecked at host NICs and core network due to oversubscription. However, we observe that, although a large volume of inter-rack traffic exists, the utilization of the host’s NICs within a rack remains low. If those underutilized NICs within a rack can be utilized by any host, inter-rack communication can be accelerated. Therefore, we propose DRack. At its core, DRack disaggregates all NICs within a rack from their hosts, forming a shared NIC pool. As the local memory bandwidth or the PCIe link at a host is much smaller than the NIC pool capacity, the host cannot fully utilize the NIC pool. DRack also disaggregates memory devices within a rack from their hosts, so that data from the NIC pool can be written and read from multiple memory with full capacity, while host processors can directly access the memory pool with memory semantics. We realize DRack with CXL as it supports device pooling and memory semantics, which is well-suited to our designs. We have implemented DRack prototype and evaluated it with real applications, such as DNN training and graph processing. The result shows that DRack can reduce the communication stage by an average of 37.3% compared to ToR-centric rack.",
    "link": "https://www.usenix.org/conference/atc25/presentation/zhang-xu",
    "session_title": "Software-Hardware Synergy: Accelerators, Memory, and Interconnects",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "fa5d7ce3-8f96-47ae-9858-c7cf64f50b82"
  },
  {
    "title": "ShieldReduce: Fine-Grained Shielded Data Reduction",
    "authors": "Jingyuan Yang, Jun Wu, Ruilin Wu, and Jingwei Li,University of Electronic Science and Technology of China;Patrick P. C. Lee,The Chinese University of Hong Kong;Xiong Li and Xiaosong Zhang,University of Electronic Science and Technology of China",
    "abstract": "Storage savings and data confidentiality are two primary yet conflicting goals in outsourced backup management. While deduplication-aware encryption has been extensively studied to make deduplication viable for encrypted data, it is incompatible with fine-grained delta and local compression for further storage savings. We present ShieldReduce, a secure outsourced storage system that aims for fine-grained shielded data reduction by applying deduplication, delta compression, and local compression to data in a trusted execution environment based on Intel SGX, so as to achieve high storage savings with security guarantees. To mitigate the I/Os of accessing base chunks for delta compression in SGX, ShieldReduce adopts bi-directional delta compression via a novel hybrid inline and offline compression design to maintain the physical locality of base chunks. Evaluation on various backup workloads shows that ShieldReduce achieves significant speedups over a shielded baseline without bi-directional delta compression, while maintaining comparable storage savings to fine-grained data reduction for plain data.",
    "link": "https://www.usenix.org/conference/atc25/presentation/yang-jingyuan",
    "session_title": "Securing the Stack: Attestation, Memory Protection, and Privacy",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "56fdfa5f-9ba4-4c1e-90e2-3020a9b3be82"
  },
  {
    "title": "MemoryTrap: Booby Trapping Memory to Counter Memory Disclosure Attacks with Hardware Support",
    "authors": "Chenke Luo,Wuhan University and Tulane University;Jiang Ming,Tulane University;Dongpeng Xu,University of New Hampshire;Guojun Peng and Jianming Fu,Wuhan University",
    "abstract": "Code-reuse attacks harvest reusable code gadgets from the vulnerable program's executable memory, posing a severe threat to the widely deployed executable-space protection. With the advent of address space layout randomization, a more complicated tactic of code-reuse attacks, known as just-in-time return-oriented programming (JIT-ROP), has emerged. JIT-ROP relies on repeated memory disclosure to search for available code gadgets in real-time. In response, a series of techniques have surfaced to impede memory disclosure or to prevent disclosed code from subsequently being executed. The most representative countermeasures involve enforcing a stricter memory permission policy, such as execute-only memory or destructive code reads. However, existing methods are either vulnerable to emerging code inference attacks or disallow  a mixture of code and data, which is a fundamental  property of the von Neumann architecture.\nIn this paper, we presentMemoryTrap, a hardware-assisted technique to counter direct memory disclosure attacks while simultaneously allowing the mixture of code and data. MemoryTrap sprinkles unreadable \"booby traps\" in the program at compile time. Once JIT-ROP attackers land in a booby trap area during memory disclosure at runtime, MemoryTrap can immediately detect and stop the ongoing attack. We take advantage of a hardware feature from Intel, Memory Protection Keys, to offer an efficient memory permission control mechanism for booby traps. MemoryTrap supports the security hardening of applications, shared libraries, and dynamically generated JIT code. Our security evaluation demonstrates that MemoryTrap can reliably thwart the threat of disclosing executable memory in real JIT-ROP attacks and synthetic code inference attacks. Performance experiments with both microbenchmarks and macrobenchmarks show that MemoryTrap only introduces negligible runtime overhead.",
    "link": "https://www.usenix.org/conference/atc25/presentation/luo",
    "session_title": "Securing the Stack: Attestation, Memory Protection, and Privacy",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "80f660ea-ba4b-4ce1-98fd-5e6075575d04"
  },
  {
    "title": "Separate but Together: Integrating Remote Attestation into TLS",
    "authors": "Carsten Weinhold,Barkhausen Institut;Muhammad Usama Sardar,TU Dresden;Ionuț Mihalcea and Yogesh Deshpande,Arm;Hannes Tschofenig,University of Applied Sciences Bonn-Rhein-Sieg;Yaron Sheffer,Intuit;Thomas Fossati,Linaro;Michael Roitzsch,Barkhausen Institut",
    "abstract": "Confidential computing based on Trusted Execution Environments (TEEs) allows software to run on remote servers without trusting the administrator. Remote attestation offers verifiable proof of the software stack and hardware elements comprising the TEE. However, setting up a secure channel to such a TEE requires a security guarantee that the channel actually terminates inside the TEE. TLS is an existing protocol for secure channel establishment, and in its most common use on the Web, it uses a key pair to assert the server identity encoded in a certificate.  Various approaches have been proposed to integrate remote attestation into TLS. Unfortunately, they all have shortcomings. In this paper, we present a protocol that combines the existing certificate-based assurances of TLS with remote attestation-based assurances in a way that they can be deployed independently and can fail independently. We design these two assurances to be additive without relying on each other, a property that has not been considered by existing approaches.",
    "link": "https://www.usenix.org/conference/atc25/presentation/weinhold",
    "session_title": "Securing the Stack: Attestation, Memory Protection, and Privacy",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "2e963e9c-96d8-417b-844e-694bc4bfd7d0"
  },
  {
    "title": "DDLumos: Understanding and Detecting Atomic DDL Bugs in DBMSs",
    "authors": "Zhiyong Wu,Tsinghua University;Jie Liang,Beihang University;Jingzhou Fu, Wenqian Deng, and Yu Jiang,Tsinghua University",
    "abstract": "Atomic Data Definition Language (Atomic DDL) is fundamental in DBMSs, ensuring that schema modifications are executed completely or not at all, preserving database integrity. Despite their critical importance, bugs persist in the Atomic DDL, leading to severe consequences such as data corruption and system inconsistencies. However, there is a limited understanding of the characteristics and root causes of these bugs. Furthermore, existing testing methods often fail to effectively identify Atomic DDL bugs, particularly under conditions of high concurrency and unexpected system failures.\nThis paper presents a comprehensive study of 207 Atomic DDL bugs across three widely used DBMSs. It reveals that Atomic DDL bugs primarily manifest as incorrect results, post-recovery data inconsistency, and system unavailability, which are mainly triggered by metadata conflicts between DDL statements. Based on these findings, we developed DDLUMOS, a testing tool that detects Atomic DDL bugs with metadata conflict-guided DDL synthesis and graph-based consistency analysis. We applied DDLUMOS to six popular DBMSs (e.g., PostgreSQL and MySQL) and found 73 previously unknown Atomic DDL bugs. DBMS vendors responded promptly, fixing 14 issues, highlighting the effectiveness of DDLUMOS in improving the reliability of DBMSs.",
    "link": "https://www.usenix.org/conference/atc25/presentation/wu-zhiyong",
    "session_title": "Securing the Stack: Attestation, Memory Protection, and Privacy",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "7619adab-d803-42c3-9193-e74431d23992"
  },
  {
    "title": "SpaceExit: Enabling Efficient Adaptive Computing in Space with Early Exits",
    "authors": "Jiacheng Liu,Shanghai Jiao Tong University and The Chinese University of Hong Kong;Xiaozhi Zhu, Tongqiao Xu, Xiaofeng Hou, and Chao Li,Shanghai Jiao Tong University",
    "abstract": "Advances in satellite technology and reduced launch costs have led to a proliferation of Earth observation (EO) satellites in low-Earth orbit (LEO). These satellites generate massive high-resolution imagery, creating a significant downlink bottleneck due to limited satellite-to-ground communication bandwidth. While orbit edge computing (OEC) can reduce data volume, existing static approaches fail to adapt to the varying complexity of satellite imagery, resulting in limited system performance and inefficient resource utilization.\nWe therefore propose SpaceExit, an integrated system for efficient adaptive computing on satellites. SpaceExit introduces three key components: (1) a geospatial-contextual adaptive detector that leverages both visual semantics and geospatial context to adjust processing complexity for each image, (2) a complexity-driven adaptive task scheduler that partitions images into tiles and allocates inference tasks across onboard devices based on content complexity and device capabilities, and (3) a satellite resource adaptive controller that ensures safe and efficient execution under changing conditions. Evaluations of diverse satellite settings and hardware platforms demonstrate that SpaceExit increases the performance by 5.2%-37.6% compared with the SoTA design.",
    "link": "https://www.usenix.org/conference/atc25/presentation/liu-jiacheng",
    "session_title": "Hardware-Specific Optimizations: Space, Accelerators, and AI Chips",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "660f0b60-c4c3-4c50-906e-3c86f2d6f312"
  },
  {
    "title": "XRT: An Accelerator-Aware Runtime for Accelerated Chip Multiprocessors",
    "authors": "Neel Patel and Mohammad Alian,Cornell University",
    "abstract": "Datacenter applications spend a considerable portion of compute resources executing common functions. This has led to the deployment of accelerators capable of executing these functions with higher performance and energy efficiency. At the same time, datacenter applications require microsecond-scale response times and low tail latency. To meet these strict requirements, recent Chip Multi-Processors (CMPs) incorporate several on-chip accelerators. This enables fast communication between the general-purpose cores, direct accelerator access to the on-chip memory subsystem, and scalable sharing of accelerator resources across applications running on many general-purpose cores. Despite hardware support for on-chip accelerators, a lack of support at the runtime level prevents their efficient use at scale.\nOur key insight in this work is that current runtimes are unsuitable for applications that make heavy use of on-chip accelerators, yielding suboptimal throughput–sometimes even worse than a system without accelerators. To address this problem, we develop XRT, a runtime for accelerated CMPs designed to scale to many-core, many-accelerator CPUs. Across a set of representative services, XRT achieves up to 3.2× higher throughput-under-SLO compared to an unoptimized runtime and never experiences slowdowns compared to a system that executes all request processing on general-purpose cores.",
    "link": "https://www.usenix.org/conference/atc25/presentation/patel",
    "session_title": "Hardware-Specific Optimizations: Space, Accelerators, and AI Chips",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "00a8c7e6-6a71-4a3d-aebf-a0933b0eecb2"
  },
  {
    "title": "DShuffle: DPU-Optimized Shuffle Framework for Large-scale Data Processing",
    "authors": "Chen Ding, Sicen Li, and Kai Lu,Wuhan National Laboratory for Optoelectronics, Huazhong University of Science and Technology;Ting Yao, Daohui Wang, and Huatao Wu,Huawei Cloud;Jiguang Wan, Zhihu Tan, and Changsheng Xie,Wuhan National Laboratory for Optoelectronics, Huazhong University of Science and Technology",
    "abstract": "Shuffle is a crucial operation in distributed data processing, responsible for transferring intermediate data between nodes. However, it is highly resource-intensive, consuming significant CPU power and often becoming a major performance bottleneck, particularly in data analysis tasks involving large datasets.\nIn this paper, we introduce DShuffle, an efficient framework that leverages DPUs to offload and accelerate shuffle operations. The DPU, with its specialized compute and I/O hardware, is ideally suited for offloading on-path shuffle tasks. However, its complex architecture requires careful design for effective offloading. To fully harness the DPU’s capabilities, DShuffle divides the shuffle process into three stages: serialization, preprocessing, and I/O, and organizes them in a pipelined manner for efficient execution on the DPU. By leveraging high-concurrency memory access units to accelerate the serialization phase and using the DPU to directly write intermediate data to disk, DShuffle effectively accelerates the shuffle process and eliminates unnecessary data copies. Our experiments on a real DPU platform with industrial-grade Spark demonstrate that DShuffle enhances both host CPU and I/O efficiency and effectively reduce Spark task completion times.",
    "link": "https://www.usenix.org/conference/atc25/presentation/ding",
    "session_title": "Hardware-Specific Optimizations: Space, Accelerators, and AI Chips",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "5ebe7bc2-94cf-4832-92d0-112e5c4bfaab"
  },
  {
    "title": "Accelerating Model Training on Ascend Chips: An Industrial System for Profiling, Analysis and Optimization",
    "authors": "Yuhang Zhou, Zibo Wang, Zhibin Wang, Ruyi Zhang, Chen Tian, Xiaoliang Wang, Wanchun Dou, and Guihai Chen,Nanjing University;Bingqiang Wang, Yonghong Tian, Yan Zhang, and Hui Wang,Peng Cheng Laboratory;Fuchun Wei, Boquan Sun, Jingyi Zhang, Bin She, Teng Su, Yifan Yao, Chunsheng Li, Ziyang Zhang, and Yaoyuan Wang,Huawei;Bin Zhou,Shandong University;Guyue Liu,Peking University",
    "abstract": "Training large-scale deep learning (DL) models is a resource-intensive and time-consuming endeavor, yet optimizing training efficiency poses significant challenges. The sporadic performance fluctuations during long training require advanced profiling capabilities. It is not easy to perform comprehensive and accurate bottleneck analysis amidst numerous influencing factors. Selecting effective optimization strategies without proper guidance further complicates the process. This paper shares our practical insights on optimizing training on Huawei Ascend chips based on three years of experience with 135 typical cases. We propose a systematic optimization system, Hermes, including a lightweight profiling approach, a hierarchical bottleneck analysis framework, and an optimization advisor. Our real-world experiments demonstrate significant acceleration in training for models like PanGu-α, MobileNetV1, and MoE (Mixture of Experts), with respective speedups of 3.05×, 1.91×, and 1.19×.",
    "link": "https://www.usenix.org/conference/atc25/presentation/zhou",
    "session_title": "Hardware-Specific Optimizations: Space, Accelerators, and AI Chips",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "40caf6b2-9712-4959-8c61-d095aa1a76dd"
  },
  {
    "title": "CAFault: Enhance Fault Injection Technique in Practical Distributed Systems via Abundant Fault-Dependent Configurations.",
    "authors": "Yuanliang Chen, Fuchen Ma, Yuanhang Zhou, Zhen Yan, and Yu Jiang,Tsinghua University",
    "abstract": "To ensure high reliability and availability, distributed systems are designed to be resilient to various faults in complex environments.  Fault injection techniques are commonly used to test whether a distributed system can correctly handle different potential faults. However, existing fault injection testing is typically performed under a fixed default configuration, overlooking the impact of varying configurations (which can differ in real-world applications) on testing execution paths.  This results in many vulnerabilities being overlooked.\nIn this work, we introduce CAFault (ConfigurationAwareFault), a general testing framework for enhancing existing fault injection techniques via abundant fault-dependent configurations. Considering the vast combinatorial search space between fault inputs and configuration inputs, CAFault first constructs a Fault-Dependent model(FDModel) to prune the test input space and generate high-quality configurations. Second, to effectively explore the fault input space under each configuration, CAFault introduces fault-handling guided fuzzing, which constantly detects bugs hidden in deep paths. We implemented and evaluated CAFault on four widely used distributed systems, including HDFS, ZooKeeper, MySQL-Cluster, and IPFS. Compared with the state-of-the-art fault injection tools CrashFuzz, Mallory, and Chronos, CAFault covers 31.5%, 29.3%, and 81.5% more fault tolerance logic. Furthermore, CAFault has detected 16 serious previously unknown bugs.",
    "link": "https://www.usenix.org/conference/atc25/presentation/chen-yuanliang",
    "session_title": "Finding Faults: Concurrency, Numerics, and Kernel Fuzzing",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "b40a1755-f98b-4a60-8e29-2ccde67173dc"
  },
  {
    "title": "Revealing Floating-Point Accumulation Orders in Software/Hardware Implementations",
    "authors": "Peichen Xie, Yanjie Gao, Yang Wang, and Jilong Xue,Microsoft Research",
    "abstract": "Accumulation-based operations, such as summation and matrix multiplication, are fundamental to numerous computational domains. However, their accumulation orders are often undocumented in existing software and hardware implementations, making it difficult for developers to ensure consistent results across systems. To address this issue, we introduce FPRev, a diagnostic tool designed to reveal the accumulation order in the software and hardware implementations through numerical testing. With FPRev, developers can identify and compare accumulation orders, enabling developers to create reproducible software and verify implementation equivalence.\nFPRev is a testing-based tool that non-intrusively reveals the accumulation order by analyzing the outputs of the tested implementation for distinct specially designed inputs. Employing FPRev, we showcase the accumulation orders of popular libraries (such as NumPy and PyTorch) on CPUs and GPUs (including GPUs with specialized matrix accelerators such as Tensor Cores). We also validate the efficiency of FPRev through extensive experiments. FPRev exhibits a lower time complexity compared to the basic solution. FPRev is open-sourced athttps://github.com/peichenxie/FPRev.",
    "link": "https://www.usenix.org/conference/atc25/presentation/xie",
    "session_title": "Finding Faults: Concurrency, Numerics, and Kernel Fuzzing",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "c4a9cde3-c424-4b6a-a2bd-3ccc366f386d"
  },
  {
    "title": "Inferring Likely Counting-related Atomicity Program Properties for Persistent Memory",
    "authors": "Yunmo Zhang and Junqiao Qiu,City University of Hong Kong;Hong Xu,The Chinese University of Hong Kong;Chun Jason Xue,MBZUAI",
    "abstract": "Persistent Memory (PM) technologies provide fast, byte-addressable access to durable storage but face crash consistency challenges, motivating extensive work of testing and verification of PM programs. Central to PM testing tools is the specification of program properties for object persistence order and atomicity. Although several methods have been proposed for inferring PM program properties, most focus on ordering properties, offering limited support for atomicity properties.\nThis paper explores a class of important atomicity properties between the container-like arrays and their logical size variables, referred to as the counting correlation, which are common in PM programs but exceed the capability of existing approaches. We propose invariants to capture the necessary behaviors of counting-correlated variables, utilize symbolic range analysis to extract PM program behaviors, and encode them into SMT constraints. These constraints are checked against the invariants to infer likely PM program properties. We demonstrate the utility of the inferred properties by leveraging them for PM bug detection, which discovers 14 atomicity bugs (including 11 new bugs) in real-world PM programs.",
    "link": "https://www.usenix.org/conference/atc25/presentation/zhang-yunmo",
    "session_title": "Finding Faults: Concurrency, Numerics, and Kernel Fuzzing",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "fe940d2a-4c8b-47a1-a2e3-93c676e3ad53"
  },
  {
    "title": "Optimizing Input Minimization in Kernel Fuzzing",
    "authors": "Hui Guo,East China Normal University;Hao Sun,ETH Zurich;Shan Huang, Ting Su, and Geguang Pu,East China Normal University;Shaohua Li,The Chinese University of Hong Kong",
    "abstract": "Ensuring the reliability and security of an operating system (OS) kernel is a critical and challenging task. To this end,coverage-guided kernel fuzzinghas been employed as an effective technique for finding kernel bugs. Specifically, in kernel fuzzing,input minimizationis one critical stage to provide short, coverage-preserving seeds for improving the efficacy of fuzzing. However, we observe that the cost of the minimization –- taking over half of the fuzzing resources –- significantly limits the potential of kernel fuzzing.\nTo the best of our knowledge, no prior work explores and mitigates the preceding problem in kernel fuzzing. To this end, we introduce and design two general and novel optimization strategies –-influence-guided call removalandtype-informed argument simplification–- for reducing the minimization cost. Thekey ideaof these two strategies is to reduce the number of dynamic program executions needed for verifying whether  the new coverage achieved by the inputs is always preserved.\nWe optimized the input minimization stage by our strategies in Syzkaller, the most popular and representative kernel fuzzer, resulting in a prototype named SyzMini. Our evaluation shows that SyzMini can significantly reduce the minimization cost by 60.7%. Moreover, SyzMini improves branch coverage by 12.5%, and finds 1.7~2X more unique bugs. On the latest upstream kernel version, Syzmini has found 13 previously unknown bugs, all of which have been confirmed and four have already been fixed. Our optimization strategies also show the general applicability for improving the effectiveness of other kernel fuzzers. We have made our implementation of SyzMini publicly available athttps://github.com/ecnusse/SyzMini.",
    "link": "https://www.usenix.org/conference/atc25/presentation/guo",
    "session_title": "Finding Faults: Concurrency, Numerics, and Kernel Fuzzing",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "d5d8f7a7-3e40-4550-9dc0-2924640ed96c"
  },
  {
    "title": "IRHash: Efficient Multi-Language Compiler Caching by IR-Level Hashing",
    "authors": "Tobias Landsberg and Johannes Grunenberg,Leibniz Universität Hannover;Christian Dietrich,Technische Universität Braunschweig;Daniel Lohmann,Leibniz Universität Hannover",
    "abstract": "Compilation caches (CCs) save time, energy, and money by avoiding redundant compilations. They are provided by means of compiler wrappers (Ccache, sccache, cHash) or native build system features (Bazel, Buck2). Conceptually, a CC pays off if the achieved savings by cache hits outweigh the extra costs for cache lookups. Thus, most techniques try to detect a cache hit early in the compilation process by hashing the (preprocessed/tokenized) source code, but hashing the AST has also been suggested to achieve even higher end-to-end savings, as the increased accuracy outweighs the additional parsing costs. Technically, all these CCs are currently limited to C or C-style languages.\nIn this paper we take the conceptual question of the “right” lookup level for compiler caches one step further onto the IR level. We provide IRHash, an IR-level CC for LLVM that not only offers higher accuracy than the previous works but can also support all languages with an LLVM backend.\nWe evaluate IRHash against Ccache and cHash based on the development history of 16 open-source projects written in C, C++, Fortran, and Haskell. With an average build time reduction of 19% across all C projects, IRHash provides better end-to-end savings than Ccache (10%) and cHash (16%), while additionally supporting more languages.",
    "link": "https://www.usenix.org/conference/atc25/presentation/landsberg",
    "session_title": "Finding Faults: Concurrency, Numerics, and Kernel Fuzzing",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "bcb9f76a-3a99-4e35-8d96-fe66841f81dd"
  },
  {
    "title": "On-Demand Container Partitioning for Distributed ML",
    "authors": "Giovanni Bartolomeo, Navidreza Asadi, Wolfgang Kellerer, and Jorg Ott,Technical University of Munich;Nitinder Mohan,TU Delft",
    "abstract": "As machine learning (ML) models grow in complexity and scale, distributed deployment across multiple devices has become essential for ensuring performance and scalability. However, the dynamic nature of distributed ML, where models must be frequently retrained, partitioned, and updated, exposes severe limitations in the current de-facto container-based model deployment. Specifically, the layered architecture of container filesystems is not well-suited for handling fine-grained model updates and partitioned ML deployments, leading to inefficient rebuilds and long delays.\nIn this paper, we present 2DFS, a novel two-dimensional filesystem that enables independent updates, caching, and distribution of ML model components. We design and develop a complete ecosystem, including a builder, registry, and cache hierarchy, to streamline the build and deployment processes of ML models leveraging 2DFS. Our comprehensive evaluation of 14 real-world ML models demonstrates that 2DFS achieves up to 56x faster build times, 25x better caching efficiency, while providing on-demand image partitioning with negligible overhead. 2DFS is fully OCI-compliant and integrates seamlessly with existing infrastructures and container workflows.",
    "link": "https://www.usenix.org/conference/atc25/presentation/bartolomeo",
    "session_title": "Advanced Distributed Systems: ML, Data, and Performance Tuning",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "bef41f45-b5f5-4964-b1d9-863d49289513"
  },
  {
    "title": "PathWeaver: A High-Throughput Multi-GPU System for Graph-Based Approximate Nearest Neighbor Search",
    "authors": "Sukjin Kim, Seongyeon Park, Si Ung Noh, Junguk Hong, Taehee Kwon, Hunseong Lim, and Jinho Lee,Seoul National University",
    "abstract": "Graph-based Approximate Nearest Neighbor Search (ANNS) is widely adopted in numerous applications, such as recommendation systems, natural language processing, and computer vision. While recent works on GPU-based acceleration have significantly advanced ANNS performance, the ever-growing scale of datasets now demands efficient multi-GPU solutions. However, the design of existing works overlooks multi-GPU scalability, resulting in naïve approaches that treat additional GPUs as a means to extend memory capacity for large datasets. This inefficiency arises from partitioning the dataset and independently searching for data points similar to the queries in each GPU. We therefore propose PathWeaver, a novel multi-GPU framework designed to scale and accelerate ANNS for large datasets. First, we propose pipelining-based path extension, a GPU-aware pipelining mechanism that reduces prior work’s redundant search iterations by leveraging GPU-to-GPU communication. Second, we design ghost staging that leverages a representative dataset to identify optimal query starting points, reducing the search space for challenging queries. Finally, we introduce direction-guided selection, a data selection technique that filters irrelevant points early in the search process, minimizing unnecessary memory accesses and distance computations. Comprehensive evaluations across diverse datasets demonstrate that PathWeaver achieves 3.24× geomean speedup and up to 5.30× speedup on 95% recall rate over state-of-the-art multi-GPU-based ANNS frameworks.",
    "link": "https://www.usenix.org/conference/atc25/presentation/kim",
    "session_title": "Advanced Distributed Systems: ML, Data, and Performance Tuning",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "9ff72d10-271b-4bc7-9427-f6f40fba9199"
  },
  {
    "title": "Universal Checkpointing: A Flexible and Efficient Distributed Checkpointing System for Large-Scale DNN Training with Reconfigurable Parallelism",
    "authors": "Xinyu Lian,University of Illinois Urbana–Champaign;Sam Ade Jacobs, Lev Kurilenko, and Masahiro Tanaka,Microsoft;Stas Bekman,Snowflake;Olatunji Ruwase,Microsoft;Minjia Zhang,University of Illinois Urbana–Champaign",
    "abstract": "Deep neural network (DNN) training continues to scale rapidly in terms of model size, data volume, and sequence length, to the point where multiple machines are required to fit large models for training. Different distributed and parallel training strategies have been developed to support large-scale DNN training by partitioning the training state across GPUs. However, existing DNN training systems provide very limited support for reconfiguring parallelism strategies in the middle of the training via checkpointing. This limitation arises because distributed checkpoints are tightly coupled to specific model parallelism and hardware configurations, preventing large-scale training jobs from efficiently adapting to hardware failures or resource elasticity.\nThis paper presentsUniversal Checkpointing(UCP), a novel checkpointing system that enables flexible and efficient DNN training with reconfigurable parallelism. UCP overcomes challenges in existing systems by decoupling checkpoint structure from parallel training strategies and hardware configurations. In addition, we present a pattern-based reconfiguration pipeline that enables automatic, flexible, and efficient mapping of checkpoint state to various parallelism strategies. Evaluation on a range of DNN models, including state-of-the-art dense and sparse LLMs, shows that UCP enables reconfiguration for a broader set of widely used parallelism strategies than existing solutions while adding negligible reconfiguration cost. UCP has been successfully employed in real LLM training workloads, greatly enhancing their flexibility and resilience to dynamic hardware environments.",
    "link": "https://www.usenix.org/conference/atc25/presentation/lian",
    "session_title": "Advanced Distributed Systems: ML, Data, and Performance Tuning",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "087a9dba-640e-4c93-9945-6ba71902cf38"
  },
  {
    "title": "Towards High-Performance Transactional Stateful Serverless Workflows with Affinity-Aware Leasing",
    "authors": "Jianjun Zhao, Haikun Liu, Shuhao Zhang, and Haodi Lu,Huazhong University of Science and Technology;Yancan Mao,School of Computing, National University of Singapore;Zhuohui Duan, Xiaofei Liao, and Hai Jin,Huazhong University of Science and Technology",
    "abstract": "Function-as-a-Service(FaaS) is the most prevalent serverless computing paradigm, offering significant flexibility to develop, deploy, and operate cloud applications. However, traditional FaaS frameworks face significant challenges in operating transactional stateful workflows which often involve multiple functions with shared state. Previous solutions rely on external datastores to manage shared state, suffering from high communication overhead to guarantee transactional consistency for stateful workflows.\nIn this paper, we present RTSFaaS, an RDMA-capable transactional stateful FaaS framework that achieves high performance while guaranteeing transactional consistency. RTSFaaS exploits a lease-based concurrency control protocol to dynamically assign and transfer leases among workers to achieve concurrency control. Specifically, RTSFaaS incorporates two key designs: (1) an affinity-aware lease assignment mechanism that improves the benefit of caching by dynamically assigning data leases to selected workers according to the data function affinity, and (2) an RDMA-capable dynamic lease transferring mechanism to reduce the cost of locking by serializing concurrent data accesses with one-sided RDMA primitives. Experimental results show that RTSFaaS achieves up to 5× and 20× performance speedup compared with state-of-the-art transactional stateful FaaS platforms–Boki and Beldi, and up to 1.7× and 2.1× performance improvement when their concurrency control protocols implemented for RDMA networks are applied to RTSFaaS.",
    "link": "https://www.usenix.org/conference/atc25/presentation/zhao-jianjun",
    "session_title": "Advanced Distributed Systems: ML, Data, and Performance Tuning",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "34145a94-94c4-4682-af07-bd2e80c03210"
  },
  {
    "title": "Swift: Fast Performance Tuning with GAN-Generated Configurations",
    "authors": "Chao Chen and Shixin Huang,Shenzhen Institutes of Advanced Technology, Chinese Academy of Sciences;Xuehai Qian,Tsinghua University;Zhibin Yu,Shenzhen Institutes of Advanced Technology, Chinese Academy of Sciences; and Shuhai Lab, Huawei Cloud",
    "abstract": "This paper proposes Swift, a novel Bayesian Optimization  (BO) based parameter configuration tuning approach for big  data systems. The key idea is to leverage a generative AI  approach, generative adversarial network (GAN) , to generate  high quality configurations based on the evaluated configuration with the highest performance. Mixing these configurations with randomly generated ones has the effect of skewing search space toward the optimal configuration, leading to faster convergence and less optimization time. Our substantial experimental results on Apache Flink, Spark programs, and an industrial setting show that Swift significantly improves the performance of data analytics over state-of-the-art approaches in dramatically shorter time.",
    "link": "https://www.usenix.org/conference/atc25/presentation/chen-chao",
    "session_title": "Advanced Distributed Systems: ML, Data, and Performance Tuning",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "3576d999-6748-462c-b2d8-8bc06fd7c957"
  },
  {
    "title": "PMR: Fast Application Response via Parallel Memory Reclaim on Mobile Devices",
    "authors": "Wentong Li,MoE Engineering Research Center of Software/Hardware Co-Design Technology and Application, East China Normal University, Shanghai, China; and School of Computer Science and Technology, East China Normal University;Li-Pin Chang,National Yang Ming Chiao Tung University, Taiwan;Yu Mao,City University of Hong Kong, Hong Kong; and MBZUAI, Abu Dhabi;Liang Shi,MoE Engineering Research Center of Software/Hardware Co-Design Technology and Application, East China Normal University, Shanghai, China; and School of Computer Science and Technology, East China Normal University",
    "abstract": "Mobile applications exhibit increasingly high memory demands, making efficient memory management critical for enabling fast and responsive user experiences. However, our analysis of Android systems reveals inefficiencies in the current kernel-level memory reclaim design, which struggles to meet the performance demands of modern apps and fails to exploit upgraded storage devices. To address this challenge, we propose PMR, a parallel memory reclaim scheme. PMR introduces two key techniques: proactive page shrinking (PPS) and storage-friendly page writeback (SPW). PPS enhances the memory reclaim process by decoupling the time-consuming steps of page shrinking and page writeback for parallel execution, while SPW optimizes write I/O operations through batched unmapping of victim pages for bulk, efficient writeback. Experimental results on real-world mobile devices demonstrate that PMR can improve application response times by up to 43.6% compared to the original Android memory reclaim approach.",
    "link": "https://www.usenix.org/conference/atc25/presentation/li-wentong",
    "session_title": "OS, Mobile, and Reliability Challenges",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "b3f27b11-58b4-4886-90d2-eeee29ccd572"
  },
  {
    "title": "SAVE: Software-Implemented Fault Tolerance for Model Inference against GPU Memory Bit Flips",
    "authors": "Wenxin Zheng, Bin Xu, Jinyu Gu, and Haibo Chen,Shanghai Jiao Tong University",
    "abstract": "Machine learning models are used in safety-critical edge applications such as autonomous driving, industrial robots, and satellites. However, GPU memory bit flips can significantly reduce the model accuracy.  Existing mitigations either compromise accuracy or introduce substantial overhead.\nOur insight is thatnot all hardware bits are created equalandbit flips vary in their impact on model inference. Specifically, for the GPU memory, modern AI accelerators provide bit-flip-free but small reliable memory. For the model inference, due to nonlinear activation functions in the model, some bits are naturally robust against flips, while other vulnerable bits can silently corrupt results. Thus, we prioritize the allocation of vulnerable bits' computations in the reliable memory to enhance the robustness of the model inference.\nWe propose SAVE, a software-implemented fault tolerance system that protects model inference without modifying the model and with minimal performance impact.  SAVE operates in four stages:Selection to identify vulnerable bits based on the intrinsic characteristics of model inference,Allocation to prioritize computations related to more vulnerable bits in reliable memory,Verification to efficiently detect errors through asynchronous CPU checks, andEdit to recover from detected faults. Evaluation across computer vision, robotics, and decision-making models shows that SAVE maintains model accuracy even under 4K bit flips while incurring less than 9% performance overhead.",
    "link": "https://www.usenix.org/conference/atc25/presentation/zheng",
    "session_title": "OS, Mobile, and Reliability Challenges",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "ab3d9250-10e3-472a-a99d-aa99e24125a8"
  },
  {
    "title": "Identifying and Analyzing Pitfalls in GNN Systems",
    "authors": "Yidong Gong, Arnab Kanti Tarafder, Saima Afrin, and Pradeep Kumar,William & Mary",
    "abstract": "Papers on recent graph neural network (GNN) systems have established a clear trend of not showing training accuracy results, and directly or indirectly relying on smaller datasets for evaluations majorly. Our in-depth analysis shows that the omission of accuracy results leads to a chain of pitfalls in the system design, implementation, framework integration, and evaluation process, questioning the practicality of many of the proposed system optimizations, and affecting conclusions, lessons learned. We analyze many GNN systems and show the fundamental impact of these pitfalls. We further develop hypotheses, recommendations, and evaluation methodologies, and provide future directions. Finally, a new prototype, GRAPHPY, is developed to show the quantitative impact of the pitfall and establish baseline memory consumption and runtime information for GNN training. GRAPHPY also establishes a new line of optimizations rooted in solving the system-design pitfalls efficiently and practically that can be productively integrated into prior works.",
    "link": "https://www.usenix.org/conference/atc25/presentation/gong",
    "session_title": "OS, Mobile, and Reliability Challenges",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "771dc347-d3b2-4fb2-b8f1-6da6a9dae896"
  },
  {
    "title": "Bluetooth Low Energy Security Testing with Combinatorial Methods",
    "authors": "Dominik-Philip Schreiber, Manuel Leithner, and Jovan Zivanovic,SBA Research;Dimitris E. Simos,SBA Research, Salzburg University of Applied Sciences, and Paris Lodron University of Salzburg",
    "abstract": "Wireless protocols such as Bluetooth Low Energy (BLE) play a vital role in ubiquitous computing and Internet of Things (IoT) devices. Numerous vulnerabilities in a variety of devices and components of the BLE stack have been uncovered in recent years, potentially affecting millions of customers. Being notoriously difficult to test due to the level of abstraction commonly enforced by the Host Controller Interface (HCI), a recent work successfully implements a fuzzing framework utilizing a custom firmware for a BLE device. However, fuzzing is inherently probabilistic, which may lead to faults remaining undiscovered. In this work, we enhance the aforementioned method with a Combinatorial Security Testing (CST) approach that provides a guaranteed degree of input space coverage. Through an evaluation targeting 10 BLE devices and a variety of firmware versions, we identify a total of 19 distinct issues, replicating findings of the previous work and uncovering additional faults. We additionally provide a performance overview of our tool and the original fuzzer, comparing their execution time and fault detection capabilities.",
    "link": "https://www.usenix.org/conference/atc25/presentation/schreiber",
    "session_title": "OS, Mobile, and Reliability Challenges",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "dae2e8df-8244-42a3-b058-959e45a920bb"
  },
  {
    "title": "Resource Multiplexing in Tuning and Serving Large Language Models",
    "authors": "Yongjun He and Haofeng Yang,ETH Zurich;Yao Lu,National University of Singapore;Ana Klimovic and Gustavo Alonso,ETH Zurich",
    "abstract": "Large language models (LLMs) have been increasingly adopted in a variety of application scenarios. However, in spite of the high demand for both tuning and inference, GPUs are often underutilized because they are devoted to a single task. A common argument for single-purpose deployments is the need to meet strict service-level objectives (SLOs). As LLM workloads become more complex, there are, indeed, significant challenges in achieving high utilization while still guaranteeing the necessary low latency. In this paper, we present LLMStation, a flexible spatial-temporal multiplexing and scheduling system for concurrent LLM fine-tuning and inference. LLMStation adopts several novel approaches, including a new iteration-level multitasking scheduling mechanism, an Autograd engine that transforms a tuning task into a suspendable pipeline, and an inference engine capable of batching inference and tuning requests. Our evaluation shows that LLMStation delivers 1.38× to 14.77× the throughput of state-of-the-art systems while meeting inference latency SLOs. These performance gains remain under various setups and workloads, proving LLMStation to be an effective tool to increase the efficiency of LLM deployments.",
    "link": "https://www.usenix.org/conference/atc25/presentation/he-yongjun",
    "session_title": "Intelligent Resource Management: Federation, Colocation, and ML for Systems",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "1efbb388-e3e8-4f0f-b2cc-7f679321d8f2"
  },
  {
    "title": "Colocating ML Inference and Training with Fast GPU Memory Handover",
    "authors": "Jiali Wang, Yankui Wang, Mingcong Han, and Rong Chen,Institute of Parallel and Distributed Systems, Shanghai Jiao Tong University",
    "abstract": "This paper presents SIRIUS, an efficient colocation system that enables spatial sharing of GPU resources between machine learning (ML) inference and training tasks. To meet strict latency SLOs, SIRIUS prioritizes inference tasks, allowing them to utilize all GPU resources without restriction and interference. Meanwhile, it concurrently runs training tasks on leftover resources to improve throughput and GPU utilization. SIRIUS is novel in three ways. First, it leverages the characteristics of gradient computation in a batch to adjust the memory consumption of training tasks in a few milliseconds. Second, it explicitly manages memory reclamation for training, ensuring a thorough and safe memory handover process. Third, it employs an SLO-aware memory reallocation strategy to mitigate memory initialization overhead and prevent thrashing when facing frequently fluctuating workloads. Our evaluation shows that SIRIUS outperforms existing state-of-the-art colocation approaches, improving inference SLO compliance by an average of 57.0% (up to 97.0%) and training throughput by 2.2× (up to 13.7×).",
    "link": "https://www.usenix.org/conference/atc25/presentation/wang-jiali",
    "session_title": "Intelligent Resource Management: Federation, Colocation, and ML for Systems",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "881f1326-9bd3-4dd0-b4ce-05ca4be23aa3"
  },
  {
    "title": "AssyLLM: Efficient Federated Fine-tuning of LLMs via Assembling Pre-trained Blocks",
    "authors": "Shichen Zhan, Li Li, and Chengzhong Xu,University of Macau",
    "abstract": "Federated Learning (FL) provides a promising way to fine-tune Large Language Models (LLMs) to downstream mobile tasks while preserving data privacy. However, the intensive memory footprint  prevents large amount of edge devices from contributing to the fine-tuning process with their own private data.\nTo this end, we introduce AssyLLM, an innovative framework that conducts fine-tuning in a memory-efficient manner through directly assembling the pre-trained transformer blocks. The core idea of AssyLLM is to decompose a pre-trained LLM into discrete blocks. These blocks are iteratively selected based on the local corpus distributed across various devices, and subsequently assembled to form a novel LLM tailored for downstream tasks. In this way, high fine-tuning efficiency can be achieved through avoiding the backpropagation process adopted in traditional fine-tuning approaches. Specifically, AssyLLM features four core components: 1) Block Comparator,  2) Elastic Adapter, 3) Block Quanter, and 4) Block Swapper. Block Comparator is designed to assess the compatibility between two blocks, facilitating the selection of appropriate blocks for assembling.\nAfter that, Elastic Adapter creates customized adapter configurations that address the specific structural differences between the blocks for seamless concatenation between the selected blocks. Meanwhile,  Block Quanter is proposed to adjust precision of related weights based on the block output activation in order to reduce the extra memory overhead caused by retaining the candidate blocks while preserving the performance of the assembled model.  Moreover, in order to further increase the scalability of the candidate blocks for better fine-tuning performance while guaranteeing fine-tuning progress,  Block Swapper is designed to optimize the swapping pipeline by incorporating block correlation metrics. AssyLLM is comprehensively evaluated on multiple benchmark datasets of varying complexity. Compared to traditional methods, AssyLLM improves accuracy by up to 18.26%, achieves up to 30.04x speedup, and significantly reduces memory consumption by up to 92%.",
    "link": "https://www.usenix.org/conference/atc25/presentation/zhan",
    "session_title": "Intelligent Resource Management: Federation, Colocation, and ML for Systems",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "26bc8a64-d526-4d97-90d0-87f3c78fed1b"
  },
  {
    "title": "Learning-Enhanced High-Throughput Pattern Matching Based on Programmable Data Plane",
    "authors": "Guanglin Duan and Yucheng Huang,Peng Cheng Laboratory, Tsinghua Shenzhen International Graduate School;Zhengxin Zhang,Peng Cheng Laboratory, Tsinghua Shenzhen International Graduate School, and Cornell University;Qing Li and Dan Zhao,Peng Cheng Laboratory;Zili Meng,Hong Kong University of Science and Technology;Dirk Kutscher,Hong Kong University of Science and Technology (Guangzhou);Ruoyu Li,Shenzhen University and Peng Cheng Laboratory;Yong Jiang,Tsinghua Shenzhen International Graduate School;Mingwei Xu,Tsinghua University",
    "abstract": "Pattern matching is critical in various network security applications. However, existing pattern matching solutions struggle to maintain high throughput and low cost in the face of growing network traffic and increasingly complex patterns. Besides, managing and updating these systems is labor intensive, requiring expert intervention to adapt to new patterns and threats. In this paper, we proposeTrochilus, a novel framework that enables high-throughput and accurate pattern matching directly on programmable data planes, making it highly relevant to modern large-scale network systems. Trochilus innovated by combining the learning ability of model inference with the high-throughput and cost-effective advantages of data plane processing. It leverages abyte-level recurrent neural network (BRNN)to model complex patterns, preserving expert knowledge while enabling automated updates for sustained accuracy. To address the challenge of limited labeled data, Trochilus proposes asemi-supervised knowledge distillation (SSKD)mechanism, converting the BRNN into a lightweight, data-plane-friendlysoft multi-view forest (SMF), which can be efficiently deployed as match-action tables. Trochilus minimizes the need for expensive TCAM through a novel entry cluster algorithm, making it scalable to large network environments. Our evaluations show that Trochilus achieves multi-Tbps throughput, supports various pattern sets, and maintains high accuracy through automatic updates.",
    "link": "https://www.usenix.org/conference/atc25/presentation/duan-guanglin",
    "session_title": "Intelligent Resource Management: Federation, Colocation, and ML for Systems",
    "conference_name": "ATC",
    "date": "2025-07-07",
    "paper_id": "bf780c63-131a-4a2f-9f4f-61e8db682ef8"
  }
]